name: "App Update Check"
description: "Checks for app updates"
inputs:
  last-version-file:
    required: true
    description: "Filepath to the last version file that stores the app versions checked"
  oculus-token:
    required: true
    description: "Token to access the oculus api"
outputs:
  update-available:
    value: "${{ steps.update-available.outputs.value }}"
    description: "Whether an update was available"
  old-version:
    value: "${{ steps.old-ver.outputs.version }}"
    description: "The old version that was stored"
  new-version:
    value: "${{ steps.new-ver.outputs.version }}"
    description: "The new version that was downloaded"
runs:
  using: 'composite'
  steps:
    - uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x

    - run: echo "version=$(cat ${{ inputs.last-version-file }})" >> ${GITHUB_OUTPUT}
      id: old-ver
      shell: bash

    - run: deno run --allow-read --allow-write --allow-net --allow-env ./scripts/deno/appdownload.ts
      env:
        OCULUS_TOKEN: ${{ inputs.oculus-token }}
      shell: bash

    - run: echo "version=$(cat ${{ inputs.last-version-file }})" >> ${GITHUB_OUTPUT}
      id: new-ver
      shell: bash

    - run: echo "value=${{ steps.new-ver.outputs.version != steps.old-ver.outputs.version }}" >> "$GITHUB_OUTPUT"
      id: update-available
      shell: bash
