name: "Install and run cordl"
description: "Installs corld using cargo and then runs it with inputs"
inputs:
  cordl-git:
    required: true
    description: "Which repo to install from"
  cordl-ref:
    required: false
    description: "Which commit to use, takes priority over 'corld-branch'"
  cordl-branch:
    required: false
    description: "Which branch to use"
  libil2cpp-path:
    required: true
    description: "Path to libil2cpp.so"
  globalmetadata-path:
    required: true
    description: "Path to global-metadata.dat"
  format:
    required: false
    description: "Whether to format the output, defaults to false"
    default: 'false'
outputs:
  include-path:
    value: ${{ steps.include-path.outputs.value }}
    description: "path to include folder generated by cordl"
runs:
  using: "composite"
  steps:
    # TODO: cache cordl install?
    - uses: actions/cache@v3
      with:
        path: ${HOME}/cordl

    - if: ${{ inputs.cordl-ref }}
      env:
        CARGO_TARGET_DIR: "${HOME}/cordl"
      run: cargo install --git $ {{ inputs.cordl-git }} --rev ${{ inputs.cordl-ref}} --locked
      shell: bash

    - if: ${{ !inputs.cordl-ref && inputs.cordl-branch }}
      env:
        CARGO_TARGET_DIR: "${HOME}/cordl"
      run: cargo install --git $ {{ inputs.cordl-git }} --rev ${{ inputs.cordl-branch }} --locked
      shell: bash

    - if: ${{ !inputs.cordl-ref && !inputs.cordl-branch }}
      env:
        CARGO_TARGET_DIR: "${HOME}/cordl"
      run: cargo install --git $ {{ inputs.cordl-git }} --locked
      shell: bash

    - if: ${{ inputs.format }}
      run: cordl --libil2cpp ${{ inputs.libil2cpp-path }} --metadata ${{ inputs.metadata-path }} --format
      shell: bash

    - if: ${{ !inputs.format }}
      run: cordl --libil2cpp ${{ inputs.libil2cpp-path }} --metadata ${{ inputs.metadata-path }}
      shell: bash

    - run: echo "value=${CWD}/codegen/include" >> "$GITHUB_OUTPUT"
      id: include-path
      shell: bash
