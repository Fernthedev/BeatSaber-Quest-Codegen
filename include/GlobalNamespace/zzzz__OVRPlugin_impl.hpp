#pragma once
#include "System/zzzz__MulticastDelegate_impl.hpp"
#include "System/zzzz__Object_impl.hpp"
#include "GlobalNamespace/zzzz__OVRPlugin_def.hpp"
#include "GlobalNamespace/zzzz__OVRPlugin_def.hpp"
#include "UnityEngine/zzzz__Matrix4x4_def.hpp"
#include "System/zzzz__Guid_def.hpp"
#include "Unity/Collections/zzzz__Allocator_def.hpp"
#include "UnityEngine/zzzz__Vector2_def.hpp"
#include "Unity/Collections/zzzz__NativeArray_1_def.hpp"
#include "System/zzzz__Version_def.hpp"
#include "UnityEngine/zzzz__Vector3_def.hpp"
#include "GlobalNamespace/zzzz__OVRNativeBuffer_def.hpp"
#include "UnityEngine/zzzz__Vector4_def.hpp"
#include "System/zzzz__Nullable_1_def.hpp"
#include "System/zzzz__AsyncCallback_def.hpp"
#include "System/zzzz__Object_def.hpp"
#include "System/zzzz__IAsyncResult_def.hpp"
#include "UnityEngine/zzzz__RenderTexture_def.hpp"
#include "UnityEngine/zzzz__Texture2D_def.hpp"
#include "System/zzzz__IDisposable_def.hpp"
#include "System/Runtime/InteropServices/zzzz__GCHandle_def.hpp"
#include "System/zzzz__IEquatable_1_def.hpp"
#include "UnityEngine/zzzz__Rect_def.hpp"
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__GUID._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__GUID::*)()>(&::GlobalNamespace::__OVRPlugin__GUID::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2755f50;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__GUID*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_a(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x10>(this, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__GUID::__get_a()  {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__GUID::__get_a() const {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_b(int16_t  value)  {
::cordl_internals::setInstanceField<int16_t, 0x14>(this, std::forward<int16_t>(value));
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__GUID::__get_b()  {
return ::cordl_internals::getInstanceField<int16_t, 0x14>(this);
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__GUID::__get_b() const {
return ::cordl_internals::getInstanceField<int16_t, 0x14>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_c(int16_t  value)  {
::cordl_internals::setInstanceField<int16_t, 0x16>(this, std::forward<int16_t>(value));
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__GUID::__get_c()  {
return ::cordl_internals::getInstanceField<int16_t, 0x16>(this);
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__GUID::__get_c() const {
return ::cordl_internals::getInstanceField<int16_t, 0x16>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d0(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x18>(this, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d0()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x18>(this);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d0() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x18>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d1(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x19>(this, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d1()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x19>(this);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d1() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x19>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d2(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x1a>(this, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d2()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x1a>(this);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d2() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x1a>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d3(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x1b>(this, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d3()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x1b>(this);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d3() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x1b>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d4(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x1c>(this, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d4()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x1c>(this);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d4() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x1c>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d5(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x1d>(this, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d5()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x1d>(this);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d5() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x1d>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d6(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x1e>(this, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d6()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x1e>(this);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d6() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x1e>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__GUID::__set_d7(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x1f>(this, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__GUID::__get_d7()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x1f>(this);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__GUID::__get_d7() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x1f>(this);
}
inline ::GlobalNamespace::__OVRPlugin__GUID* GlobalNamespace::__OVRPlugin__GUID::New_ctor()  {
return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__GUID*>());
}
inline void GlobalNamespace::__OVRPlugin__GUID::_ctor()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__GUID*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method);
}
constexpr void GlobalNamespace::__OVRPlugin__Bool::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Bool::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Bool::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Bool::__OVRPlugin__Bool(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool  GlobalNamespace::__OVRPlugin__Bool::False{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Bool  GlobalNamespace::__OVRPlugin__Bool::True{static_cast<int32_t>(0x1)};
constexpr void GlobalNamespace::__OVRPlugin__Result::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Result::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Result::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Result::__OVRPlugin__Result(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Success{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Success_EventUnavailable{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Success_Pending{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure{static_cast<int32_t>(0xfffffc18)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_InvalidParameter{static_cast<int32_t>(0xfffffc17)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_NotInitialized{static_cast<int32_t>(0xfffffc16)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_InvalidOperation{static_cast<int32_t>(0xfffffc15)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_Unsupported{static_cast<int32_t>(0xfffffc14)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_NotYetImplemented{static_cast<int32_t>(0xfffffc13)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_OperationFailed{static_cast<int32_t>(0xfffffc12)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_InsufficientSize{static_cast<int32_t>(0xfffffc11)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_DataIsInvalid{static_cast<int32_t>(0xfffffc10)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_DeprecatedOperation{static_cast<int32_t>(0xfffffc0f)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_ErrorLimitReached{static_cast<int32_t>(0xfffffc0e)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_ErrorInitializationFailed{static_cast<int32_t>(0xfffffc0d)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_SpaceCloudStorageDisabled{static_cast<int32_t>(0xfffff830)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_SpaceMappingInsufficient{static_cast<int32_t>(0xfffff82f)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_SpaceLocalizationFailed{static_cast<int32_t>(0xfffff82e)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_SpaceNetworkTimeout{static_cast<int32_t>(0xfffff82d)};
constexpr ::GlobalNamespace::__OVRPlugin__Result  GlobalNamespace::__OVRPlugin__Result::Failure_SpaceNetworkRequestFailed{static_cast<int32_t>(0xfffff82c)};
constexpr void GlobalNamespace::__OVRPlugin__LogLevel::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LogLevel::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LogLevel::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LogLevel::__OVRPlugin__LogLevel(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__LogLevel  GlobalNamespace::__OVRPlugin__LogLevel::Debug{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__LogLevel  GlobalNamespace::__OVRPlugin__LogLevel::Info{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__LogLevel  GlobalNamespace::__OVRPlugin__LogLevel::Error{static_cast<int32_t>(0x2)};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::*)(::System::Object*, ::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::_ctor)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276aaf0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Object*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType.Invoke
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::*)(::GlobalNamespace::__OVRPlugin__LogLevel, ::cordl_internals::intptr_t, int32_t)>(&::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::Invoke)> {
  constexpr static std::size_t size = 0x14;
  constexpr static std::size_t addrs = 0x276abb4;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                                  13
                                ));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType.BeginInvoke
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::*)(::GlobalNamespace::__OVRPlugin__LogLevel, ::cordl_internals::intptr_t, int32_t, ::System::AsyncCallback*, ::System::Object*)>(&::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::BeginInvoke)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x276abc8;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                                  14
                                ));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType.EndInvoke
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::*)(::System::IAsyncResult*)>(&::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::EndInvoke)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276acac;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                                  15
                                ));
    return ___internal_method;
  }
};
inline ::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType* GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::New_ctor(::System::Object*  object, ::cordl_internals::intptr_t  method)  {
return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>(object, method));
}
inline void GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::_ctor(::System::Object*  object, ::cordl_internals::intptr_t  method)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Object*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, object, method);
}
inline void GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::Invoke(::GlobalNamespace::__OVRPlugin__LogLevel  logLevel, ::cordl_internals::intptr_t  message, int32_t  size)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                            "Invoke",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogLevel>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, logLevel, message, size);
}
inline ::System::IAsyncResult* GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::BeginInvoke(::GlobalNamespace::__OVRPlugin__LogLevel  logLevel, ::cordl_internals::intptr_t  message, int32_t  size, ::System::AsyncCallback*  callback, ::System::Object*  object)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                            "BeginInvoke",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogLevel>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::AsyncCallback*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Object*>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::System::IAsyncResult*, false>(*this, ___internal_method, logLevel, message, size, callback, object);
}
inline void GlobalNamespace::__OVRPlugin__LogCallback2DelegateType::EndInvoke(::System::IAsyncResult*  result)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get(),
                            "EndInvoke",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::IAsyncResult*>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, result);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraStatus::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__CameraStatus::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__CameraStatus::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus::__OVRPlugin__CameraStatus(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus  GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus  GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_Connected{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus  GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_Calibrating{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus  GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_CalibrationFailed{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus  GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_Calibrated{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus  GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_ThirdPerson{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus  GlobalNamespace::__OVRPlugin__CameraStatus::CameraStatus_EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__CameraAnchorType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__CameraAnchorType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__CameraAnchorType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType::__OVRPlugin__CameraAnchorType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType  GlobalNamespace::__OVRPlugin__CameraAnchorType::CameraAnchorType_PreDefined{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType  GlobalNamespace::__OVRPlugin__CameraAnchorType::CameraAnchorType_Custom{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType  GlobalNamespace::__OVRPlugin__CameraAnchorType::CameraAnchorType_Count{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraAnchorType  GlobalNamespace::__OVRPlugin__CameraAnchorType::CameraAnchorType_EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__XrApi::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__XrApi::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__XrApi::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__XrApi::__OVRPlugin__XrApi(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__XrApi  GlobalNamespace::__OVRPlugin__XrApi::Unknown{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__XrApi  GlobalNamespace::__OVRPlugin__XrApi::CAPI{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__XrApi  GlobalNamespace::__OVRPlugin__XrApi::VRAPI{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__XrApi  GlobalNamespace::__OVRPlugin__XrApi::OpenXR{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__XrApi  GlobalNamespace::__OVRPlugin__XrApi::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__Eye::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Eye::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Eye::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Eye::__OVRPlugin__Eye(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Eye  GlobalNamespace::__OVRPlugin__Eye::None{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__Eye  GlobalNamespace::__OVRPlugin__Eye::Left{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Eye  GlobalNamespace::__OVRPlugin__Eye::Right{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__Eye  GlobalNamespace::__OVRPlugin__Eye::Count{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__Tracker::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Tracker::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Tracker::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Tracker::__OVRPlugin__Tracker(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Tracker  GlobalNamespace::__OVRPlugin__Tracker::None{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__Tracker  GlobalNamespace::__OVRPlugin__Tracker::Zero{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Tracker  GlobalNamespace::__OVRPlugin__Tracker::One{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__Tracker  GlobalNamespace::__OVRPlugin__Tracker::Two{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__Tracker  GlobalNamespace::__OVRPlugin__Tracker::Three{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__Tracker  GlobalNamespace::__OVRPlugin__Tracker::Count{static_cast<int32_t>(0x4)};
constexpr void GlobalNamespace::__OVRPlugin__Node::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Node::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Node::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Node::__OVRPlugin__Node(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::None{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::EyeLeft{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::EyeRight{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::EyeCenter{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::HandLeft{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::HandRight{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::TrackerZero{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::TrackerOne{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::TrackerTwo{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::TrackerThree{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::Head{static_cast<int32_t>(0x9)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::DeviceObjectZero{static_cast<int32_t>(0xa)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::TrackedKeyboard{static_cast<int32_t>(0xb)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::ControllerLeft{static_cast<int32_t>(0xc)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::ControllerRight{static_cast<int32_t>(0xd)};
constexpr ::GlobalNamespace::__OVRPlugin__Node  GlobalNamespace::__OVRPlugin__Node::Count{static_cast<int32_t>(0xe)};
constexpr void GlobalNamespace::__OVRPlugin__Controller::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Controller::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Controller::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Controller::__OVRPlugin__Controller(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::LTouch{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::RTouch{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::Touch{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::Remote{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::Gamepad{static_cast<int32_t>(0x10)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::LHand{static_cast<int32_t>(0x20)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::RHand{static_cast<int32_t>(0x40)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::Hands{static_cast<int32_t>(0x60)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::Active{static_cast<int32_t>(0x80000000)};
constexpr ::GlobalNamespace::__OVRPlugin__Controller  GlobalNamespace::__OVRPlugin__Controller::All{static_cast<int32_t>(0xffffffff)};
constexpr void GlobalNamespace::__OVRPlugin__InteractionProfile::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__InteractionProfile::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__InteractionProfile::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile::__OVRPlugin__InteractionProfile(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile  GlobalNamespace::__OVRPlugin__InteractionProfile::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile  GlobalNamespace::__OVRPlugin__InteractionProfile::Touch{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile  GlobalNamespace::__OVRPlugin__InteractionProfile::TouchPro{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__InteractionProfile  GlobalNamespace::__OVRPlugin__InteractionProfile::TouchPlus{static_cast<int32_t>(0x4)};
constexpr void GlobalNamespace::__OVRPlugin__Handedness::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Handedness::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Handedness::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Handedness::__OVRPlugin__Handedness(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Handedness  GlobalNamespace::__OVRPlugin__Handedness::Unsupported{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Handedness  GlobalNamespace::__OVRPlugin__Handedness::LeftHanded{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__Handedness  GlobalNamespace::__OVRPlugin__Handedness::RightHanded{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__TrackingOrigin::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TrackingOrigin::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TrackingOrigin::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin::__OVRPlugin__TrackingOrigin(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin  GlobalNamespace::__OVRPlugin__TrackingOrigin::EyeLevel{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin  GlobalNamespace::__OVRPlugin__TrackingOrigin::FloorLevel{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin  GlobalNamespace::__OVRPlugin__TrackingOrigin::Stage{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin  GlobalNamespace::__OVRPlugin__TrackingOrigin::View{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin  GlobalNamespace::__OVRPlugin__TrackingOrigin::Count{static_cast<int32_t>(0x5)};
constexpr void GlobalNamespace::__OVRPlugin__RecenterFlags::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__RecenterFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__RecenterFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__RecenterFlags::__OVRPlugin__RecenterFlags(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__RecenterFlags  GlobalNamespace::__OVRPlugin__RecenterFlags::Default{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__RecenterFlags  GlobalNamespace::__OVRPlugin__RecenterFlags::IgnoreAll{static_cast<int32_t>(0x80000000)};
constexpr ::GlobalNamespace::__OVRPlugin__RecenterFlags  GlobalNamespace::__OVRPlugin__RecenterFlags::Count{static_cast<int32_t>(0x80000001)};
constexpr void GlobalNamespace::__OVRPlugin__BatteryStatus::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__BatteryStatus::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__BatteryStatus::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus::__OVRPlugin__BatteryStatus(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus  GlobalNamespace::__OVRPlugin__BatteryStatus::Charging{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus  GlobalNamespace::__OVRPlugin__BatteryStatus::Discharging{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus  GlobalNamespace::__OVRPlugin__BatteryStatus::Full{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus  GlobalNamespace::__OVRPlugin__BatteryStatus::NotCharging{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__BatteryStatus  GlobalNamespace::__OVRPlugin__BatteryStatus::Unknown{static_cast<int32_t>(0x4)};
constexpr void GlobalNamespace::__OVRPlugin__EyeTextureFormat::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__EyeTextureFormat::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__EyeTextureFormat::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat::__OVRPlugin__EyeTextureFormat(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  GlobalNamespace::__OVRPlugin__EyeTextureFormat::Default{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  GlobalNamespace::__OVRPlugin__EyeTextureFormat::R8G8B8A8_sRGB{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  GlobalNamespace::__OVRPlugin__EyeTextureFormat::R8G8B8A8{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  GlobalNamespace::__OVRPlugin__EyeTextureFormat::R16G16B16A16_FP{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  GlobalNamespace::__OVRPlugin__EyeTextureFormat::R11G11B10_FP{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  GlobalNamespace::__OVRPlugin__EyeTextureFormat::B8G8R8A8_sRGB{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  GlobalNamespace::__OVRPlugin__EyeTextureFormat::B8G8R8A8{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  GlobalNamespace::__OVRPlugin__EyeTextureFormat::R5G6B5{static_cast<int32_t>(0xb)};
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  GlobalNamespace::__OVRPlugin__EyeTextureFormat::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__PlatformUI::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__PlatformUI::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__PlatformUI::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PlatformUI::__OVRPlugin__PlatformUI(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__PlatformUI  GlobalNamespace::__OVRPlugin__PlatformUI::None{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__PlatformUI  GlobalNamespace::__OVRPlugin__PlatformUI::ConfirmQuit{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__PlatformUI  GlobalNamespace::__OVRPlugin__PlatformUI::GlobalMenuTutorial{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__SystemRegion::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SystemRegion::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SystemRegion::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SystemRegion::__OVRPlugin__SystemRegion(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SystemRegion  GlobalNamespace::__OVRPlugin__SystemRegion::Unspecified{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemRegion  GlobalNamespace::__OVRPlugin__SystemRegion::Japan{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemRegion  GlobalNamespace::__OVRPlugin__SystemRegion::China{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__SystemHeadset::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SystemHeadset::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SystemHeadset::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset::__OVRPlugin__SystemHeadset(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Oculus_Quest{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Oculus_Quest_2{static_cast<int32_t>(0x9)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Meta_Quest_Pro{static_cast<int32_t>(0xa)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Meta_Quest_3{static_cast<int32_t>(0xb)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Placeholder_12{static_cast<int32_t>(0xc)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Placeholder_13{static_cast<int32_t>(0xd)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Placeholder_14{static_cast<int32_t>(0xe)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_DK1{static_cast<int32_t>(0x1000)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_DK2{static_cast<int32_t>(0x1001)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_CV1{static_cast<int32_t>(0x1002)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_CB{static_cast<int32_t>(0x1003)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Rift_S{static_cast<int32_t>(0x1004)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Oculus_Link_Quest{static_cast<int32_t>(0x1005)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Oculus_Link_Quest_2{static_cast<int32_t>(0x1006)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Meta_Link_Quest_Pro{static_cast<int32_t>(0x1007)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::Meta_Link_Quest_3{static_cast<int32_t>(0x1008)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::PC_Placeholder_4105{static_cast<int32_t>(0x1009)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::PC_Placeholder_4106{static_cast<int32_t>(0x100a)};
constexpr ::GlobalNamespace::__OVRPlugin__SystemHeadset  GlobalNamespace::__OVRPlugin__SystemHeadset::PC_Placeholder_4107{static_cast<int32_t>(0x100b)};
constexpr void GlobalNamespace::__OVRPlugin__OverlayShape::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__OverlayShape::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__OverlayShape::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape::__OVRPlugin__OverlayShape(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::Quad{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::Cylinder{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::Cubemap{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::OffcenterCubemap{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::Equirect{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::ReconstructionPassthrough{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::SurfaceProjectedPassthrough{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::Fisheye{static_cast<int32_t>(0x9)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::KeyboardHandsPassthrough{static_cast<int32_t>(0xa)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape  GlobalNamespace::__OVRPlugin__OverlayShape::KeyboardMaskedHandsPassthrough{static_cast<int32_t>(0xb)};
constexpr void GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::__OVRPlugin__LayerSuperSamplingType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__LayerSuperSamplingType  GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerSuperSamplingType  GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::Normal{static_cast<int32_t>(0x1000)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerSuperSamplingType  GlobalNamespace::__OVRPlugin__LayerSuperSamplingType::Quality{static_cast<int32_t>(0x100)};
constexpr void GlobalNamespace::__OVRPlugin__LayerSharpenType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerSharpenType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerSharpenType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerSharpenType::__OVRPlugin__LayerSharpenType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__LayerSharpenType  GlobalNamespace::__OVRPlugin__LayerSharpenType::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerSharpenType  GlobalNamespace::__OVRPlugin__LayerSharpenType::Normal{static_cast<int32_t>(0x2000)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerSharpenType  GlobalNamespace::__OVRPlugin__LayerSharpenType::Quality{static_cast<int32_t>(0x10000)};
constexpr void GlobalNamespace::__OVRPlugin__Step::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Step::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Step::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Step::__OVRPlugin__Step(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Step  GlobalNamespace::__OVRPlugin__Step::Render{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__Step  GlobalNamespace::__OVRPlugin__Step::Physics{static_cast<int32_t>(0x0)};
constexpr void GlobalNamespace::__OVRPlugin__CameraDevice::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__CameraDevice::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__CameraDevice::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice::__OVRPlugin__CameraDevice(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice  GlobalNamespace::__OVRPlugin__CameraDevice::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice  GlobalNamespace::__OVRPlugin__CameraDevice::WebCamera0{static_cast<int32_t>(0x64)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice  GlobalNamespace::__OVRPlugin__CameraDevice::WebCamera1{static_cast<int32_t>(0x65)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraDevice  GlobalNamespace::__OVRPlugin__CameraDevice::ZEDCamera{static_cast<int32_t>(0x12c)};
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::__OVRPlugin__CameraDeviceDepthSensingMode(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode  GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::Standard{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode  GlobalNamespace::__OVRPlugin__CameraDeviceDepthSensingMode::Fill{static_cast<int32_t>(0x1)};
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::__OVRPlugin__CameraDeviceDepthQuality(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality  GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::Low{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality  GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::Medium{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality  GlobalNamespace::__OVRPlugin__CameraDeviceDepthQuality::High{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::__OVRPlugin__FoveatedRenderingLevel(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::Off{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::Low{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::Medium{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::High{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::HighTop{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::__OVRPlugin__FixedFoveatedRenderingLevel(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::Off{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::Low{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::Medium{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::High{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::HighTop{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel  GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__TiledMultiResLevel::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TiledMultiResLevel::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TiledMultiResLevel::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel::__OVRPlugin__TiledMultiResLevel(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel  GlobalNamespace::__OVRPlugin__TiledMultiResLevel::Off{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel  GlobalNamespace::__OVRPlugin__TiledMultiResLevel::LMSLow{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel  GlobalNamespace::__OVRPlugin__TiledMultiResLevel::LMSMedium{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel  GlobalNamespace::__OVRPlugin__TiledMultiResLevel::LMSHigh{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel  GlobalNamespace::__OVRPlugin__TiledMultiResLevel::LMSHighTop{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel  GlobalNamespace::__OVRPlugin__TiledMultiResLevel::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__PerfMetrics::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__PerfMetrics::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__PerfMetrics::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics::__OVRPlugin__PerfMetrics(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::App_CpuTime_Float{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::App_GpuTime_Float{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Compositor_CpuTime_Float{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Compositor_GpuTime_Float{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Compositor_DroppedFrameCount_Int{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::System_GpuUtilPercentage_Float{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::System_CpuUtilAveragePercentage_Float{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::System_CpuUtilWorstPercentage_Float{static_cast<int32_t>(0x9)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuClockFrequencyInMHz_Float{static_cast<int32_t>(0xa)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_GpuClockFrequencyInMHz_Float{static_cast<int32_t>(0xb)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuClockLevel_Int{static_cast<int32_t>(0xc)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_GpuClockLevel_Int{static_cast<int32_t>(0xd)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Compositor_SpaceWarp_Mode_Int{static_cast<int32_t>(0xe)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore0UtilPercentage_Float{static_cast<int32_t>(0x20)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore1UtilPercentage_Float{static_cast<int32_t>(0x21)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore2UtilPercentage_Float{static_cast<int32_t>(0x22)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore3UtilPercentage_Float{static_cast<int32_t>(0x23)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore4UtilPercentage_Float{static_cast<int32_t>(0x24)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore5UtilPercentage_Float{static_cast<int32_t>(0x25)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore6UtilPercentage_Float{static_cast<int32_t>(0x26)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Device_CpuCore7UtilPercentage_Float{static_cast<int32_t>(0x27)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::Count{static_cast<int32_t>(0x28)};
constexpr ::GlobalNamespace::__OVRPlugin__PerfMetrics  GlobalNamespace::__OVRPlugin__PerfMetrics::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::__OVRPlugin__ProcessorPerformanceLevel(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel  GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::PowerSavings{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel  GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::SustainedLow{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel  GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::SustainedHigh{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel  GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::Boost{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel  GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__FeatureType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__FeatureType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__FeatureType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType::__OVRPlugin__FeatureType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType  GlobalNamespace::__OVRPlugin__FeatureType::HandTracking{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType  GlobalNamespace::__OVRPlugin__FeatureType::KeyboardTracking{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType  GlobalNamespace::__OVRPlugin__FeatureType::EyeTracking{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType  GlobalNamespace::__OVRPlugin__FeatureType::FaceTracking{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType  GlobalNamespace::__OVRPlugin__FeatureType::BodyTracking{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType  GlobalNamespace::__OVRPlugin__FeatureType::Passthrough{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType  GlobalNamespace::__OVRPlugin__FeatureType::GazeBasedFoveatedRendering{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType  GlobalNamespace::__OVRPlugin__FeatureType::Count{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__FeatureType  GlobalNamespace::__OVRPlugin__FeatureType::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_fx(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_fx()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_fx() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_fy(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_fy()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_fy() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_cx(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_cx()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_cx() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_cy(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_cy()  {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_cy() const {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_disto0(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto0()  {
return ::cordl_internals::getInstanceField<double_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto0() const {
return ::cordl_internals::getInstanceField<double_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_disto1(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto1()  {
return ::cordl_internals::getInstanceField<double_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto1() const {
return ::cordl_internals::getInstanceField<double_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_disto2(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto2()  {
return ::cordl_internals::getInstanceField<double_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto2() const {
return ::cordl_internals::getInstanceField<double_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_disto3(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto3()  {
return ::cordl_internals::getInstanceField<double_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto3() const {
return ::cordl_internals::getInstanceField<double_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_disto4(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto4()  {
return ::cordl_internals::getInstanceField<double_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_disto4() const {
return ::cordl_internals::getInstanceField<double_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_v_fov(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_v_fov()  {
return ::cordl_internals::getInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_v_fov() const {
return ::cordl_internals::getInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_h_fov(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_h_fov()  {
return ::cordl_internals::getInstanceField<float_t, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_h_fov() const {
return ::cordl_internals::getInstanceField<float_t, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_d_fov(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_d_fov()  {
return ::cordl_internals::getInstanceField<float_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_d_fov() const {
return ::cordl_internals::getInstanceField<float_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_w(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_w()  {
return ::cordl_internals::getInstanceField<int32_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_w() const {
return ::cordl_internals::getInstanceField<int32_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__set_h(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_h()  {
return ::cordl_internals::getInstanceField<int32_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__get_h() const {
return ::cordl_internals::getInstanceField<int32_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "fx", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "fy", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "cx", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "cy", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "disto0", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "disto1", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "disto2", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "disto3", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "disto4", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "v_fov", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h_fov", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "d_fov", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "w", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraDeviceIntrinsicsParameters::__OVRPlugin__CameraDeviceIntrinsicsParameters(float_t  fx, float_t  fy, float_t  cx, float_t  cy, double_t  disto0, double_t  disto1, double_t  disto2, double_t  disto3, double_t  disto4, float_t  v_fov, float_t  h_fov, float_t  d_fov, int32_t  w, int32_t  h) noexcept : ::bs_hook::ValueTypeWrapper<0x50>() {this->fx = fx;
this->fy = fy;
this->cx = cx;
this->cy = cy;
this->disto0 = disto0;
this->disto1 = disto1;
this->disto2 = disto2;
this->disto3 = disto3;
this->disto4 = disto4;
this->v_fov = v_fov;
this->h_fov = h_fov;
this->d_fov = d_fov;
this->w = w;
this->h = h;
}
constexpr void GlobalNamespace::__OVRPlugin__OverlayFlag::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__OverlayFlag::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__OverlayFlag::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag::__OVRPlugin__OverlayFlag(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::OnTop{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::HeadLocked{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::NoDepth{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::ExpensiveSuperSample{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::EfficientSuperSample{static_cast<int32_t>(0x10)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::EfficientSharpen{static_cast<int32_t>(0x20)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::BicubicFiltering{static_cast<int32_t>(0x40)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::ExpensiveSharpen{static_cast<int32_t>(0x80)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::SecureContent{static_cast<int32_t>(0x100)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlag_Quad{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlag_Cylinder{static_cast<int32_t>(0x10)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlag_Cubemap{static_cast<int32_t>(0x20)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlag_OffcenterCubemap{static_cast<int32_t>(0x40)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::ShapeFlagRangeMask{static_cast<int32_t>(0xf0)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::Hidden{static_cast<int32_t>(0x200)};
constexpr ::GlobalNamespace::__OVRPlugin__OverlayFlag  GlobalNamespace::__OVRPlugin__OverlayFlag::AutoFiltering{static_cast<int32_t>(0x400)};
constexpr void GlobalNamespace::__OVRPlugin__Vector2f::__set_x(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Vector2f::__get_x()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Vector2f::__get_x() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector2f::__set_y(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Vector2f::__get_y()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Vector2f::__get_y() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "x", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f::__OVRPlugin__Vector2f(float_t  x, float_t  y) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->x = x;
this->y = y;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Vector3f.ToString
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Vector3f::*)()>(&::GlobalNamespace::__OVRPlugin__Vector3f::ToString)> {
  constexpr static std::size_t size = 0xfc;
  constexpr static std::size_t addrs = 0x276acb8;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                                  3
                                ));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__Vector3f::__set_x(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Vector3f::__get_x()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Vector3f::__get_x() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector3f::__set_y(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Vector3f::__get_y()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Vector3f::__get_y() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector3f::__set_z(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Vector3f::__get_z()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Vector3f::__get_z() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__Vector3f::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Vector3f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::__OVRPlugin__Vector3f::getStaticF_zero()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Vector3f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Vector3f::ToString()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector3f>::get(),
                            "ToString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "x", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "z", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f::__OVRPlugin__Vector3f(float_t  x, float_t  y, float_t  z) noexcept : ::bs_hook::ValueTypeWrapper<0xc>() {this->x = x;
this->y = y;
this->z = z;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Vector4f.ToString
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Vector4f::*)()>(&::GlobalNamespace::__OVRPlugin__Vector4f::ToString)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x276ae00;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get(),
                                  3
                                ));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__Vector4f::__set_x(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Vector4f::__get_x()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Vector4f::__get_x() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector4f::__set_y(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Vector4f::__get_y()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Vector4f::__get_y() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector4f::__set_z(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Vector4f::__get_z()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Vector4f::__get_z() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector4f::__set_w(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Vector4f::__get_w()  {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Vector4f::__get_w() const {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__Vector4f::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Vector4f  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Vector4f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Vector4f>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Vector4f GlobalNamespace::__OVRPlugin__Vector4f::getStaticF_zero()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Vector4f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Vector4f::ToString()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4f>::get(),
                            "ToString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "x", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "z", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "w", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector4f::__OVRPlugin__Vector4f(float_t  x, float_t  y, float_t  z, float_t  w) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->x = x;
this->y = y;
this->z = z;
this->w = w;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Vector4s.ToString
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Vector4s::*)()>(&::GlobalNamespace::__OVRPlugin__Vector4s::ToString)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x276b02c;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get(),
                                  3
                                ));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__Vector4s::__set_x(int16_t  value)  {
::cordl_internals::setInstanceField<int16_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int16_t>(value));
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__Vector4s::__get_x()  {
return ::cordl_internals::getInstanceField<int16_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__Vector4s::__get_x() const {
return ::cordl_internals::getInstanceField<int16_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector4s::__set_y(int16_t  value)  {
::cordl_internals::setInstanceField<int16_t, 0x2>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int16_t>(value));
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__Vector4s::__get_y()  {
return ::cordl_internals::getInstanceField<int16_t, 0x2>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__Vector4s::__get_y() const {
return ::cordl_internals::getInstanceField<int16_t, 0x2>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector4s::__set_z(int16_t  value)  {
::cordl_internals::setInstanceField<int16_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int16_t>(value));
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__Vector4s::__get_z()  {
return ::cordl_internals::getInstanceField<int16_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__Vector4s::__get_z() const {
return ::cordl_internals::getInstanceField<int16_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector4s::__set_w(int16_t  value)  {
::cordl_internals::setInstanceField<int16_t, 0x6>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int16_t>(value));
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__Vector4s::__get_w()  {
return ::cordl_internals::getInstanceField<int16_t, 0x6>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__Vector4s::__get_w() const {
return ::cordl_internals::getInstanceField<int16_t, 0x6>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__Vector4s::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Vector4s  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Vector4s, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Vector4s>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Vector4s GlobalNamespace::__OVRPlugin__Vector4s::getStaticF_zero()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Vector4s, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Vector4s::ToString()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Vector4s>::get(),
                            "ToString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "x", ty: "int16_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "int16_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "z", ty: "int16_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "w", ty: "int16_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector4s::__OVRPlugin__Vector4s(int16_t  x, int16_t  y, int16_t  z, int16_t  w) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->x = x;
this->y = y;
this->z = z;
this->w = w;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Quatf.ToString
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Quatf::*)()>(&::GlobalNamespace::__OVRPlugin__Quatf::ToString)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x276b258;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get(),
                                  3
                                ));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__Quatf::__set_x(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Quatf::__get_x()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Quatf::__get_x() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Quatf::__set_y(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Quatf::__get_y()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Quatf::__get_y() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Quatf::__set_z(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Quatf::__get_z()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Quatf::__get_z() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Quatf::__set_w(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Quatf::__get_w()  {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Quatf::__get_w() const {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__Quatf::setStaticF_identity(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Quatf, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Quatf GlobalNamespace::__OVRPlugin__Quatf::getStaticF_identity()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Quatf, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Quatf::ToString()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Quatf>::get(),
                            "ToString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "x", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "z", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "w", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Quatf::__OVRPlugin__Quatf(float_t  x, float_t  y, float_t  z, float_t  w) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->x = x;
this->y = y;
this->z = z;
this->w = w;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Posef.ToString
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Posef::*)()>(&::GlobalNamespace::__OVRPlugin__Posef::ToString)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x276c48c;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                                  3
                                ));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__Posef::__set_Orientation(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__Posef::__get_Orientation()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__Posef::__get_Orientation() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Posef::__set_Position(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__Posef::__get_Position()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__Posef::__get_Position() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__Posef::setStaticF_identity(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Posef, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__Posef::getStaticF_identity()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Posef, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__Posef::ToString()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Posef>::get(),
                            "ToString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "Orientation", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "Position", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Posef::__OVRPlugin__Posef(::GlobalNamespace::__OVRPlugin__Quatf  Orientation, ::GlobalNamespace::__OVRPlugin__Vector3f  Position) noexcept : ::bs_hook::ValueTypeWrapper<0x1c>() {this->Orientation = Orientation;
this->Position = Position;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf.ToString
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__TextureRectMatrixf::*)()>(&::GlobalNamespace::__OVRPlugin__TextureRectMatrixf::ToString)> {
  constexpr static std::size_t size = 0x1f8;
  constexpr static std::size_t addrs = 0x276c658;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(),
                                  3
                                ));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__set_leftRect(::UnityEngine::Rect  value)  {
::cordl_internals::setInstanceField<::UnityEngine::Rect, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::UnityEngine::Rect>(value));
}
constexpr ::UnityEngine::Rect& GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__get_leftRect()  {
return ::cordl_internals::getInstanceField<::UnityEngine::Rect, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::UnityEngine::Rect const& GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__get_leftRect() const {
return ::cordl_internals::getInstanceField<::UnityEngine::Rect, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__set_rightRect(::UnityEngine::Rect  value)  {
::cordl_internals::setInstanceField<::UnityEngine::Rect, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::UnityEngine::Rect>(value));
}
constexpr ::UnityEngine::Rect& GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__get_rightRect()  {
return ::cordl_internals::getInstanceField<::UnityEngine::Rect, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::UnityEngine::Rect const& GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__get_rightRect() const {
return ::cordl_internals::getInstanceField<::UnityEngine::Rect, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__set_leftScaleBias(::UnityEngine::Vector4  value)  {
::cordl_internals::setInstanceField<::UnityEngine::Vector4, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::UnityEngine::Vector4>(value));
}
constexpr ::UnityEngine::Vector4& GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__get_leftScaleBias()  {
return ::cordl_internals::getInstanceField<::UnityEngine::Vector4, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::UnityEngine::Vector4 const& GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__get_leftScaleBias() const {
return ::cordl_internals::getInstanceField<::UnityEngine::Vector4, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__set_rightScaleBias(::UnityEngine::Vector4  value)  {
::cordl_internals::setInstanceField<::UnityEngine::Vector4, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::UnityEngine::Vector4>(value));
}
constexpr ::UnityEngine::Vector4& GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__get_rightScaleBias()  {
return ::cordl_internals::getInstanceField<::UnityEngine::Vector4, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::UnityEngine::Vector4 const& GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__get_rightScaleBias() const {
return ::cordl_internals::getInstanceField<::UnityEngine::Vector4, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__TextureRectMatrixf::setStaticF_zero(::GlobalNamespace::__OVRPlugin__TextureRectMatrixf  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get>(std::forward<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>(value));
}
inline ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf GlobalNamespace::__OVRPlugin__TextureRectMatrixf::getStaticF_zero()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get>();
}
inline ::StringW GlobalNamespace::__OVRPlugin__TextureRectMatrixf::ToString()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(),
                            "ToString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "leftRect", ty: "::UnityEngine::Rect", modifiers: "", def_value: Some("{}") }, CppParam { name: "rightRect", ty: "::UnityEngine::Rect", modifiers: "", def_value: Some("{}") }, CppParam { name: "leftScaleBias", ty: "::UnityEngine::Vector4", modifiers: "", def_value: Some("{}") }, CppParam { name: "rightScaleBias", ty: "::UnityEngine::Vector4", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf::__OVRPlugin__TextureRectMatrixf(::UnityEngine::Rect  leftRect, ::UnityEngine::Rect  rightRect, ::UnityEngine::Vector4  leftScaleBias, ::UnityEngine::Vector4  rightScaleBias) noexcept : ::bs_hook::ValueTypeWrapper<0x40>() {this->leftRect = leftRect;
this->rightRect = rightRect;
this->leftScaleBias = leftScaleBias;
this->rightScaleBias = rightScaleBias;
}
constexpr void GlobalNamespace::__OVRPlugin__PoseStatef::__set_Pose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__PoseStatef::__get_Pose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__PoseStatef::__get_Pose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PoseStatef::__set_Velocity(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__PoseStatef::__get_Velocity()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__PoseStatef::__get_Velocity() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PoseStatef::__set_Acceleration(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__PoseStatef::__get_Acceleration()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__PoseStatef::__get_Acceleration() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PoseStatef::__set_AngularVelocity(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__PoseStatef::__get_AngularVelocity()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__PoseStatef::__get_AngularVelocity() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PoseStatef::__set_AngularAcceleration(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__PoseStatef::__get_AngularAcceleration()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__PoseStatef::__get_AngularAcceleration() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PoseStatef::__set_Time(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__PoseStatef::__get_Time()  {
return ::cordl_internals::getInstanceField<double_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__PoseStatef::__get_Time() const {
return ::cordl_internals::getInstanceField<double_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__PoseStatef::setStaticF_identity(::GlobalNamespace::__OVRPlugin__PoseStatef  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__PoseStatef, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PoseStatef>::get>(std::forward<::GlobalNamespace::__OVRPlugin__PoseStatef>(value));
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::__OVRPlugin__PoseStatef::getStaticF_identity()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__PoseStatef, "identity", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PoseStatef>::get>();
}
// Ctor Parameters [CppParam { name: "Pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "Velocity", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Acceleration", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "AngularVelocity", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "AngularAcceleration", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PoseStatef::__OVRPlugin__PoseStatef(::GlobalNamespace::__OVRPlugin__Posef  Pose, ::GlobalNamespace::__OVRPlugin__Vector3f  Velocity, ::GlobalNamespace::__OVRPlugin__Vector3f  Acceleration, ::GlobalNamespace::__OVRPlugin__Vector3f  AngularVelocity, ::GlobalNamespace::__OVRPlugin__Vector3f  AngularAcceleration, double_t  Time) noexcept : ::bs_hook::ValueTypeWrapper<0x58>() {this->Pose = Pose;
this->Velocity = Velocity;
this->Acceleration = Acceleration;
this->AngularVelocity = AngularVelocity;
this->AngularAcceleration = AngularAcceleration;
this->Time = Time;
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsLocation::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsLocation::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsLocation::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation::__OVRPlugin__HapticsLocation(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation  GlobalNamespace::__OVRPlugin__HapticsLocation::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation  GlobalNamespace::__OVRPlugin__HapticsLocation::Hand{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation  GlobalNamespace::__OVRPlugin__HapticsLocation::Thumb{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__HapticsLocation  GlobalNamespace::__OVRPlugin__HapticsLocation::Index{static_cast<int32_t>(0x4)};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__ControllerState6._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__ControllerState6::*)(::GlobalNamespace::__OVRPlugin__ControllerState5)>(&::GlobalNamespace::__OVRPlugin__ControllerState6::_ctor)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276ca28;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState6>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState5>::get()}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_ConnectedControllers(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_ConnectedControllers()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_ConnectedControllers() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_Buttons(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_Buttons()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_Buttons() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_Touches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_Touches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_Touches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_NearTouches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_NearTouches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_NearTouches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LTouchpad(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LTouchpad()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LTouchpad() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RTouchpad(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RTouchpad()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RTouchpad() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LBatteryPercentRemaining(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LBatteryPercentRemaining()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LBatteryPercentRemaining() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RBatteryPercentRemaining(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x41>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RBatteryPercentRemaining()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x41>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RBatteryPercentRemaining() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x41>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LRecenterCount(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x42>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LRecenterCount()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x42>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LRecenterCount() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x42>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RRecenterCount(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x43>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RRecenterCount()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x43>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RRecenterCount() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x43>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LThumbRestForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LThumbRestForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LThumbRestForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RThumbRestForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RThumbRestForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RThumbRestForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LStylusForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LStylusForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LStylusForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RStylusForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RStylusForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RStylusForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LIndexTriggerCurl(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LIndexTriggerCurl()  {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LIndexTriggerCurl() const {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RIndexTriggerCurl(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RIndexTriggerCurl()  {
return ::cordl_internals::getInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RIndexTriggerCurl() const {
return ::cordl_internals::getInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LIndexTriggerSlide(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LIndexTriggerSlide()  {
return ::cordl_internals::getInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LIndexTriggerSlide() const {
return ::cordl_internals::getInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RIndexTriggerSlide(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RIndexTriggerSlide()  {
return ::cordl_internals::getInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RIndexTriggerSlide() const {
return ::cordl_internals::getInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_LIndexTriggerForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LIndexTriggerForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_LIndexTriggerForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState6::__set_RIndexTriggerForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RIndexTriggerForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState6::__get_RIndexTriggerForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__ControllerState6::_ctor(::GlobalNamespace::__OVRPlugin__ControllerState5  cs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState6>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState5>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, cs);
}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbRestForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbRestForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LStylusForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RStylusForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerCurl", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerCurl", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerSlide", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerSlide", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerForce", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState6::__OVRPlugin__ControllerState6(uint32_t  ConnectedControllers, uint32_t  Buttons, uint32_t  Touches, uint32_t  NearTouches, float_t  LIndexTrigger, float_t  RIndexTrigger, float_t  LHandTrigger, float_t  RHandTrigger, ::GlobalNamespace::__OVRPlugin__Vector2f  LThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f  RThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f  LTouchpad, ::GlobalNamespace::__OVRPlugin__Vector2f  RTouchpad, uint8_t  LBatteryPercentRemaining, uint8_t  RBatteryPercentRemaining, uint8_t  LRecenterCount, uint8_t  RRecenterCount, float_t  LThumbRestForce, float_t  RThumbRestForce, float_t  LStylusForce, float_t  RStylusForce, float_t  LIndexTriggerCurl, float_t  RIndexTriggerCurl, float_t  LIndexTriggerSlide, float_t  RIndexTriggerSlide, float_t  LIndexTriggerForce, float_t  RIndexTriggerForce) noexcept : ::bs_hook::ValueTypeWrapper<0x6c>() {this->ConnectedControllers = ConnectedControllers;
this->Buttons = Buttons;
this->Touches = Touches;
this->NearTouches = NearTouches;
this->LIndexTrigger = LIndexTrigger;
this->RIndexTrigger = RIndexTrigger;
this->LHandTrigger = LHandTrigger;
this->RHandTrigger = RHandTrigger;
this->LThumbstick = LThumbstick;
this->RThumbstick = RThumbstick;
this->LTouchpad = LTouchpad;
this->RTouchpad = RTouchpad;
this->LBatteryPercentRemaining = LBatteryPercentRemaining;
this->RBatteryPercentRemaining = RBatteryPercentRemaining;
this->LRecenterCount = LRecenterCount;
this->RRecenterCount = RRecenterCount;
this->LThumbRestForce = LThumbRestForce;
this->RThumbRestForce = RThumbRestForce;
this->LStylusForce = LStylusForce;
this->RStylusForce = RStylusForce;
this->LIndexTriggerCurl = LIndexTriggerCurl;
this->RIndexTriggerCurl = RIndexTriggerCurl;
this->LIndexTriggerSlide = LIndexTriggerSlide;
this->RIndexTriggerSlide = RIndexTriggerSlide;
this->LIndexTriggerForce = LIndexTriggerForce;
this->RIndexTriggerForce = RIndexTriggerForce;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__ControllerState5._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__ControllerState5::*)(::GlobalNamespace::__OVRPlugin__ControllerState4)>(&::GlobalNamespace::__OVRPlugin__ControllerState5::_ctor)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x276caf0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState5>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState4>::get()}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_ConnectedControllers(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_ConnectedControllers()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_ConnectedControllers() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_Buttons(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_Buttons()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_Buttons() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_Touches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_Touches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_Touches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_NearTouches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_NearTouches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_NearTouches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LTouchpad(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LTouchpad()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LTouchpad() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RTouchpad(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RTouchpad()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RTouchpad() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LBatteryPercentRemaining(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LBatteryPercentRemaining()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LBatteryPercentRemaining() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RBatteryPercentRemaining(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x41>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RBatteryPercentRemaining()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x41>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RBatteryPercentRemaining() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x41>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LRecenterCount(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x42>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LRecenterCount()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x42>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LRecenterCount() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x42>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RRecenterCount(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x43>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RRecenterCount()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x43>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RRecenterCount() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x43>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LThumbRestForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LThumbRestForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LThumbRestForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RThumbRestForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RThumbRestForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RThumbRestForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LStylusForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LStylusForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LStylusForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RStylusForce(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RStylusForce()  {
return ::cordl_internals::getInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RStylusForce() const {
return ::cordl_internals::getInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LIndexTriggerCurl(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LIndexTriggerCurl()  {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LIndexTriggerCurl() const {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RIndexTriggerCurl(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RIndexTriggerCurl()  {
return ::cordl_internals::getInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RIndexTriggerCurl() const {
return ::cordl_internals::getInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_LIndexTriggerSlide(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LIndexTriggerSlide()  {
return ::cordl_internals::getInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_LIndexTriggerSlide() const {
return ::cordl_internals::getInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState5::__set_RIndexTriggerSlide(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RIndexTriggerSlide()  {
return ::cordl_internals::getInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState5::__get_RIndexTriggerSlide() const {
return ::cordl_internals::getInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__ControllerState5::_ctor(::GlobalNamespace::__OVRPlugin__ControllerState4  cs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState5>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState4>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, cs);
}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbRestForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbRestForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LStylusForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RStylusForce", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerCurl", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerCurl", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTriggerSlide", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTriggerSlide", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState5::__OVRPlugin__ControllerState5(uint32_t  ConnectedControllers, uint32_t  Buttons, uint32_t  Touches, uint32_t  NearTouches, float_t  LIndexTrigger, float_t  RIndexTrigger, float_t  LHandTrigger, float_t  RHandTrigger, ::GlobalNamespace::__OVRPlugin__Vector2f  LThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f  RThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f  LTouchpad, ::GlobalNamespace::__OVRPlugin__Vector2f  RTouchpad, uint8_t  LBatteryPercentRemaining, uint8_t  RBatteryPercentRemaining, uint8_t  LRecenterCount, uint8_t  RRecenterCount, float_t  LThumbRestForce, float_t  RThumbRestForce, float_t  LStylusForce, float_t  RStylusForce, float_t  LIndexTriggerCurl, float_t  RIndexTriggerCurl, float_t  LIndexTriggerSlide, float_t  RIndexTriggerSlide) noexcept : ::bs_hook::ValueTypeWrapper<0x64>() {this->ConnectedControllers = ConnectedControllers;
this->Buttons = Buttons;
this->Touches = Touches;
this->NearTouches = NearTouches;
this->LIndexTrigger = LIndexTrigger;
this->RIndexTrigger = RIndexTrigger;
this->LHandTrigger = LHandTrigger;
this->RHandTrigger = RHandTrigger;
this->LThumbstick = LThumbstick;
this->RThumbstick = RThumbstick;
this->LTouchpad = LTouchpad;
this->RTouchpad = RTouchpad;
this->LBatteryPercentRemaining = LBatteryPercentRemaining;
this->RBatteryPercentRemaining = RBatteryPercentRemaining;
this->LRecenterCount = LRecenterCount;
this->RRecenterCount = RRecenterCount;
this->LThumbRestForce = LThumbRestForce;
this->RThumbRestForce = RThumbRestForce;
this->LStylusForce = LStylusForce;
this->RStylusForce = RStylusForce;
this->LIndexTriggerCurl = LIndexTriggerCurl;
this->RIndexTriggerCurl = RIndexTriggerCurl;
this->LIndexTriggerSlide = LIndexTriggerSlide;
this->RIndexTriggerSlide = RIndexTriggerSlide;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__ControllerState4._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__ControllerState4::*)(::GlobalNamespace::__OVRPlugin__ControllerState2)>(&::GlobalNamespace::__OVRPlugin__ControllerState4::_ctor)> {
  constexpr static std::size_t size = 0x6c;
  constexpr static std::size_t addrs = 0x276cb80;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState4>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState2>::get()}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_ConnectedControllers(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_ConnectedControllers()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_ConnectedControllers() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Buttons(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Buttons()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Buttons() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Touches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Touches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Touches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_NearTouches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_NearTouches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_NearTouches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_LIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_RIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_LHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_RHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_LThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_RThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_LTouchpad(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LTouchpad()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LTouchpad() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_RTouchpad(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RTouchpad()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RTouchpad() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_LBatteryPercentRemaining(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LBatteryPercentRemaining()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LBatteryPercentRemaining() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_RBatteryPercentRemaining(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x41>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RBatteryPercentRemaining()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x41>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RBatteryPercentRemaining() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x41>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_LRecenterCount(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x42>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LRecenterCount()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x42>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_LRecenterCount() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x42>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_RRecenterCount(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x43>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RRecenterCount()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x43>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_RRecenterCount() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x43>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_27(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_27()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_27() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_26(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x45>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_26()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x45>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_26() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x45>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_25(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x46>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_25()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x46>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_25() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x46>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_24(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x47>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_24()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x47>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_24() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x47>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_23(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_23()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_23() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_22(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x49>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_22()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x49>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_22() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x49>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_21(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x4a>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_21()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x4a>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_21() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x4a>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_20(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x4b>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_20()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x4b>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_20() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x4b>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_19(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_19()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_19() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_18(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x4d>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_18()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x4d>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_18() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x4d>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_17(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x4e>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_17()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x4e>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_17() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x4e>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_16(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x4f>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_16()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x4f>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_16() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x4f>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_15(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_15()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_15() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_14(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x51>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_14()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x51>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_14() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x51>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_13(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x52>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_13()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x52>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_13() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x52>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_12(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x53>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_12()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x53>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_12() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x53>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_11(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_11()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_11() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_10(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x55>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_10()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x55>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_10() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x55>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_09(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x56>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_09()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x56>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_09() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x56>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_08(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x57>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_08()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x57>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_08() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x57>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_07(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_07()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_07() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_06(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x59>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_06()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x59>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_06() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x59>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_05(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x5a>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_05()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x5a>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_05() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x5a>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_04(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x5b>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_04()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x5b>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_04() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x5b>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_03(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_03()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_03() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_02(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x5d>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_02()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x5d>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_02() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x5d>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_01(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x5e>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_01()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x5e>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_01() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x5e>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState4::__set_Reserved_00(uint8_t  value)  {
::cordl_internals::setInstanceField<uint8_t, 0x5f>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint8_t>(value));
}
constexpr uint8_t& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_00()  {
return ::cordl_internals::getInstanceField<uint8_t, 0x5f>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint8_t const& GlobalNamespace::__OVRPlugin__ControllerState4::__get_Reserved_00() const {
return ::cordl_internals::getInstanceField<uint8_t, 0x5f>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__ControllerState4::_ctor(::GlobalNamespace::__OVRPlugin__ControllerState2  cs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState4>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState2>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, cs);
}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RBatteryPercentRemaining", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RRecenterCount", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_27", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_26", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_25", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_24", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_23", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_22", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_21", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_20", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_19", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_18", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_17", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_16", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_15", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_14", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_13", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_12", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_11", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_10", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_09", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_08", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_07", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_06", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_05", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_04", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_03", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_02", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_01", ty: "uint8_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Reserved_00", ty: "uint8_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState4::__OVRPlugin__ControllerState4(uint32_t  ConnectedControllers, uint32_t  Buttons, uint32_t  Touches, uint32_t  NearTouches, float_t  LIndexTrigger, float_t  RIndexTrigger, float_t  LHandTrigger, float_t  RHandTrigger, ::GlobalNamespace::__OVRPlugin__Vector2f  LThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f  RThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f  LTouchpad, ::GlobalNamespace::__OVRPlugin__Vector2f  RTouchpad, uint8_t  LBatteryPercentRemaining, uint8_t  RBatteryPercentRemaining, uint8_t  LRecenterCount, uint8_t  RRecenterCount, uint8_t  Reserved_27, uint8_t  Reserved_26, uint8_t  Reserved_25, uint8_t  Reserved_24, uint8_t  Reserved_23, uint8_t  Reserved_22, uint8_t  Reserved_21, uint8_t  Reserved_20, uint8_t  Reserved_19, uint8_t  Reserved_18, uint8_t  Reserved_17, uint8_t  Reserved_16, uint8_t  Reserved_15, uint8_t  Reserved_14, uint8_t  Reserved_13, uint8_t  Reserved_12, uint8_t  Reserved_11, uint8_t  Reserved_10, uint8_t  Reserved_09, uint8_t  Reserved_08, uint8_t  Reserved_07, uint8_t  Reserved_06, uint8_t  Reserved_05, uint8_t  Reserved_04, uint8_t  Reserved_03, uint8_t  Reserved_02, uint8_t  Reserved_01, uint8_t  Reserved_00) noexcept : ::bs_hook::ValueTypeWrapper<0x60>() {this->ConnectedControllers = ConnectedControllers;
this->Buttons = Buttons;
this->Touches = Touches;
this->NearTouches = NearTouches;
this->LIndexTrigger = LIndexTrigger;
this->RIndexTrigger = RIndexTrigger;
this->LHandTrigger = LHandTrigger;
this->RHandTrigger = RHandTrigger;
this->LThumbstick = LThumbstick;
this->RThumbstick = RThumbstick;
this->LTouchpad = LTouchpad;
this->RTouchpad = RTouchpad;
this->LBatteryPercentRemaining = LBatteryPercentRemaining;
this->RBatteryPercentRemaining = RBatteryPercentRemaining;
this->LRecenterCount = LRecenterCount;
this->RRecenterCount = RRecenterCount;
this->Reserved_27 = Reserved_27;
this->Reserved_26 = Reserved_26;
this->Reserved_25 = Reserved_25;
this->Reserved_24 = Reserved_24;
this->Reserved_23 = Reserved_23;
this->Reserved_22 = Reserved_22;
this->Reserved_21 = Reserved_21;
this->Reserved_20 = Reserved_20;
this->Reserved_19 = Reserved_19;
this->Reserved_18 = Reserved_18;
this->Reserved_17 = Reserved_17;
this->Reserved_16 = Reserved_16;
this->Reserved_15 = Reserved_15;
this->Reserved_14 = Reserved_14;
this->Reserved_13 = Reserved_13;
this->Reserved_12 = Reserved_12;
this->Reserved_11 = Reserved_11;
this->Reserved_10 = Reserved_10;
this->Reserved_09 = Reserved_09;
this->Reserved_08 = Reserved_08;
this->Reserved_07 = Reserved_07;
this->Reserved_06 = Reserved_06;
this->Reserved_05 = Reserved_05;
this->Reserved_04 = Reserved_04;
this->Reserved_03 = Reserved_03;
this->Reserved_02 = Reserved_02;
this->Reserved_01 = Reserved_01;
this->Reserved_00 = Reserved_00;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__ControllerState2._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__ControllerState2::*)(::GlobalNamespace::__OVRPlugin__ControllerState)>(&::GlobalNamespace::__OVRPlugin__ControllerState2::_ctor)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x276cbec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState2>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState>::get()}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_ConnectedControllers(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState2::__get_ConnectedControllers()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_ConnectedControllers() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_Buttons(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState2::__get_Buttons()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_Buttons() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_Touches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState2::__get_Touches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_Touches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_NearTouches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState2::__get_NearTouches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_NearTouches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_LIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState2::__get_LIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_LIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_RIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState2::__get_RIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_RIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_LHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState2::__get_LHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_LHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_RHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState2::__get_RHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_RHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_LThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState2::__get_LThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_LThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_RThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState2::__get_RThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_RThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_LTouchpad(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState2::__get_LTouchpad()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_LTouchpad() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState2::__set_RTouchpad(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState2::__get_RTouchpad()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState2::__get_RTouchpad() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__ControllerState2::_ctor(::GlobalNamespace::__OVRPlugin__ControllerState  cs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__ControllerState2>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ControllerState>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, cs);
}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "LTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RTouchpad", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState2::__OVRPlugin__ControllerState2(uint32_t  ConnectedControllers, uint32_t  Buttons, uint32_t  Touches, uint32_t  NearTouches, float_t  LIndexTrigger, float_t  RIndexTrigger, float_t  LHandTrigger, float_t  RHandTrigger, ::GlobalNamespace::__OVRPlugin__Vector2f  LThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f  RThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f  LTouchpad, ::GlobalNamespace::__OVRPlugin__Vector2f  RTouchpad) noexcept : ::bs_hook::ValueTypeWrapper<0x40>() {this->ConnectedControllers = ConnectedControllers;
this->Buttons = Buttons;
this->Touches = Touches;
this->NearTouches = NearTouches;
this->LIndexTrigger = LIndexTrigger;
this->RIndexTrigger = RIndexTrigger;
this->LHandTrigger = LHandTrigger;
this->RHandTrigger = RHandTrigger;
this->LThumbstick = LThumbstick;
this->RThumbstick = RThumbstick;
this->LTouchpad = LTouchpad;
this->RTouchpad = RTouchpad;
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_ConnectedControllers(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState::__get_ConnectedControllers()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState::__get_ConnectedControllers() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_Buttons(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState::__get_Buttons()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState::__get_Buttons() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_Touches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState::__get_Touches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState::__get_Touches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_NearTouches(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__ControllerState::__get_NearTouches()  {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__ControllerState::__get_NearTouches() const {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_LIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState::__get_LIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState::__get_LIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_RIndexTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState::__get_RIndexTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState::__get_RIndexTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_LHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState::__get_LHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState::__get_LHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_RHandTrigger(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__ControllerState::__get_RHandTrigger()  {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__ControllerState::__get_RHandTrigger() const {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_LThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState::__get_LThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState::__get_LThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__ControllerState::__set_RThumbstick(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__ControllerState::__get_RThumbstick()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__ControllerState::__get_RThumbstick() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "ConnectedControllers", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buttons", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Touches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NearTouches", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RIndexTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RHandTrigger", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "RThumbstick", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ControllerState::__OVRPlugin__ControllerState(uint32_t  ConnectedControllers, uint32_t  Buttons, uint32_t  Touches, uint32_t  NearTouches, float_t  LIndexTrigger, float_t  RIndexTrigger, float_t  LHandTrigger, float_t  RHandTrigger, ::GlobalNamespace::__OVRPlugin__Vector2f  LThumbstick, ::GlobalNamespace::__OVRPlugin__Vector2f  RThumbstick) noexcept : ::bs_hook::ValueTypeWrapper<0x30>() {this->ConnectedControllers = ConnectedControllers;
this->Buttons = Buttons;
this->Touches = Touches;
this->NearTouches = NearTouches;
this->LIndexTrigger = LIndexTrigger;
this->RIndexTrigger = RIndexTrigger;
this->LHandTrigger = LHandTrigger;
this->RHandTrigger = RHandTrigger;
this->LThumbstick = LThumbstick;
this->RThumbstick = RThumbstick;
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsBuffer::__set_Samples(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__HapticsBuffer::__get_Samples()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__HapticsBuffer::__get_Samples() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsBuffer::__set_SamplesCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsBuffer::__get_SamplesCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsBuffer::__get_SamplesCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Samples", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SamplesCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsBuffer::__OVRPlugin__HapticsBuffer(::cordl_internals::intptr_t  Samples, int32_t  SamplesCount) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->Samples = Samples;
this->SamplesCount = SamplesCount;
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsState::__set_SamplesAvailable(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsState::__get_SamplesAvailable()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsState::__get_SamplesAvailable() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsState::__set_SamplesQueued(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsState::__get_SamplesQueued()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsState::__get_SamplesQueued() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "SamplesAvailable", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SamplesQueued", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsState::__OVRPlugin__HapticsState(int32_t  SamplesAvailable, int32_t  SamplesQueued) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->SamplesAvailable = SamplesAvailable;
this->SamplesQueued = SamplesQueued;
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsDesc::__set_SampleRateHz(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_SampleRateHz()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_SampleRateHz() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsDesc::__set_SampleSizeInBytes(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_SampleSizeInBytes()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_SampleSizeInBytes() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsDesc::__set_MinimumSafeSamplesQueued(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_MinimumSafeSamplesQueued()  {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_MinimumSafeSamplesQueued() const {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsDesc::__set_MinimumBufferSamplesCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_MinimumBufferSamplesCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_MinimumBufferSamplesCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsDesc::__set_OptimalBufferSamplesCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_OptimalBufferSamplesCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_OptimalBufferSamplesCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsDesc::__set_MaximumBufferSamplesCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_MaximumBufferSamplesCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsDesc::__get_MaximumBufferSamplesCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "SampleRateHz", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleSizeInBytes", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "MinimumSafeSamplesQueued", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "MinimumBufferSamplesCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "OptimalBufferSamplesCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "MaximumBufferSamplesCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsDesc::__OVRPlugin__HapticsDesc(int32_t  SampleRateHz, int32_t  SampleSizeInBytes, int32_t  MinimumSafeSamplesQueued, int32_t  MinimumBufferSamplesCount, int32_t  OptimalBufferSamplesCount, int32_t  MaximumBufferSamplesCount) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->SampleRateHz = SampleRateHz;
this->SampleSizeInBytes = SampleSizeInBytes;
this->MinimumSafeSamplesQueued = MinimumSafeSamplesQueued;
this->MinimumBufferSamplesCount = MinimumBufferSamplesCount;
this->OptimalBufferSamplesCount = OptimalBufferSamplesCount;
this->MaximumBufferSamplesCount = MaximumBufferSamplesCount;
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__set_Duration(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__get_Duration()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__get_Duration() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__set_AmplitudeCount(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__get_AmplitudeCount()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__get_AmplitudeCount() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__set_Amplitudes(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__get_Amplitudes()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__get_Amplitudes() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Duration", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AmplitudeCount", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Amplitudes", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration::__OVRPlugin__HapticsAmplitudeEnvelopeVibration(float_t  Duration, uint32_t  AmplitudeCount, ::cordl_internals::intptr_t  Amplitudes) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->Duration = Duration;
this->AmplitudeCount = AmplitudeCount;
this->Amplitudes = Amplitudes;
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__set_BufferSize(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_BufferSize()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_BufferSize() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__set_Buffer(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_Buffer()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_Buffer() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__set_SampleRateHz(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_SampleRateHz()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_SampleRateHz() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__set_Append(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_Append()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_Append() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__set_SamplesConsumed(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_SamplesConsumed()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__get_SamplesConsumed() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "BufferSize", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buffer", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleRateHz", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Append", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "SamplesConsumed", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration::__OVRPlugin__HapticsPcmVibration(uint32_t  BufferSize, ::cordl_internals::intptr_t  Buffer, float_t  SampleRateHz, ::GlobalNamespace::__OVRPlugin__Bool  Append, ::cordl_internals::intptr_t  SamplesConsumed) noexcept : ::bs_hook::ValueTypeWrapper<0x20>() {this->BufferSize = BufferSize;
this->Buffer = Buffer;
this->SampleRateHz = SampleRateHz;
this->Append = Append;
this->SamplesConsumed = SamplesConsumed;
}
constexpr void GlobalNamespace::__OVRPlugin__HapticsConstants::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HapticsConstants::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HapticsConstants::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HapticsConstants::__OVRPlugin__HapticsConstants(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__HapticsConstants  GlobalNamespace::__OVRPlugin__HapticsConstants::MaxSamples{static_cast<int32_t>(0xfa0)};
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_HmdVsyncIndex(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_HmdVsyncIndex()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_HmdVsyncIndex() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_AppFrameIndex(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppFrameIndex()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppFrameIndex() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_AppDroppedFrameCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppDroppedFrameCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppDroppedFrameCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_AppMotionToPhotonLatency(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppMotionToPhotonLatency()  {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppMotionToPhotonLatency() const {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_AppQueueAheadTime(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppQueueAheadTime()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppQueueAheadTime() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_AppCpuElapsedTime(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppCpuElapsedTime()  {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppCpuElapsedTime() const {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_AppGpuElapsedTime(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppGpuElapsedTime()  {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_AppGpuElapsedTime() const {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_CompositorFrameIndex(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorFrameIndex()  {
return ::cordl_internals::getInstanceField<int32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorFrameIndex() const {
return ::cordl_internals::getInstanceField<int32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_CompositorDroppedFrameCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorDroppedFrameCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorDroppedFrameCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_CompositorLatency(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorLatency()  {
return ::cordl_internals::getInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorLatency() const {
return ::cordl_internals::getInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_CompositorCpuElapsedTime(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorCpuElapsedTime()  {
return ::cordl_internals::getInstanceField<float_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorCpuElapsedTime() const {
return ::cordl_internals::getInstanceField<float_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_CompositorGpuElapsedTime(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorGpuElapsedTime()  {
return ::cordl_internals::getInstanceField<float_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorGpuElapsedTime() const {
return ::cordl_internals::getInstanceField<float_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_CompositorCpuStartToGpuEndElapsedTime(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorCpuStartToGpuEndElapsedTime()  {
return ::cordl_internals::getInstanceField<float_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorCpuStartToGpuEndElapsedTime() const {
return ::cordl_internals::getInstanceField<float_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__set_CompositorGpuEndToVsyncElapsedTime(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorGpuEndToVsyncElapsedTime()  {
return ::cordl_internals::getInstanceField<float_t, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__get_CompositorGpuEndToVsyncElapsedTime() const {
return ::cordl_internals::getInstanceField<float_t, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "HmdVsyncIndex", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AppFrameIndex", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AppDroppedFrameCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AppMotionToPhotonLatency", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AppQueueAheadTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AppCpuElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AppGpuElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorFrameIndex", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorDroppedFrameCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorLatency", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorCpuElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorGpuElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorCpuStartToGpuEndElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CompositorGpuEndToVsyncElapsedTime", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__AppPerfFrameStats::__OVRPlugin__AppPerfFrameStats(int32_t  HmdVsyncIndex, int32_t  AppFrameIndex, int32_t  AppDroppedFrameCount, float_t  AppMotionToPhotonLatency, float_t  AppQueueAheadTime, float_t  AppCpuElapsedTime, float_t  AppGpuElapsedTime, int32_t  CompositorFrameIndex, int32_t  CompositorDroppedFrameCount, float_t  CompositorLatency, float_t  CompositorCpuElapsedTime, float_t  CompositorGpuElapsedTime, float_t  CompositorCpuStartToGpuEndElapsedTime, float_t  CompositorGpuEndToVsyncElapsedTime) noexcept : ::bs_hook::ValueTypeWrapper<0x38>() {this->HmdVsyncIndex = HmdVsyncIndex;
this->AppFrameIndex = AppFrameIndex;
this->AppDroppedFrameCount = AppDroppedFrameCount;
this->AppMotionToPhotonLatency = AppMotionToPhotonLatency;
this->AppQueueAheadTime = AppQueueAheadTime;
this->AppCpuElapsedTime = AppCpuElapsedTime;
this->AppGpuElapsedTime = AppGpuElapsedTime;
this->CompositorFrameIndex = CompositorFrameIndex;
this->CompositorDroppedFrameCount = CompositorDroppedFrameCount;
this->CompositorLatency = CompositorLatency;
this->CompositorCpuElapsedTime = CompositorCpuElapsedTime;
this->CompositorGpuElapsedTime = CompositorGpuElapsedTime;
this->CompositorCpuStartToGpuEndElapsedTime = CompositorCpuStartToGpuEndElapsedTime;
this->CompositorGpuEndToVsyncElapsedTime = CompositorGpuEndToVsyncElapsedTime;
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfStats::__set_FrameStats(::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*>& GlobalNamespace::__OVRPlugin__AppPerfStats::__get_FrameStats()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*> const& GlobalNamespace::__OVRPlugin__AppPerfStats::__get_FrameStats() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfStats::__set_FrameStatsCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__AppPerfStats::__get_FrameStatsCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__AppPerfStats::__get_FrameStatsCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfStats::__set_AnyFrameStatsDropped(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__AppPerfStats::__get_AnyFrameStatsDropped()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__AppPerfStats::__get_AnyFrameStatsDropped() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__AppPerfStats::__set_AdaptiveGpuPerformanceScale(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__AppPerfStats::__get_AdaptiveGpuPerformanceScale()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__AppPerfStats::__get_AdaptiveGpuPerformanceScale() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "FrameStats", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "FrameStatsCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "AnyFrameStatsDropped", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "AdaptiveGpuPerformanceScale", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__AppPerfStats::__OVRPlugin__AppPerfStats(::ArrayW<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats,::Array<::GlobalNamespace::__OVRPlugin__AppPerfFrameStats>*>  FrameStats, int32_t  FrameStatsCount, ::GlobalNamespace::__OVRPlugin__Bool  AnyFrameStatsDropped, float_t  AdaptiveGpuPerformanceScale) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->FrameStats = FrameStats;
this->FrameStatsCount = FrameStatsCount;
this->AnyFrameStatsDropped = AnyFrameStatsDropped;
this->AdaptiveGpuPerformanceScale = AdaptiveGpuPerformanceScale;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Sizei.Equals
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__Sizei::*)(::GlobalNamespace::__OVRPlugin__Sizei)>(&::GlobalNamespace::__OVRPlugin__Sizei::Equals)> {
  constexpr static std::size_t size = 0x28;
  constexpr static std::size_t addrs = 0x276cc44;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                            "Equals",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Sizei.Equals
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__Sizei::*)(::System::Object*)>(&::GlobalNamespace::__OVRPlugin__Sizei::Equals)> {
  constexpr static std::size_t size = 0x88;
  constexpr static std::size_t addrs = 0x276cc6c;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                                  0
                                ));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Sizei.GetHashCode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (::GlobalNamespace::__OVRPlugin__Sizei::*)()>(&::GlobalNamespace::__OVRPlugin__Sizei::GetHashCode)> {
  constexpr static std::size_t size = 0x14;
  constexpr static std::size_t addrs = 0x276ccf4;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                                  2
                                ));
    return ___internal_method;
  }
};
/// @brief Convert operator to "::System::IEquatable_1<::GlobalNamespace::__OVRPlugin__Sizei>"
constexpr  GlobalNamespace::__OVRPlugin__Sizei::operator ::System::IEquatable_1<::GlobalNamespace::__OVRPlugin__Sizei>*()  {
return static_cast<::System::IEquatable_1<::GlobalNamespace::__OVRPlugin__Sizei>*>(static_cast<void*>(::cordl_internals::Box(this)));
}
constexpr void GlobalNamespace::__OVRPlugin__Sizei::__set_w(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Sizei::__get_w()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Sizei::__get_w() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Sizei::__set_h(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Sizei::__get_h()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Sizei::__get_h() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__Sizei::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Sizei  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Sizei, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Sizei GlobalNamespace::__OVRPlugin__Sizei::getStaticF_zero()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Sizei, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get>();
}
inline bool GlobalNamespace::__OVRPlugin__Sizei::Equals(::GlobalNamespace::__OVRPlugin__Sizei  other)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                            "Equals",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(*this, ___internal_method, other);
}
inline bool GlobalNamespace::__OVRPlugin__Sizei::Equals(::System::Object*  obj)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                            "Equals",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Object*>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(*this, ___internal_method, obj);
}
inline int32_t GlobalNamespace::__OVRPlugin__Sizei::GetHashCode()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizei>::get(),
                            "GetHashCode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "w", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Sizei::__OVRPlugin__Sizei(int32_t  w, int32_t  h) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->w = w;
this->h = h;
}
constexpr void GlobalNamespace::__OVRPlugin__Sizef::__set_w(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Sizef::__get_w()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Sizef::__get_w() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Sizef::__set_h(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Sizef::__get_h()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Sizef::__get_h() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__Sizef::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Sizef  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Sizef, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizef>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Sizef>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Sizef GlobalNamespace::__OVRPlugin__Sizef::getStaticF_zero()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Sizef, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Sizef>::get>();
}
// Ctor Parameters [CppParam { name: "w", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Sizef::__OVRPlugin__Sizef(float_t  w, float_t  h) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->w = w;
this->h = h;
}
constexpr void GlobalNamespace::__OVRPlugin__Size3f::__set_w(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Size3f::__get_w()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Size3f::__get_w() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Size3f::__set_h(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Size3f::__get_h()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Size3f::__get_h() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Size3f::__set_d(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Size3f::__get_d()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Size3f::__get_d() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__Size3f::setStaticF_zero(::GlobalNamespace::__OVRPlugin__Size3f  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Size3f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Size3f>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Size3f>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Size3f GlobalNamespace::__OVRPlugin__Size3f::getStaticF_zero()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Size3f, "zero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Size3f>::get>();
}
// Ctor Parameters [CppParam { name: "w", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "h", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "d", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Size3f::__OVRPlugin__Size3f(float_t  w, float_t  h, float_t  d) noexcept : ::bs_hook::ValueTypeWrapper<0xc>() {this->w = w;
this->h = h;
this->d = d;
}
constexpr void GlobalNamespace::__OVRPlugin__Vector2i::__set_x(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Vector2i::__get_x()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Vector2i::__get_x() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Vector2i::__set_y(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Vector2i::__get_y()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Vector2i::__get_y() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "x", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "y", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Vector2i::__OVRPlugin__Vector2i(int32_t  x, int32_t  y) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->x = x;
this->y = y;
}
constexpr void GlobalNamespace::__OVRPlugin__Recti::__set_Pos(::GlobalNamespace::__OVRPlugin__Vector2i  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2i, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2i>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2i& GlobalNamespace::__OVRPlugin__Recti::__get_Pos()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2i, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2i const& GlobalNamespace::__OVRPlugin__Recti::__get_Pos() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2i, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Recti::__set_Size(::GlobalNamespace::__OVRPlugin__Sizei  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei& GlobalNamespace::__OVRPlugin__Recti::__get_Size()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei const& GlobalNamespace::__OVRPlugin__Recti::__get_Size() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Pos", ty: "::GlobalNamespace::__OVRPlugin__Vector2i", modifiers: "", def_value: Some("{}") }, CppParam { name: "Size", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Recti::__OVRPlugin__Recti(::GlobalNamespace::__OVRPlugin__Vector2i  Pos, ::GlobalNamespace::__OVRPlugin__Sizei  Size) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->Pos = Pos;
this->Size = Size;
}
constexpr void GlobalNamespace::__OVRPlugin__Rectf::__set_Pos(::GlobalNamespace::__OVRPlugin__Vector2f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector2f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f& GlobalNamespace::__OVRPlugin__Rectf::__get_Pos()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector2f const& GlobalNamespace::__OVRPlugin__Rectf::__get_Pos() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector2f, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Rectf::__set_Size(::GlobalNamespace::__OVRPlugin__Sizef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Sizef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Sizef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizef& GlobalNamespace::__OVRPlugin__Rectf::__get_Size()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizef const& GlobalNamespace::__OVRPlugin__Rectf::__get_Size() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Pos", ty: "::GlobalNamespace::__OVRPlugin__Vector2f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Size", ty: "::GlobalNamespace::__OVRPlugin__Sizef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Rectf::__OVRPlugin__Rectf(::GlobalNamespace::__OVRPlugin__Vector2f  Pos, ::GlobalNamespace::__OVRPlugin__Sizef  Size) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->Pos = Pos;
this->Size = Size;
}
constexpr void GlobalNamespace::__OVRPlugin__Boundsf::__set_Pos(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__Boundsf::__get_Pos()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__Boundsf::__get_Pos() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Boundsf::__set_Size(::GlobalNamespace::__OVRPlugin__Size3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Size3f, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Size3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Size3f& GlobalNamespace::__OVRPlugin__Boundsf::__get_Size()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Size3f, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Size3f const& GlobalNamespace::__OVRPlugin__Boundsf::__get_Size() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Size3f, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Pos", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Size", ty: "::GlobalNamespace::__OVRPlugin__Size3f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Boundsf::__OVRPlugin__Boundsf(::GlobalNamespace::__OVRPlugin__Vector3f  Pos, ::GlobalNamespace::__OVRPlugin__Size3f  Size) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->Pos = Pos;
this->Size = Size;
}
constexpr void GlobalNamespace::__OVRPlugin__Frustumf::__set_zNear(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Frustumf::__get_zNear()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Frustumf::__get_zNear() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Frustumf::__set_zFar(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Frustumf::__get_zFar()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Frustumf::__get_zFar() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Frustumf::__set_fovX(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Frustumf::__get_fovX()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Frustumf::__get_fovX() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Frustumf::__set_fovY(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Frustumf::__get_fovY()  {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Frustumf::__get_fovY() const {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "zNear", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "zFar", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "fovX", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "fovY", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Frustumf::__OVRPlugin__Frustumf(float_t  zNear, float_t  zFar, float_t  fovX, float_t  fovY) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->zNear = zNear;
this->zFar = zFar;
this->fovX = fovX;
this->fovY = fovY;
}
constexpr void GlobalNamespace::__OVRPlugin__Frustumf2::__set_zNear(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Frustumf2::__get_zNear()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Frustumf2::__get_zNear() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Frustumf2::__set_zFar(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Frustumf2::__get_zFar()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Frustumf2::__get_zFar() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Frustumf2::__set_Fov(::GlobalNamespace::__OVRPlugin__Fovf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Fovf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Fovf& GlobalNamespace::__OVRPlugin__Frustumf2::__get_Fov()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Fovf const& GlobalNamespace::__OVRPlugin__Frustumf2::__get_Fov() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "zNear", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "zFar", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Fov", ty: "::GlobalNamespace::__OVRPlugin__Fovf", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Frustumf2::__OVRPlugin__Frustumf2(float_t  zNear, float_t  zFar, ::GlobalNamespace::__OVRPlugin__Fovf  Fov) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->zNear = zNear;
this->zFar = zFar;
this->Fov = Fov;
}
constexpr void GlobalNamespace::__OVRPlugin__BoundaryType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__BoundaryType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__BoundaryType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryType::__OVRPlugin__BoundaryType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryType  GlobalNamespace::__OVRPlugin__BoundaryType::OuterBoundary{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryType  GlobalNamespace::__OVRPlugin__BoundaryType::PlayArea{static_cast<int32_t>(0x100)};
constexpr void GlobalNamespace::__OVRPlugin__BoundaryTestResult::__set_IsTriggering(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__BoundaryTestResult::__get_IsTriggering()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__BoundaryTestResult::__get_IsTriggering() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BoundaryTestResult::__set_ClosestDistance(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__BoundaryTestResult::__get_ClosestDistance()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__BoundaryTestResult::__get_ClosestDistance() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BoundaryTestResult::__set_ClosestPoint(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__BoundaryTestResult::__get_ClosestPoint()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__BoundaryTestResult::__get_ClosestPoint() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BoundaryTestResult::__set_ClosestPointNormal(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__BoundaryTestResult::__get_ClosestPointNormal()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__BoundaryTestResult::__get_ClosestPointNormal() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "IsTriggering", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "ClosestDistance", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ClosestPoint", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "ClosestPointNormal", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryTestResult::__OVRPlugin__BoundaryTestResult(::GlobalNamespace::__OVRPlugin__Bool  IsTriggering, float_t  ClosestDistance, ::GlobalNamespace::__OVRPlugin__Vector3f  ClosestPoint, ::GlobalNamespace::__OVRPlugin__Vector3f  ClosestPointNormal) noexcept : ::bs_hook::ValueTypeWrapper<0x20>() {this->IsTriggering = IsTriggering;
this->ClosestDistance = ClosestDistance;
this->ClosestPoint = ClosestPoint;
this->ClosestPointNormal = ClosestPointNormal;
}
constexpr void GlobalNamespace::__OVRPlugin__BoundaryGeometry::__set_BoundaryType(::GlobalNamespace::__OVRPlugin__BoundaryType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoundaryType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoundaryType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryType& GlobalNamespace::__OVRPlugin__BoundaryGeometry::__get_BoundaryType()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoundaryType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryType const& GlobalNamespace::__OVRPlugin__BoundaryGeometry::__get_BoundaryType() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoundaryType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BoundaryGeometry::__set_Points(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>& GlobalNamespace::__OVRPlugin__BoundaryGeometry::__get_Points()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*> const& GlobalNamespace::__OVRPlugin__BoundaryGeometry::__get_Points() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BoundaryGeometry::__set_PointsCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__BoundaryGeometry::__get_PointsCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__BoundaryGeometry::__get_PointsCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "BoundaryType", ty: "::GlobalNamespace::__OVRPlugin__BoundaryType", modifiers: "", def_value: Some("{}") }, CppParam { name: "Points", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "PointsCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoundaryGeometry::__OVRPlugin__BoundaryGeometry(::GlobalNamespace::__OVRPlugin__BoundaryType  BoundaryType, ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>  Points, int32_t  PointsCount) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->BoundaryType = BoundaryType;
this->Points = Points;
this->PointsCount = PointsCount;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Colorf.ToString
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__Colorf::*)()>(&::GlobalNamespace::__OVRPlugin__Colorf::ToString)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x276cde4;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Colorf>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Colorf>::get(),
                                  3
                                ));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__Colorf::__set_r(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Colorf::__get_r()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Colorf::__get_r() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Colorf::__set_g(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Colorf::__get_g()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Colorf::__get_g() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Colorf::__set_b(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Colorf::__get_b()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Colorf::__get_b() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Colorf::__set_a(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Colorf::__get_a()  {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Colorf::__get_a() const {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline ::StringW GlobalNamespace::__OVRPlugin__Colorf::ToString()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Colorf>::get(),
                            "ToString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "r", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "g", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "b", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "a", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Colorf::__OVRPlugin__Colorf(float_t  r, float_t  g, float_t  b, float_t  a) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->r = r;
this->g = g;
this->b = b;
this->a = a;
}
constexpr void GlobalNamespace::__OVRPlugin__Fovf::__set_UpTan(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Fovf::__get_UpTan()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Fovf::__get_UpTan() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Fovf::__set_DownTan(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Fovf::__get_DownTan()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Fovf::__get_DownTan() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Fovf::__set_LeftTan(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Fovf::__get_LeftTan()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Fovf::__get_LeftTan() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Fovf::__set_RightTan(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__Fovf::__get_RightTan()  {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__Fovf::__get_RightTan() const {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "UpTan", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "DownTan", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LeftTan", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RightTan", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Fovf::__OVRPlugin__Fovf(float_t  UpTan, float_t  DownTan, float_t  LeftTan, float_t  RightTan) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->UpTan = UpTan;
this->DownTan = DownTan;
this->LeftTan = LeftTan;
this->RightTan = RightTan;
}
constexpr void GlobalNamespace::__OVRPlugin__CameraIntrinsics::__set_IsValid(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_IsValid()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_IsValid() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraIntrinsics::__set_LastChangedTimeSeconds(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_LastChangedTimeSeconds()  {
return ::cordl_internals::getInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_LastChangedTimeSeconds() const {
return ::cordl_internals::getInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraIntrinsics::__set_FOVPort(::GlobalNamespace::__OVRPlugin__Fovf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Fovf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Fovf& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_FOVPort()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Fovf const& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_FOVPort() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraIntrinsics::__set_VirtualNearPlaneDistanceMeters(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_VirtualNearPlaneDistanceMeters()  {
return ::cordl_internals::getInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_VirtualNearPlaneDistanceMeters() const {
return ::cordl_internals::getInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraIntrinsics::__set_VirtualFarPlaneDistanceMeters(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_VirtualFarPlaneDistanceMeters()  {
return ::cordl_internals::getInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_VirtualFarPlaneDistanceMeters() const {
return ::cordl_internals::getInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraIntrinsics::__set_ImageSensorPixelResolution(::GlobalNamespace::__OVRPlugin__Sizei  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_ImageSensorPixelResolution()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei const& GlobalNamespace::__OVRPlugin__CameraIntrinsics::__get_ImageSensorPixelResolution() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "IsValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "LastChangedTimeSeconds", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "FOVPort", ty: "::GlobalNamespace::__OVRPlugin__Fovf", modifiers: "", def_value: Some("{}") }, CppParam { name: "VirtualNearPlaneDistanceMeters", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "VirtualFarPlaneDistanceMeters", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ImageSensorPixelResolution", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraIntrinsics::__OVRPlugin__CameraIntrinsics(::GlobalNamespace::__OVRPlugin__Bool  IsValid, double_t  LastChangedTimeSeconds, ::GlobalNamespace::__OVRPlugin__Fovf  FOVPort, float_t  VirtualNearPlaneDistanceMeters, float_t  VirtualFarPlaneDistanceMeters, ::GlobalNamespace::__OVRPlugin__Sizei  ImageSensorPixelResolution) noexcept : ::bs_hook::ValueTypeWrapper<0x30>() {this->IsValid = IsValid;
this->LastChangedTimeSeconds = LastChangedTimeSeconds;
this->FOVPort = FOVPort;
this->VirtualNearPlaneDistanceMeters = VirtualNearPlaneDistanceMeters;
this->VirtualFarPlaneDistanceMeters = VirtualFarPlaneDistanceMeters;
this->ImageSensorPixelResolution = ImageSensorPixelResolution;
}
constexpr void GlobalNamespace::__OVRPlugin__CameraExtrinsics::__set_IsValid(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_IsValid()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_IsValid() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraExtrinsics::__set_LastChangedTimeSeconds(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_LastChangedTimeSeconds()  {
return ::cordl_internals::getInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_LastChangedTimeSeconds() const {
return ::cordl_internals::getInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraExtrinsics::__set_CameraStatusData(::GlobalNamespace::__OVRPlugin__CameraStatus  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__CameraStatus, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__CameraStatus>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_CameraStatusData()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__CameraStatus, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__CameraStatus const& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_CameraStatusData() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__CameraStatus, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraExtrinsics::__set_AttachedToNode(::GlobalNamespace::__OVRPlugin__Node  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Node, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Node>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Node& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_AttachedToNode()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Node, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Node const& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_AttachedToNode() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Node, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__CameraExtrinsics::__set_RelativePose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_RelativePose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__CameraExtrinsics::__get_RelativePose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "IsValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "LastChangedTimeSeconds", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "CameraStatusData", ty: "::GlobalNamespace::__OVRPlugin__CameraStatus", modifiers: "", def_value: Some("{}") }, CppParam { name: "AttachedToNode", ty: "::GlobalNamespace::__OVRPlugin__Node", modifiers: "", def_value: Some("{}") }, CppParam { name: "RelativePose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__CameraExtrinsics::__OVRPlugin__CameraExtrinsics(::GlobalNamespace::__OVRPlugin__Bool  IsValid, double_t  LastChangedTimeSeconds, ::GlobalNamespace::__OVRPlugin__CameraStatus  CameraStatusData, ::GlobalNamespace::__OVRPlugin__Node  AttachedToNode, ::GlobalNamespace::__OVRPlugin__Posef  RelativePose) noexcept : ::bs_hook::ValueTypeWrapper<0x38>() {this->IsValid = IsValid;
this->LastChangedTimeSeconds = LastChangedTimeSeconds;
this->CameraStatusData = CameraStatusData;
this->AttachedToNode = AttachedToNode;
this->RelativePose = RelativePose;
}
constexpr void GlobalNamespace::__OVRPlugin__LayerLayout::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerLayout::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerLayout::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout::__OVRPlugin__LayerLayout(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout  GlobalNamespace::__OVRPlugin__LayerLayout::Stereo{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout  GlobalNamespace::__OVRPlugin__LayerLayout::Mono{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout  GlobalNamespace::__OVRPlugin__LayerLayout::DoubleWide{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout  GlobalNamespace::__OVRPlugin__LayerLayout::Array{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout  GlobalNamespace::__OVRPlugin__LayerLayout::EnumSize{static_cast<int32_t>(0xf)};
constexpr void GlobalNamespace::__OVRPlugin__LayerFlags::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags::__OVRPlugin__LayerFlags(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags  GlobalNamespace::__OVRPlugin__LayerFlags::Static{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags  GlobalNamespace::__OVRPlugin__LayerFlags::LoadingScreen{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags  GlobalNamespace::__OVRPlugin__LayerFlags::SymmetricFov{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags  GlobalNamespace::__OVRPlugin__LayerFlags::TextureOriginAtBottomLeft{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags  GlobalNamespace::__OVRPlugin__LayerFlags::ChromaticAberrationCorrection{static_cast<int32_t>(0x10)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags  GlobalNamespace::__OVRPlugin__LayerFlags::NoAllocation{static_cast<int32_t>(0x20)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags  GlobalNamespace::__OVRPlugin__LayerFlags::ProtectedContent{static_cast<int32_t>(0x40)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags  GlobalNamespace::__OVRPlugin__LayerFlags::AndroidSurfaceSwapChain{static_cast<int32_t>(0x80)};
constexpr ::GlobalNamespace::__OVRPlugin__LayerFlags  GlobalNamespace::__OVRPlugin__LayerFlags::BicubicFiltering{static_cast<int32_t>(0x4000)};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LayerDesc.ToString
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (::GlobalNamespace::__OVRPlugin__LayerDesc::*)()>(&::GlobalNamespace::__OVRPlugin__LayerDesc::ToString)> {
  constexpr static std::size_t size = 0x400;
  constexpr static std::size_t addrs = 0x276cfc8;

  inline static const ::MethodInfo* methodInfo() {
    
                            static auto* ___internal_method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(
                                ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(),
                                 ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(),
                                  3
                                ));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_Shape(::GlobalNamespace::__OVRPlugin__OverlayShape  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__OverlayShape, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__OverlayShape>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape& GlobalNamespace::__OVRPlugin__LayerDesc::__get_Shape()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__OverlayShape, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_Shape() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__OverlayShape, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_Layout(::GlobalNamespace::__OVRPlugin__LayerLayout  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__LayerLayout, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__LayerLayout>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout& GlobalNamespace::__OVRPlugin__LayerDesc::__get_Layout()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__LayerLayout, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_Layout() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__LayerLayout, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_TextureSize(::GlobalNamespace::__OVRPlugin__Sizei  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei& GlobalNamespace::__OVRPlugin__LayerDesc::__get_TextureSize()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_TextureSize() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_MipLevels(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MipLevels()  {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MipLevels() const {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_SampleCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerDesc::__get_SampleCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_SampleCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_Format(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat& GlobalNamespace::__OVRPlugin__LayerDesc::__get_Format()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_Format() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_LayerFlags(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerDesc::__get_LayerFlags()  {
return ::cordl_internals::getInstanceField<int32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_LayerFlags() const {
return ::cordl_internals::getInstanceField<int32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_Fov(::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*>, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*>& GlobalNamespace::__OVRPlugin__LayerDesc::__get_Fov()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*>, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*> const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_Fov() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*>, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_VisibleRect(::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*>, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*>& GlobalNamespace::__OVRPlugin__LayerDesc::__get_VisibleRect()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*>, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*> const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_VisibleRect() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*>, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_MaxViewportSize(::GlobalNamespace::__OVRPlugin__Sizei  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MaxViewportSize()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MaxViewportSize() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_DepthFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat& GlobalNamespace::__OVRPlugin__LayerDesc::__get_DepthFormat()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_DepthFormat() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_MotionVectorFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MotionVectorFormat()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MotionVectorFormat() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_MotionVectorDepthFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MotionVectorDepthFormat()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MotionVectorDepthFormat() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDesc::__set_MotionVectorTextureSize(::GlobalNamespace::__OVRPlugin__Sizei  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MotionVectorTextureSize()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei const& GlobalNamespace::__OVRPlugin__LayerDesc::__get_MotionVectorTextureSize() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline ::StringW GlobalNamespace::__OVRPlugin__LayerDesc::ToString()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(),
                            "ToString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "Shape", ty: "::GlobalNamespace::__OVRPlugin__OverlayShape", modifiers: "", def_value: Some("{}") }, CppParam { name: "Layout", ty: "::GlobalNamespace::__OVRPlugin__LayerLayout", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }, CppParam { name: "MipLevels", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Format", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "LayerFlags", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Fov", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "VisibleRect", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "MaxViewportSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }, CppParam { name: "DepthFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorDepthFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorTextureSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerDesc::__OVRPlugin__LayerDesc(::GlobalNamespace::__OVRPlugin__OverlayShape  Shape, ::GlobalNamespace::__OVRPlugin__LayerLayout  Layout, ::GlobalNamespace::__OVRPlugin__Sizei  TextureSize, int32_t  MipLevels, int32_t  SampleCount, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  Format, int32_t  LayerFlags, ::ArrayW<::GlobalNamespace::__OVRPlugin__Fovf,::Array<::GlobalNamespace::__OVRPlugin__Fovf>*>  Fov, ::ArrayW<::GlobalNamespace::__OVRPlugin__Rectf,::Array<::GlobalNamespace::__OVRPlugin__Rectf>*>  VisibleRect, ::GlobalNamespace::__OVRPlugin__Sizei  MaxViewportSize, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  DepthFormat, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  MotionVectorFormat, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  MotionVectorDepthFormat, ::GlobalNamespace::__OVRPlugin__Sizei  MotionVectorTextureSize) noexcept : ::bs_hook::ValueTypeWrapper<0x50>() {this->Shape = Shape;
this->Layout = Layout;
this->TextureSize = TextureSize;
this->MipLevels = MipLevels;
this->SampleCount = SampleCount;
this->Format = Format;
this->LayerFlags = LayerFlags;
this->Fov = Fov;
this->VisibleRect = VisibleRect;
this->MaxViewportSize = MaxViewportSize;
this->DepthFormat = DepthFormat;
this->MotionVectorFormat = MotionVectorFormat;
this->MotionVectorDepthFormat = MotionVectorDepthFormat;
this->MotionVectorTextureSize = MotionVectorTextureSize;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LayerDescInternal._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__LayerDescInternal::*)(::GlobalNamespace::__OVRPlugin__LayerDesc)>(&::GlobalNamespace::__OVRPlugin__LayerDescInternal::_ctor)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x276d3c8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDescInternal>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerDesc>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__LayerDescInternal.ToLayerDesc
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__LayerDesc (::GlobalNamespace::__OVRPlugin__LayerDescInternal::*)()>(&::GlobalNamespace::__OVRPlugin__LayerDescInternal::ToLayerDesc)> {
  constexpr static std::size_t size = 0x150;
  constexpr static std::size_t addrs = 0x276d4a4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDescInternal>::get(),
                            "ToLayerDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_Shape(::GlobalNamespace::__OVRPlugin__OverlayShape  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__OverlayShape, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__OverlayShape>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Shape()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__OverlayShape, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__OverlayShape const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Shape() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__OverlayShape, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_Layout(::GlobalNamespace::__OVRPlugin__LayerLayout  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__LayerLayout, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__LayerLayout>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Layout()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__LayerLayout, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__LayerLayout const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Layout() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__LayerLayout, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_TextureSize(::GlobalNamespace::__OVRPlugin__Sizei  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_TextureSize()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_TextureSize() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_MipLevels(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MipLevels()  {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MipLevels() const {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_SampleCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_SampleCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_SampleCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_Format(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Format()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Format() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_LayerFlags(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_LayerFlags()  {
return ::cordl_internals::getInstanceField<int32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_LayerFlags() const {
return ::cordl_internals::getInstanceField<int32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_Fov0(::GlobalNamespace::__OVRPlugin__Fovf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Fovf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Fovf& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Fov0()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Fovf const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Fov0() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_Fov1(::GlobalNamespace::__OVRPlugin__Fovf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Fovf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Fovf& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Fov1()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Fovf const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_Fov1() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Fovf, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_VisibleRect0(::GlobalNamespace::__OVRPlugin__Rectf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Rectf, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Rectf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Rectf& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_VisibleRect0()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Rectf, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Rectf const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_VisibleRect0() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Rectf, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_VisibleRect1(::GlobalNamespace::__OVRPlugin__Rectf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Rectf, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Rectf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Rectf& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_VisibleRect1()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Rectf, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Rectf const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_VisibleRect1() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Rectf, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_MaxViewportSize(::GlobalNamespace::__OVRPlugin__Sizei  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MaxViewportSize()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MaxViewportSize() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_DepthFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_DepthFormat()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_DepthFormat() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_MotionVectorFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x6c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MotionVectorFormat()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x6c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MotionVectorFormat() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x6c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_MotionVectorDepthFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MotionVectorDepthFormat()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeTextureFormat const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MotionVectorDepthFormat() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerDescInternal::__set_MotionVectorTextureSize(::GlobalNamespace::__OVRPlugin__Sizei  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x74>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Sizei>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MotionVectorTextureSize()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x74>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Sizei const& GlobalNamespace::__OVRPlugin__LayerDescInternal::__get_MotionVectorTextureSize() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Sizei, 0x74>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__LayerDescInternal::_ctor(::GlobalNamespace::__OVRPlugin__LayerDesc  layerDesc)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDescInternal>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerDesc>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, layerDesc);
}
inline ::GlobalNamespace::__OVRPlugin__LayerDesc GlobalNamespace::__OVRPlugin__LayerDescInternal::ToLayerDesc()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__LayerDescInternal>::get(),
                            "ToLayerDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__LayerDesc, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "Shape", ty: "::GlobalNamespace::__OVRPlugin__OverlayShape", modifiers: "", def_value: Some("{}") }, CppParam { name: "Layout", ty: "::GlobalNamespace::__OVRPlugin__LayerLayout", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }, CppParam { name: "MipLevels", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Format", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "LayerFlags", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Fov0", ty: "::GlobalNamespace::__OVRPlugin__Fovf", modifiers: "", def_value: Some("{}") }, CppParam { name: "Fov1", ty: "::GlobalNamespace::__OVRPlugin__Fovf", modifiers: "", def_value: Some("{}") }, CppParam { name: "VisibleRect0", ty: "::GlobalNamespace::__OVRPlugin__Rectf", modifiers: "", def_value: Some("{}") }, CppParam { name: "VisibleRect1", ty: "::GlobalNamespace::__OVRPlugin__Rectf", modifiers: "", def_value: Some("{}") }, CppParam { name: "MaxViewportSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }, CppParam { name: "DepthFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorDepthFormat", ty: "::GlobalNamespace::__OVRPlugin__EyeTextureFormat", modifiers: "", def_value: Some("{}") }, CppParam { name: "MotionVectorTextureSize", ty: "::GlobalNamespace::__OVRPlugin__Sizei", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerDescInternal::__OVRPlugin__LayerDescInternal(::GlobalNamespace::__OVRPlugin__OverlayShape  Shape, ::GlobalNamespace::__OVRPlugin__LayerLayout  Layout, ::GlobalNamespace::__OVRPlugin__Sizei  TextureSize, int32_t  MipLevels, int32_t  SampleCount, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  Format, int32_t  LayerFlags, ::GlobalNamespace::__OVRPlugin__Fovf  Fov0, ::GlobalNamespace::__OVRPlugin__Fovf  Fov1, ::GlobalNamespace::__OVRPlugin__Rectf  VisibleRect0, ::GlobalNamespace::__OVRPlugin__Rectf  VisibleRect1, ::GlobalNamespace::__OVRPlugin__Sizei  MaxViewportSize, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  DepthFormat, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  MotionVectorFormat, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  MotionVectorDepthFormat, ::GlobalNamespace::__OVRPlugin__Sizei  MotionVectorTextureSize) noexcept : ::bs_hook::ValueTypeWrapper<0x7c>() {this->Shape = Shape;
this->Layout = Layout;
this->TextureSize = TextureSize;
this->MipLevels = MipLevels;
this->SampleCount = SampleCount;
this->Format = Format;
this->LayerFlags = LayerFlags;
this->Fov0 = Fov0;
this->Fov1 = Fov1;
this->VisibleRect0 = VisibleRect0;
this->VisibleRect1 = VisibleRect1;
this->MaxViewportSize = MaxViewportSize;
this->DepthFormat = DepthFormat;
this->MotionVectorFormat = MotionVectorFormat;
this->MotionVectorDepthFormat = MotionVectorDepthFormat;
this->MotionVectorTextureSize = MotionVectorTextureSize;
}
constexpr void GlobalNamespace::__OVRPlugin__BlendFactor::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__BlendFactor::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__BlendFactor::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor::__OVRPlugin__BlendFactor(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor  GlobalNamespace::__OVRPlugin__BlendFactor::Zero{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor  GlobalNamespace::__OVRPlugin__BlendFactor::One{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor  GlobalNamespace::__OVRPlugin__BlendFactor::SrcAlpha{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor  GlobalNamespace::__OVRPlugin__BlendFactor::OneMinusSrcAlpha{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor  GlobalNamespace::__OVRPlugin__BlendFactor::DstAlpha{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__BlendFactor  GlobalNamespace::__OVRPlugin__BlendFactor::OneMinusDstAlpha{static_cast<int32_t>(0x5)};
constexpr void GlobalNamespace::__OVRPlugin__LayerSubmit::__set_LayerId(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_LayerId()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_LayerId() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerSubmit::__set_TextureStage(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_TextureStage()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_TextureStage() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerSubmit::__set_ViewportRect(::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*>& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_ViewportRect()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*> const& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_ViewportRect() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerSubmit::__set_Pose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_Pose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_Pose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__LayerSubmit::__set_LayerSubmitFlags(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_LayerSubmitFlags()  {
return ::cordl_internals::getInstanceField<int32_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__LayerSubmit::__get_LayerSubmitFlags() const {
return ::cordl_internals::getInstanceField<int32_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "LayerId", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureStage", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ViewportRect", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "Pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "LayerSubmitFlags", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__LayerSubmit::__OVRPlugin__LayerSubmit(int32_t  LayerId, int32_t  TextureStage, ::ArrayW<::GlobalNamespace::__OVRPlugin__Recti,::Array<::GlobalNamespace::__OVRPlugin__Recti>*>  ViewportRect, ::GlobalNamespace::__OVRPlugin__Posef  Pose, int32_t  LayerSubmitFlags) noexcept : ::bs_hook::ValueTypeWrapper<0x30>() {this->LayerId = LayerId;
this->TextureStage = TextureStage;
this->ViewportRect = ViewportRect;
this->Pose = Pose;
this->LayerSubmitFlags = LayerSubmitFlags;
}
constexpr void GlobalNamespace::__OVRPlugin__TrackingConfidence::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TrackingConfidence::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TrackingConfidence::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence::__OVRPlugin__TrackingConfidence(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence  GlobalNamespace::__OVRPlugin__TrackingConfidence::Low{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence  GlobalNamespace::__OVRPlugin__TrackingConfidence::High{static_cast<int32_t>(0x3f800000)};
constexpr void GlobalNamespace::__OVRPlugin__Hand::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Hand::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Hand::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Hand::__OVRPlugin__Hand(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Hand  GlobalNamespace::__OVRPlugin__Hand::None{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__Hand  GlobalNamespace::__OVRPlugin__Hand::HandLeft{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Hand  GlobalNamespace::__OVRPlugin__Hand::HandRight{static_cast<int32_t>(0x1)};
constexpr void GlobalNamespace::__OVRPlugin__HandStatus::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HandStatus::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HandStatus::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus::__OVRPlugin__HandStatus(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus  GlobalNamespace::__OVRPlugin__HandStatus::HandTracked{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus  GlobalNamespace::__OVRPlugin__HandStatus::InputStateValid{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus  GlobalNamespace::__OVRPlugin__HandStatus::SystemGestureInProgress{static_cast<int32_t>(0x40)};
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus  GlobalNamespace::__OVRPlugin__HandStatus::DominantHand{static_cast<int32_t>(0x80)};
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus  GlobalNamespace::__OVRPlugin__HandStatus::MenuPressed{static_cast<int32_t>(0x100)};
constexpr void GlobalNamespace::__OVRPlugin__BoneId::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__BoneId::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__BoneId::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoneId::__OVRPlugin__BoneId(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Invalid{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Start{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_WristRoot{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_ForearmStub{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Thumb0{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Thumb1{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Thumb2{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Thumb3{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Index1{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Index2{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Index3{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Middle1{static_cast<int32_t>(0x9)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Middle2{static_cast<int32_t>(0xa)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Middle3{static_cast<int32_t>(0xb)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Ring1{static_cast<int32_t>(0xc)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Ring2{static_cast<int32_t>(0xd)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Ring3{static_cast<int32_t>(0xe)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Pinky0{static_cast<int32_t>(0xf)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Pinky1{static_cast<int32_t>(0x10)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Pinky2{static_cast<int32_t>(0x11)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_Pinky3{static_cast<int32_t>(0x12)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_MaxSkinnable{static_cast<int32_t>(0x13)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_ThumbTip{static_cast<int32_t>(0x13)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_IndexTip{static_cast<int32_t>(0x14)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_MiddleTip{static_cast<int32_t>(0x15)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_RingTip{static_cast<int32_t>(0x16)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_PinkyTip{static_cast<int32_t>(0x17)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Hand_End{static_cast<int32_t>(0x18)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_Start{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_Root{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_Hips{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_SpineLower{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_SpineMiddle{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_SpineUpper{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_Chest{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_Neck{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_Head{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftShoulder{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftScapula{static_cast<int32_t>(0x9)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftArmUpper{static_cast<int32_t>(0xa)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftArmLower{static_cast<int32_t>(0xb)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandWristTwist{static_cast<int32_t>(0xc)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightShoulder{static_cast<int32_t>(0xd)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightScapula{static_cast<int32_t>(0xe)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightArmUpper{static_cast<int32_t>(0xf)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightArmLower{static_cast<int32_t>(0x10)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandWristTwist{static_cast<int32_t>(0x11)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandPalm{static_cast<int32_t>(0x12)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandWrist{static_cast<int32_t>(0x13)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandThumbMetacarpal{static_cast<int32_t>(0x14)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandThumbProximal{static_cast<int32_t>(0x15)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandThumbDistal{static_cast<int32_t>(0x16)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandThumbTip{static_cast<int32_t>(0x17)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexMetacarpal{static_cast<int32_t>(0x18)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexProximal{static_cast<int32_t>(0x19)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexIntermediate{static_cast<int32_t>(0x1a)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexDistal{static_cast<int32_t>(0x1b)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandIndexTip{static_cast<int32_t>(0x1c)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleMetacarpal{static_cast<int32_t>(0x1d)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleProximal{static_cast<int32_t>(0x1e)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleIntermediate{static_cast<int32_t>(0x1f)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleDistal{static_cast<int32_t>(0x20)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandMiddleTip{static_cast<int32_t>(0x21)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingMetacarpal{static_cast<int32_t>(0x22)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingProximal{static_cast<int32_t>(0x23)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingIntermediate{static_cast<int32_t>(0x24)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingDistal{static_cast<int32_t>(0x25)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandRingTip{static_cast<int32_t>(0x26)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleMetacarpal{static_cast<int32_t>(0x27)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleProximal{static_cast<int32_t>(0x28)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleIntermediate{static_cast<int32_t>(0x29)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleDistal{static_cast<int32_t>(0x2a)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_LeftHandLittleTip{static_cast<int32_t>(0x2b)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandPalm{static_cast<int32_t>(0x2c)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandWrist{static_cast<int32_t>(0x2d)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandThumbMetacarpal{static_cast<int32_t>(0x2e)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandThumbProximal{static_cast<int32_t>(0x2f)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandThumbDistal{static_cast<int32_t>(0x30)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandThumbTip{static_cast<int32_t>(0x31)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexMetacarpal{static_cast<int32_t>(0x32)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexProximal{static_cast<int32_t>(0x33)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexIntermediate{static_cast<int32_t>(0x34)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexDistal{static_cast<int32_t>(0x35)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandIndexTip{static_cast<int32_t>(0x36)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleMetacarpal{static_cast<int32_t>(0x37)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleProximal{static_cast<int32_t>(0x38)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleIntermediate{static_cast<int32_t>(0x39)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleDistal{static_cast<int32_t>(0x3a)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandMiddleTip{static_cast<int32_t>(0x3b)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingMetacarpal{static_cast<int32_t>(0x3c)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingProximal{static_cast<int32_t>(0x3d)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingIntermediate{static_cast<int32_t>(0x3e)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingDistal{static_cast<int32_t>(0x3f)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandRingTip{static_cast<int32_t>(0x40)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleMetacarpal{static_cast<int32_t>(0x41)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleProximal{static_cast<int32_t>(0x42)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleIntermediate{static_cast<int32_t>(0x43)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleDistal{static_cast<int32_t>(0x44)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_RightHandLittleTip{static_cast<int32_t>(0x45)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Body_End{static_cast<int32_t>(0x46)};
constexpr ::GlobalNamespace::__OVRPlugin__BoneId  GlobalNamespace::__OVRPlugin__BoneId::Max{static_cast<int32_t>(0x46)};
constexpr void GlobalNamespace::__OVRPlugin__HandFinger::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HandFinger::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HandFinger::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger::__OVRPlugin__HandFinger(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger  GlobalNamespace::__OVRPlugin__HandFinger::Thumb{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger  GlobalNamespace::__OVRPlugin__HandFinger::Index{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger  GlobalNamespace::__OVRPlugin__HandFinger::Middle{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger  GlobalNamespace::__OVRPlugin__HandFinger::Ring{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger  GlobalNamespace::__OVRPlugin__HandFinger::Pinky{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__HandFinger  GlobalNamespace::__OVRPlugin__HandFinger::Max{static_cast<int32_t>(0x5)};
constexpr void GlobalNamespace::__OVRPlugin__HandFingerPinch::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__HandFingerPinch::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__HandFingerPinch::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch::__OVRPlugin__HandFingerPinch(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch  GlobalNamespace::__OVRPlugin__HandFingerPinch::Thumb{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch  GlobalNamespace::__OVRPlugin__HandFingerPinch::Index{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch  GlobalNamespace::__OVRPlugin__HandFingerPinch::Middle{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch  GlobalNamespace::__OVRPlugin__HandFingerPinch::Ring{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch  GlobalNamespace::__OVRPlugin__HandFingerPinch::Pinky{static_cast<int32_t>(0x10)};
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_Status(::GlobalNamespace::__OVRPlugin__HandStatus  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__HandStatus, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__HandStatus>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus& GlobalNamespace::__OVRPlugin__HandState::__get_Status()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__HandStatus, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus const& GlobalNamespace::__OVRPlugin__HandState::__get_Status() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__HandStatus, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_RootPose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__HandState::__get_RootPose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__HandState::__get_RootPose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_BoneRotations(::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*>, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*>& GlobalNamespace::__OVRPlugin__HandState::__get_BoneRotations()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*>, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*> const& GlobalNamespace::__OVRPlugin__HandState::__get_BoneRotations() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*>, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_Pinches(::GlobalNamespace::__OVRPlugin__HandFingerPinch  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__HandFingerPinch, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__HandFingerPinch>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch& GlobalNamespace::__OVRPlugin__HandState::__get_Pinches()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__HandFingerPinch, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch const& GlobalNamespace::__OVRPlugin__HandState::__get_Pinches() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__HandFingerPinch, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_PinchStrength(::ArrayW<float_t,::Array<float_t>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<float_t,::Array<float_t>*>, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<float_t,::Array<float_t>*>>(value));
}
constexpr ::ArrayW<float_t,::Array<float_t>*>& GlobalNamespace::__OVRPlugin__HandState::__get_PinchStrength()  {
return ::cordl_internals::getInstanceField<::ArrayW<float_t,::Array<float_t>*>, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<float_t,::Array<float_t>*> const& GlobalNamespace::__OVRPlugin__HandState::__get_PinchStrength() const {
return ::cordl_internals::getInstanceField<::ArrayW<float_t,::Array<float_t>*>, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_PointerPose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__HandState::__get_PointerPose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__HandState::__get_PointerPose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_HandScale(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__HandState::__get_HandScale()  {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__HandState::__get_HandScale() const {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_HandConfidence(::GlobalNamespace::__OVRPlugin__TrackingConfidence  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackingConfidence>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence& GlobalNamespace::__OVRPlugin__HandState::__get_HandConfidence()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence const& GlobalNamespace::__OVRPlugin__HandState::__get_HandConfidence() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_FingerConfidences(::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*>, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*>& GlobalNamespace::__OVRPlugin__HandState::__get_FingerConfidences()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*>, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*> const& GlobalNamespace::__OVRPlugin__HandState::__get_FingerConfidences() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*>, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_RequestedTimeStamp(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__HandState::__get_RequestedTimeStamp()  {
return ::cordl_internals::getInstanceField<double_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__HandState::__get_RequestedTimeStamp() const {
return ::cordl_internals::getInstanceField<double_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandState::__set_SampleTimeStamp(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__HandState::__get_SampleTimeStamp()  {
return ::cordl_internals::getInstanceField<double_t, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__HandState::__get_SampleTimeStamp() const {
return ::cordl_internals::getInstanceField<double_t, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Status", ty: "::GlobalNamespace::__OVRPlugin__HandStatus", modifiers: "", def_value: Some("{}") }, CppParam { name: "RootPose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "Pinches", ty: "::GlobalNamespace::__OVRPlugin__HandFingerPinch", modifiers: "", def_value: Some("{}") }, CppParam { name: "PinchStrength", ty: "::ArrayW<float_t,::Array<float_t>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "PointerPose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "HandScale", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "HandConfidence", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "RequestedTimeStamp", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleTimeStamp", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandState::__OVRPlugin__HandState(::GlobalNamespace::__OVRPlugin__HandStatus  Status, ::GlobalNamespace::__OVRPlugin__Posef  RootPose, ::ArrayW<::GlobalNamespace::__OVRPlugin__Quatf,::Array<::GlobalNamespace::__OVRPlugin__Quatf>*>  BoneRotations, ::GlobalNamespace::__OVRPlugin__HandFingerPinch  Pinches, ::ArrayW<float_t,::Array<float_t>*>  PinchStrength, ::GlobalNamespace::__OVRPlugin__Posef  PointerPose, float_t  HandScale, ::GlobalNamespace::__OVRPlugin__TrackingConfidence  HandConfidence, ::ArrayW<::GlobalNamespace::__OVRPlugin__TrackingConfidence,::Array<::GlobalNamespace::__OVRPlugin__TrackingConfidence>*>  FingerConfidences, double_t  RequestedTimeStamp, double_t  SampleTimeStamp) noexcept : ::bs_hook::ValueTypeWrapper<0x78>() {this->Status = Status;
this->RootPose = RootPose;
this->BoneRotations = BoneRotations;
this->Pinches = Pinches;
this->PinchStrength = PinchStrength;
this->PointerPose = PointerPose;
this->HandScale = HandScale;
this->HandConfidence = HandConfidence;
this->FingerConfidences = FingerConfidences;
this->RequestedTimeStamp = RequestedTimeStamp;
this->SampleTimeStamp = SampleTimeStamp;
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_Status(::GlobalNamespace::__OVRPlugin__HandStatus  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__HandStatus, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__HandStatus>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_Status()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__HandStatus, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__HandStatus const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_Status() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__HandStatus, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_RootPose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_RootPose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_RootPose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_0(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_0()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_0() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_1(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_1()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_1() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_2(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_2()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_2() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_3(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_3()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_3() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_4(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_4()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_4() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_5(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_5()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_5() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_6(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x80>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_6()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x80>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_6() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x80>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_7(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_7()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_7() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_8(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xa0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_8()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xa0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_8() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xa0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_9(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xb0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_9()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xb0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_9() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xb0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_10(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_10()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_10() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_11(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xd0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_11()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xd0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_11() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xd0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_12(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_12()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_12() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_13(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xf0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_13()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xf0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_13() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0xf0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_14(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x100>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_14()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x100>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_14() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x100>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_15(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x110>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_15()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x110>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_15() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x110>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_16(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x120>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_16()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x120>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_16() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x120>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_17(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x130>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_17()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x130>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_17() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x130>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_18(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x140>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_18()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x140>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_18() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x140>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_19(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x150>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_19()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x150>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_19() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x150>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_20(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x160>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_20()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x160>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_20() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x160>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_21(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x170>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_21()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x170>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_21() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x170>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_22(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x180>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_22()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x180>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_22() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x180>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_BoneRotations_23(::GlobalNamespace::__OVRPlugin__Quatf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x190>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Quatf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_23()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x190>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Quatf const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_BoneRotations_23() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Quatf, 0x190>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_Pinches(::GlobalNamespace::__OVRPlugin__HandFingerPinch  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__HandFingerPinch, 0x1a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__HandFingerPinch>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_Pinches()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__HandFingerPinch, 0x1a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__HandFingerPinch const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_Pinches() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__HandFingerPinch, 0x1a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_PinchStrength_0(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1a4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_0()  {
return ::cordl_internals::getInstanceField<float_t, 0x1a4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_0() const {
return ::cordl_internals::getInstanceField<float_t, 0x1a4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_PinchStrength_1(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_1()  {
return ::cordl_internals::getInstanceField<float_t, 0x1a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_1() const {
return ::cordl_internals::getInstanceField<float_t, 0x1a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_PinchStrength_2(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1ac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_2()  {
return ::cordl_internals::getInstanceField<float_t, 0x1ac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_2() const {
return ::cordl_internals::getInstanceField<float_t, 0x1ac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_PinchStrength_3(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_3()  {
return ::cordl_internals::getInstanceField<float_t, 0x1b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_3() const {
return ::cordl_internals::getInstanceField<float_t, 0x1b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_PinchStrength_4(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1b4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_4()  {
return ::cordl_internals::getInstanceField<float_t, 0x1b4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PinchStrength_4() const {
return ::cordl_internals::getInstanceField<float_t, 0x1b4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_PointerPose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x1b8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PointerPose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x1b8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_PointerPose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x1b8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_HandScale(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1d4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_HandScale()  {
return ::cordl_internals::getInstanceField<float_t, 0x1d4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_HandScale() const {
return ::cordl_internals::getInstanceField<float_t, 0x1d4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_HandConfidence(::GlobalNamespace::__OVRPlugin__TrackingConfidence  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackingConfidence>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_HandConfidence()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_HandConfidence() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_FingerConfidences_0(::GlobalNamespace::__OVRPlugin__TrackingConfidence  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1dc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackingConfidence>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_0()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1dc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_0() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1dc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_FingerConfidences_1(::GlobalNamespace::__OVRPlugin__TrackingConfidence  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1e0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackingConfidence>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_1()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1e0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_1() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1e0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_FingerConfidences_2(::GlobalNamespace::__OVRPlugin__TrackingConfidence  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1e4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackingConfidence>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_2()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1e4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_2() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1e4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_FingerConfidences_3(::GlobalNamespace::__OVRPlugin__TrackingConfidence  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackingConfidence>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_3()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_3() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_FingerConfidences_4(::GlobalNamespace::__OVRPlugin__TrackingConfidence  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1ec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackingConfidence>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_4()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1ec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingConfidence const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_FingerConfidences_4() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingConfidence, 0x1ec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_RequestedTimeStamp(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x1f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_RequestedTimeStamp()  {
return ::cordl_internals::getInstanceField<double_t, 0x1f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_RequestedTimeStamp() const {
return ::cordl_internals::getInstanceField<double_t, 0x1f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__HandStateInternal::__set_SampleTimeStamp(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x1f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_SampleTimeStamp()  {
return ::cordl_internals::getInstanceField<double_t, 0x1f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__HandStateInternal::__get_SampleTimeStamp() const {
return ::cordl_internals::getInstanceField<double_t, 0x1f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Status", ty: "::GlobalNamespace::__OVRPlugin__HandStatus", modifiers: "", def_value: Some("{}") }, CppParam { name: "RootPose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_0", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_1", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_2", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_3", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_4", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_5", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_6", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_7", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_8", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_9", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_10", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_11", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_12", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_13", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_14", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_15", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_16", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_17", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_18", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_19", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_20", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_21", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_22", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneRotations_23", ty: "::GlobalNamespace::__OVRPlugin__Quatf", modifiers: "", def_value: Some("{}") }, CppParam { name: "Pinches", ty: "::GlobalNamespace::__OVRPlugin__HandFingerPinch", modifiers: "", def_value: Some("{}") }, CppParam { name: "PinchStrength_0", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "PinchStrength_1", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "PinchStrength_2", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "PinchStrength_3", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "PinchStrength_4", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "PointerPose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "HandScale", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "HandConfidence", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences_0", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences_1", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences_2", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences_3", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "FingerConfidences_4", ty: "::GlobalNamespace::__OVRPlugin__TrackingConfidence", modifiers: "", def_value: Some("{}") }, CppParam { name: "RequestedTimeStamp", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SampleTimeStamp", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__HandStateInternal::__OVRPlugin__HandStateInternal(::GlobalNamespace::__OVRPlugin__HandStatus  Status, ::GlobalNamespace::__OVRPlugin__Posef  RootPose, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_0, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_1, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_2, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_3, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_4, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_5, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_6, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_7, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_8, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_9, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_10, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_11, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_12, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_13, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_14, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_15, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_16, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_17, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_18, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_19, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_20, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_21, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_22, ::GlobalNamespace::__OVRPlugin__Quatf  BoneRotations_23, ::GlobalNamespace::__OVRPlugin__HandFingerPinch  Pinches, float_t  PinchStrength_0, float_t  PinchStrength_1, float_t  PinchStrength_2, float_t  PinchStrength_3, float_t  PinchStrength_4, ::GlobalNamespace::__OVRPlugin__Posef  PointerPose, float_t  HandScale, ::GlobalNamespace::__OVRPlugin__TrackingConfidence  HandConfidence, ::GlobalNamespace::__OVRPlugin__TrackingConfidence  FingerConfidences_0, ::GlobalNamespace::__OVRPlugin__TrackingConfidence  FingerConfidences_1, ::GlobalNamespace::__OVRPlugin__TrackingConfidence  FingerConfidences_2, ::GlobalNamespace::__OVRPlugin__TrackingConfidence  FingerConfidences_3, ::GlobalNamespace::__OVRPlugin__TrackingConfidence  FingerConfidences_4, double_t  RequestedTimeStamp, double_t  SampleTimeStamp) noexcept : ::bs_hook::ValueTypeWrapper<0x200>() {this->Status = Status;
this->RootPose = RootPose;
this->BoneRotations_0 = BoneRotations_0;
this->BoneRotations_1 = BoneRotations_1;
this->BoneRotations_2 = BoneRotations_2;
this->BoneRotations_3 = BoneRotations_3;
this->BoneRotations_4 = BoneRotations_4;
this->BoneRotations_5 = BoneRotations_5;
this->BoneRotations_6 = BoneRotations_6;
this->BoneRotations_7 = BoneRotations_7;
this->BoneRotations_8 = BoneRotations_8;
this->BoneRotations_9 = BoneRotations_9;
this->BoneRotations_10 = BoneRotations_10;
this->BoneRotations_11 = BoneRotations_11;
this->BoneRotations_12 = BoneRotations_12;
this->BoneRotations_13 = BoneRotations_13;
this->BoneRotations_14 = BoneRotations_14;
this->BoneRotations_15 = BoneRotations_15;
this->BoneRotations_16 = BoneRotations_16;
this->BoneRotations_17 = BoneRotations_17;
this->BoneRotations_18 = BoneRotations_18;
this->BoneRotations_19 = BoneRotations_19;
this->BoneRotations_20 = BoneRotations_20;
this->BoneRotations_21 = BoneRotations_21;
this->BoneRotations_22 = BoneRotations_22;
this->BoneRotations_23 = BoneRotations_23;
this->Pinches = Pinches;
this->PinchStrength_0 = PinchStrength_0;
this->PinchStrength_1 = PinchStrength_1;
this->PinchStrength_2 = PinchStrength_2;
this->PinchStrength_3 = PinchStrength_3;
this->PinchStrength_4 = PinchStrength_4;
this->PointerPose = PointerPose;
this->HandScale = HandScale;
this->HandConfidence = HandConfidence;
this->FingerConfidences_0 = FingerConfidences_0;
this->FingerConfidences_1 = FingerConfidences_1;
this->FingerConfidences_2 = FingerConfidences_2;
this->FingerConfidences_3 = FingerConfidences_3;
this->FingerConfidences_4 = FingerConfidences_4;
this->RequestedTimeStamp = RequestedTimeStamp;
this->SampleTimeStamp = SampleTimeStamp;
}
constexpr void GlobalNamespace::__OVRPlugin__BoneCapsule::__set_BoneIndex(int16_t  value)  {
::cordl_internals::setInstanceField<int16_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int16_t>(value));
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__BoneCapsule::__get_BoneIndex()  {
return ::cordl_internals::getInstanceField<int16_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__BoneCapsule::__get_BoneIndex() const {
return ::cordl_internals::getInstanceField<int16_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BoneCapsule::__set_StartPoint(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__BoneCapsule::__get_StartPoint()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__BoneCapsule::__get_StartPoint() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BoneCapsule::__set_EndPoint(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__BoneCapsule::__get_EndPoint()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__BoneCapsule::__get_EndPoint() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BoneCapsule::__set_Radius(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__BoneCapsule::__get_Radius()  {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__BoneCapsule::__get_Radius() const {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "BoneIndex", ty: "int16_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "StartPoint", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "EndPoint", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "Radius", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule::__OVRPlugin__BoneCapsule(int16_t  BoneIndex, ::GlobalNamespace::__OVRPlugin__Vector3f  StartPoint, ::GlobalNamespace::__OVRPlugin__Vector3f  EndPoint, float_t  Radius) noexcept : ::bs_hook::ValueTypeWrapper<0x20>() {this->BoneIndex = BoneIndex;
this->StartPoint = StartPoint;
this->EndPoint = EndPoint;
this->Radius = Radius;
}
constexpr void GlobalNamespace::__OVRPlugin__Bone::__set_Id(::GlobalNamespace::__OVRPlugin__BoneId  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneId, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneId>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneId& GlobalNamespace::__OVRPlugin__Bone::__get_Id()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneId, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneId const& GlobalNamespace::__OVRPlugin__Bone::__get_Id() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneId, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Bone::__set_ParentBoneIndex(int16_t  value)  {
::cordl_internals::setInstanceField<int16_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int16_t>(value));
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__Bone::__get_ParentBoneIndex()  {
return ::cordl_internals::getInstanceField<int16_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__Bone::__get_ParentBoneIndex() const {
return ::cordl_internals::getInstanceField<int16_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Bone::__set_Pose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__Bone::__get_Pose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__Bone::__get_Pose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Id", ty: "::GlobalNamespace::__OVRPlugin__BoneId", modifiers: "", def_value: Some("{}") }, CppParam { name: "ParentBoneIndex", ty: "int16_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Bone::__OVRPlugin__Bone(::GlobalNamespace::__OVRPlugin__BoneId  Id, int16_t  ParentBoneIndex, ::GlobalNamespace::__OVRPlugin__Posef  Pose) noexcept : ::bs_hook::ValueTypeWrapper<0x24>() {this->Id = Id;
this->ParentBoneIndex = ParentBoneIndex;
this->Pose = Pose;
}
constexpr void GlobalNamespace::__OVRPlugin__SkeletonConstants::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SkeletonConstants::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SkeletonConstants::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants::__OVRPlugin__SkeletonConstants(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants  GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxHandBones{static_cast<int32_t>(0x18)};
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants  GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxBodyBones{static_cast<int32_t>(0x46)};
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants  GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxBones{static_cast<int32_t>(0x46)};
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants  GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxBoneCapsules{static_cast<int32_t>(0x13)};
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonConstants  GlobalNamespace::__OVRPlugin__SkeletonConstants::MaxNumMicrogestures{static_cast<int32_t>(0x5)};
constexpr void GlobalNamespace::__OVRPlugin__SkeletonType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SkeletonType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SkeletonType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType::__OVRPlugin__SkeletonType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType  GlobalNamespace::__OVRPlugin__SkeletonType::None{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType  GlobalNamespace::__OVRPlugin__SkeletonType::HandLeft{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType  GlobalNamespace::__OVRPlugin__SkeletonType::HandRight{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType  GlobalNamespace::__OVRPlugin__SkeletonType::Body{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__Skeleton::__set_Type(::GlobalNamespace::__OVRPlugin__SkeletonType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SkeletonType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SkeletonType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType& GlobalNamespace::__OVRPlugin__Skeleton::__get_Type()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SkeletonType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType const& GlobalNamespace::__OVRPlugin__Skeleton::__get_Type() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SkeletonType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton::__set_NumBones(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Skeleton::__get_NumBones()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Skeleton::__get_NumBones() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton::__set_NumBoneCapsules(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Skeleton::__get_NumBoneCapsules()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Skeleton::__get_NumBoneCapsules() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton::__set_Bones(::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>& GlobalNamespace::__OVRPlugin__Skeleton::__get_Bones()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*> const& GlobalNamespace::__OVRPlugin__Skeleton::__get_Bones() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton::__set_BoneCapsules(::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>& GlobalNamespace::__OVRPlugin__Skeleton::__get_BoneCapsules()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*> const& GlobalNamespace::__OVRPlugin__Skeleton::__get_BoneCapsules() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Type", ty: "::GlobalNamespace::__OVRPlugin__SkeletonType", modifiers: "", def_value: Some("{}") }, CppParam { name: "NumBones", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NumBoneCapsules", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "BoneCapsules", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>", modifiers: "", def_value: Some("csnull") }]
constexpr ::GlobalNamespace::__OVRPlugin__Skeleton::__OVRPlugin__Skeleton(::GlobalNamespace::__OVRPlugin__SkeletonType  Type, uint32_t  NumBones, uint32_t  NumBoneCapsules, ::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>  Bones, ::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>  BoneCapsules) noexcept : ::bs_hook::ValueTypeWrapper<0x20>() {this->Type = Type;
this->NumBones = NumBones;
this->NumBoneCapsules = NumBoneCapsules;
this->Bones = Bones;
this->BoneCapsules = BoneCapsules;
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2::__set_Type(::GlobalNamespace::__OVRPlugin__SkeletonType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SkeletonType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SkeletonType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType& GlobalNamespace::__OVRPlugin__Skeleton2::__get_Type()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SkeletonType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType const& GlobalNamespace::__OVRPlugin__Skeleton2::__get_Type() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SkeletonType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2::__set_NumBones(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Skeleton2::__get_NumBones()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Skeleton2::__get_NumBones() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2::__set_NumBoneCapsules(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Skeleton2::__get_NumBoneCapsules()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Skeleton2::__get_NumBoneCapsules() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2::__set_Bones(::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>& GlobalNamespace::__OVRPlugin__Skeleton2::__get_Bones()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*> const& GlobalNamespace::__OVRPlugin__Skeleton2::__get_Bones() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2::__set_BoneCapsules(::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>& GlobalNamespace::__OVRPlugin__Skeleton2::__get_BoneCapsules()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*> const& GlobalNamespace::__OVRPlugin__Skeleton2::__get_BoneCapsules() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Type", ty: "::GlobalNamespace::__OVRPlugin__SkeletonType", modifiers: "", def_value: Some("{}") }, CppParam { name: "NumBones", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NumBoneCapsules", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "BoneCapsules", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>", modifiers: "", def_value: Some("csnull") }]
constexpr ::GlobalNamespace::__OVRPlugin__Skeleton2::__OVRPlugin__Skeleton2(::GlobalNamespace::__OVRPlugin__SkeletonType  Type, uint32_t  NumBones, uint32_t  NumBoneCapsules, ::ArrayW<::GlobalNamespace::__OVRPlugin__Bone,::Array<::GlobalNamespace::__OVRPlugin__Bone>*>  Bones, ::ArrayW<::GlobalNamespace::__OVRPlugin__BoneCapsule,::Array<::GlobalNamespace::__OVRPlugin__BoneCapsule>*>  BoneCapsules) noexcept : ::bs_hook::ValueTypeWrapper<0x20>() {this->Type = Type;
this->NumBones = NumBones;
this->NumBoneCapsules = NumBoneCapsules;
this->Bones = Bones;
this->BoneCapsules = BoneCapsules;
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Type(::GlobalNamespace::__OVRPlugin__SkeletonType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SkeletonType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SkeletonType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Type()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SkeletonType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SkeletonType const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Type() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SkeletonType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_NumBones(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_NumBones()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_NumBones() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_NumBoneCapsules(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_NumBoneCapsules()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_NumBoneCapsules() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_0(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_0()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_0() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_1(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_1()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_1() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_2(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_2()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_2() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_3(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x78>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_3()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x78>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_3() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x78>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_4(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x9c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_4()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x9c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_4() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x9c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_5(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_5()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_5() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_6(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0xe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_6()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0xe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_6() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0xe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_7(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x108>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_7()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x108>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_7() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x108>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_8(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x12c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_8()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x12c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_8() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x12c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_9(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x150>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_9()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x150>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_9() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x150>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_10(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x174>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_10()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x174>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_10() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x174>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_11(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x198>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_11()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x198>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_11() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x198>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_12(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x1bc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_12()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x1bc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_12() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x1bc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_13(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x1e0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_13()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x1e0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_13() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x1e0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_14(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x204>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_14()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x204>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_14() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x204>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_15(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x228>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_15()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x228>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_15() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x228>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_16(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x24c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_16()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x24c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_16() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x24c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_17(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x270>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_17()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x270>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_17() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x270>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_18(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x294>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_18()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x294>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_18() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x294>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_19(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x2b8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_19()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x2b8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_19() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x2b8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_20(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x2dc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_20()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x2dc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_20() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x2dc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_21(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x300>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_21()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x300>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_21() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x300>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_22(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x324>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_22()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x324>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_22() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x324>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_23(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x348>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_23()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x348>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_23() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x348>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_24(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x36c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_24()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x36c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_24() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x36c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_25(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x390>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_25()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x390>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_25() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x390>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_26(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x3b4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_26()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x3b4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_26() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x3b4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_27(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x3d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_27()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x3d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_27() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x3d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_28(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x3fc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_28()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x3fc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_28() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x3fc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_29(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x420>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_29()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x420>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_29() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x420>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_30(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x444>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_30()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x444>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_30() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x444>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_31(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x468>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_31()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x468>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_31() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x468>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_32(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x48c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_32()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x48c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_32() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x48c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_33(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x4b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_33()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x4b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_33() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x4b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_34(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x4d4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_34()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x4d4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_34() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x4d4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_35(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x4f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_35()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x4f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_35() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x4f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_36(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x51c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_36()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x51c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_36() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x51c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_37(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x540>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_37()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x540>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_37() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x540>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_38(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x564>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_38()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x564>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_38() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x564>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_39(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x588>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_39()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x588>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_39() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x588>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_40(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x5ac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_40()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x5ac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_40() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x5ac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_41(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x5d0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_41()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x5d0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_41() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x5d0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_42(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x5f4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_42()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x5f4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_42() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x5f4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_43(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x618>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_43()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x618>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_43() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x618>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_44(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x63c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_44()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x63c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_44() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x63c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_45(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x660>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_45()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x660>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_45() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x660>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_46(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x684>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_46()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x684>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_46() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x684>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_47(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x6a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_47()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x6a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_47() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x6a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_48(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x6cc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_48()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x6cc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_48() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x6cc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_49(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x6f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_49()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x6f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_49() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x6f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_50(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x714>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_50()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x714>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_50() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x714>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_51(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x738>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_51()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x738>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_51() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x738>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_52(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x75c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_52()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x75c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_52() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x75c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_53(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x780>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_53()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x780>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_53() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x780>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_54(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x7a4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_54()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x7a4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_54() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x7a4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_55(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x7c8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_55()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x7c8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_55() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x7c8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_56(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x7ec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_56()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x7ec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_56() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x7ec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_57(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x810>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_57()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x810>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_57() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x810>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_58(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x834>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_58()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x834>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_58() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x834>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_59(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x858>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_59()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x858>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_59() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x858>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_60(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x87c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_60()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x87c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_60() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x87c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_61(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x8a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_61()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x8a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_61() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x8a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_62(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x8c4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_62()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x8c4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_62() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x8c4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_63(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x8e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_63()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x8e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_63() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x8e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_64(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x90c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_64()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x90c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_64() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x90c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_65(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x930>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_65()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x930>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_65() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x930>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_66(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x954>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_66()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x954>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_66() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x954>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_67(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x978>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_67()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x978>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_67() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x978>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_68(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x99c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_68()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x99c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_68() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x99c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_Bones_69(::GlobalNamespace::__OVRPlugin__Bone  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x9c0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bone>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_69()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x9c0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bone const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_Bones_69() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bone, 0x9c0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_0(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0x9e4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_0()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0x9e4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_0() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0x9e4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_1(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa04>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_1()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa04>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_1() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa04>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_2(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_2()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_2() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_3(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_3()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_3() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_4(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_4()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_4() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_5(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_5()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_5() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xa84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_6(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xaa4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_6()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xaa4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_6() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xaa4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_7(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xac4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_7()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xac4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_7() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xac4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_8(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xae4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_8()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xae4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_8() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xae4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_9(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb04>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_9()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb04>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_9() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb04>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_10(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_10()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_10() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_11(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_11()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_11() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_12(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_12()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_12() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_13(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_13()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_13() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xb84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_14(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xba4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_14()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xba4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_14() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xba4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_15(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xbc4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_15()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xbc4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_15() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xbc4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_16(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xbe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_16()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xbe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_16() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xbe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_17(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xc04>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_17()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xc04>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_17() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xc04>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__Skeleton2Internal::__set_BoneCapsules_18(::GlobalNamespace::__OVRPlugin__BoneCapsule  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xc24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BoneCapsule>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_18()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xc24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BoneCapsule const& GlobalNamespace::__OVRPlugin__Skeleton2Internal::__get_BoneCapsules_18() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BoneCapsule, 0xc24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Type", ty: "::GlobalNamespace::__OVRPlugin__SkeletonType", modifiers: "", def_value: Some("{}") }, CppParam { name: "NumBones", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "NumBoneCapsules", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_0", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_1", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_2", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_3", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_4", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_5", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_6", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_7", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_8", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_9", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_10", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_11", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_12", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_13", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_14", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_15", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_16", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_17", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_18", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_19", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_20", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_21", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_22", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_23", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_24", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_25", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_26", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_27", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_28", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_29", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_30", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_31", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_32", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_33", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_34", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_35", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_36", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_37", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_38", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_39", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_40", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_41", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_42", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_43", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_44", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_45", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_46", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_47", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_48", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_49", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_50", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_51", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_52", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_53", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_54", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_55", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_56", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_57", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_58", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_59", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_60", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_61", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_62", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_63", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_64", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_65", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_66", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_67", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_68", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "Bones_69", ty: "::GlobalNamespace::__OVRPlugin__Bone", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_0", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_1", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_2", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_3", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_4", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_5", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_6", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_7", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_8", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_9", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_10", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_11", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_12", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_13", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_14", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_15", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_16", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_17", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }, CppParam { name: "BoneCapsules_18", ty: "::GlobalNamespace::__OVRPlugin__BoneCapsule", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Skeleton2Internal::__OVRPlugin__Skeleton2Internal(::GlobalNamespace::__OVRPlugin__SkeletonType  Type, uint32_t  NumBones, uint32_t  NumBoneCapsules, ::GlobalNamespace::__OVRPlugin__Bone  Bones_0, ::GlobalNamespace::__OVRPlugin__Bone  Bones_1, ::GlobalNamespace::__OVRPlugin__Bone  Bones_2, ::GlobalNamespace::__OVRPlugin__Bone  Bones_3, ::GlobalNamespace::__OVRPlugin__Bone  Bones_4, ::GlobalNamespace::__OVRPlugin__Bone  Bones_5, ::GlobalNamespace::__OVRPlugin__Bone  Bones_6, ::GlobalNamespace::__OVRPlugin__Bone  Bones_7, ::GlobalNamespace::__OVRPlugin__Bone  Bones_8, ::GlobalNamespace::__OVRPlugin__Bone  Bones_9, ::GlobalNamespace::__OVRPlugin__Bone  Bones_10, ::GlobalNamespace::__OVRPlugin__Bone  Bones_11, ::GlobalNamespace::__OVRPlugin__Bone  Bones_12, ::GlobalNamespace::__OVRPlugin__Bone  Bones_13, ::GlobalNamespace::__OVRPlugin__Bone  Bones_14, ::GlobalNamespace::__OVRPlugin__Bone  Bones_15, ::GlobalNamespace::__OVRPlugin__Bone  Bones_16, ::GlobalNamespace::__OVRPlugin__Bone  Bones_17, ::GlobalNamespace::__OVRPlugin__Bone  Bones_18, ::GlobalNamespace::__OVRPlugin__Bone  Bones_19, ::GlobalNamespace::__OVRPlugin__Bone  Bones_20, ::GlobalNamespace::__OVRPlugin__Bone  Bones_21, ::GlobalNamespace::__OVRPlugin__Bone  Bones_22, ::GlobalNamespace::__OVRPlugin__Bone  Bones_23, ::GlobalNamespace::__OVRPlugin__Bone  Bones_24, ::GlobalNamespace::__OVRPlugin__Bone  Bones_25, ::GlobalNamespace::__OVRPlugin__Bone  Bones_26, ::GlobalNamespace::__OVRPlugin__Bone  Bones_27, ::GlobalNamespace::__OVRPlugin__Bone  Bones_28, ::GlobalNamespace::__OVRPlugin__Bone  Bones_29, ::GlobalNamespace::__OVRPlugin__Bone  Bones_30, ::GlobalNamespace::__OVRPlugin__Bone  Bones_31, ::GlobalNamespace::__OVRPlugin__Bone  Bones_32, ::GlobalNamespace::__OVRPlugin__Bone  Bones_33, ::GlobalNamespace::__OVRPlugin__Bone  Bones_34, ::GlobalNamespace::__OVRPlugin__Bone  Bones_35, ::GlobalNamespace::__OVRPlugin__Bone  Bones_36, ::GlobalNamespace::__OVRPlugin__Bone  Bones_37, ::GlobalNamespace::__OVRPlugin__Bone  Bones_38, ::GlobalNamespace::__OVRPlugin__Bone  Bones_39, ::GlobalNamespace::__OVRPlugin__Bone  Bones_40, ::GlobalNamespace::__OVRPlugin__Bone  Bones_41, ::GlobalNamespace::__OVRPlugin__Bone  Bones_42, ::GlobalNamespace::__OVRPlugin__Bone  Bones_43, ::GlobalNamespace::__OVRPlugin__Bone  Bones_44, ::GlobalNamespace::__OVRPlugin__Bone  Bones_45, ::GlobalNamespace::__OVRPlugin__Bone  Bones_46, ::GlobalNamespace::__OVRPlugin__Bone  Bones_47, ::GlobalNamespace::__OVRPlugin__Bone  Bones_48, ::GlobalNamespace::__OVRPlugin__Bone  Bones_49, ::GlobalNamespace::__OVRPlugin__Bone  Bones_50, ::GlobalNamespace::__OVRPlugin__Bone  Bones_51, ::GlobalNamespace::__OVRPlugin__Bone  Bones_52, ::GlobalNamespace::__OVRPlugin__Bone  Bones_53, ::GlobalNamespace::__OVRPlugin__Bone  Bones_54, ::GlobalNamespace::__OVRPlugin__Bone  Bones_55, ::GlobalNamespace::__OVRPlugin__Bone  Bones_56, ::GlobalNamespace::__OVRPlugin__Bone  Bones_57, ::GlobalNamespace::__OVRPlugin__Bone  Bones_58, ::GlobalNamespace::__OVRPlugin__Bone  Bones_59, ::GlobalNamespace::__OVRPlugin__Bone  Bones_60, ::GlobalNamespace::__OVRPlugin__Bone  Bones_61, ::GlobalNamespace::__OVRPlugin__Bone  Bones_62, ::GlobalNamespace::__OVRPlugin__Bone  Bones_63, ::GlobalNamespace::__OVRPlugin__Bone  Bones_64, ::GlobalNamespace::__OVRPlugin__Bone  Bones_65, ::GlobalNamespace::__OVRPlugin__Bone  Bones_66, ::GlobalNamespace::__OVRPlugin__Bone  Bones_67, ::GlobalNamespace::__OVRPlugin__Bone  Bones_68, ::GlobalNamespace::__OVRPlugin__Bone  Bones_69, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_0, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_1, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_2, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_3, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_4, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_5, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_6, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_7, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_8, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_9, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_10, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_11, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_12, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_13, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_14, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_15, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_16, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_17, ::GlobalNamespace::__OVRPlugin__BoneCapsule  BoneCapsules_18) noexcept : ::bs_hook::ValueTypeWrapper<0xc44>() {this->Type = Type;
this->NumBones = NumBones;
this->NumBoneCapsules = NumBoneCapsules;
this->Bones_0 = Bones_0;
this->Bones_1 = Bones_1;
this->Bones_2 = Bones_2;
this->Bones_3 = Bones_3;
this->Bones_4 = Bones_4;
this->Bones_5 = Bones_5;
this->Bones_6 = Bones_6;
this->Bones_7 = Bones_7;
this->Bones_8 = Bones_8;
this->Bones_9 = Bones_9;
this->Bones_10 = Bones_10;
this->Bones_11 = Bones_11;
this->Bones_12 = Bones_12;
this->Bones_13 = Bones_13;
this->Bones_14 = Bones_14;
this->Bones_15 = Bones_15;
this->Bones_16 = Bones_16;
this->Bones_17 = Bones_17;
this->Bones_18 = Bones_18;
this->Bones_19 = Bones_19;
this->Bones_20 = Bones_20;
this->Bones_21 = Bones_21;
this->Bones_22 = Bones_22;
this->Bones_23 = Bones_23;
this->Bones_24 = Bones_24;
this->Bones_25 = Bones_25;
this->Bones_26 = Bones_26;
this->Bones_27 = Bones_27;
this->Bones_28 = Bones_28;
this->Bones_29 = Bones_29;
this->Bones_30 = Bones_30;
this->Bones_31 = Bones_31;
this->Bones_32 = Bones_32;
this->Bones_33 = Bones_33;
this->Bones_34 = Bones_34;
this->Bones_35 = Bones_35;
this->Bones_36 = Bones_36;
this->Bones_37 = Bones_37;
this->Bones_38 = Bones_38;
this->Bones_39 = Bones_39;
this->Bones_40 = Bones_40;
this->Bones_41 = Bones_41;
this->Bones_42 = Bones_42;
this->Bones_43 = Bones_43;
this->Bones_44 = Bones_44;
this->Bones_45 = Bones_45;
this->Bones_46 = Bones_46;
this->Bones_47 = Bones_47;
this->Bones_48 = Bones_48;
this->Bones_49 = Bones_49;
this->Bones_50 = Bones_50;
this->Bones_51 = Bones_51;
this->Bones_52 = Bones_52;
this->Bones_53 = Bones_53;
this->Bones_54 = Bones_54;
this->Bones_55 = Bones_55;
this->Bones_56 = Bones_56;
this->Bones_57 = Bones_57;
this->Bones_58 = Bones_58;
this->Bones_59 = Bones_59;
this->Bones_60 = Bones_60;
this->Bones_61 = Bones_61;
this->Bones_62 = Bones_62;
this->Bones_63 = Bones_63;
this->Bones_64 = Bones_64;
this->Bones_65 = Bones_65;
this->Bones_66 = Bones_66;
this->Bones_67 = Bones_67;
this->Bones_68 = Bones_68;
this->Bones_69 = Bones_69;
this->BoneCapsules_0 = BoneCapsules_0;
this->BoneCapsules_1 = BoneCapsules_1;
this->BoneCapsules_2 = BoneCapsules_2;
this->BoneCapsules_3 = BoneCapsules_3;
this->BoneCapsules_4 = BoneCapsules_4;
this->BoneCapsules_5 = BoneCapsules_5;
this->BoneCapsules_6 = BoneCapsules_6;
this->BoneCapsules_7 = BoneCapsules_7;
this->BoneCapsules_8 = BoneCapsules_8;
this->BoneCapsules_9 = BoneCapsules_9;
this->BoneCapsules_10 = BoneCapsules_10;
this->BoneCapsules_11 = BoneCapsules_11;
this->BoneCapsules_12 = BoneCapsules_12;
this->BoneCapsules_13 = BoneCapsules_13;
this->BoneCapsules_14 = BoneCapsules_14;
this->BoneCapsules_15 = BoneCapsules_15;
this->BoneCapsules_16 = BoneCapsules_16;
this->BoneCapsules_17 = BoneCapsules_17;
this->BoneCapsules_18 = BoneCapsules_18;
}
constexpr void GlobalNamespace::__OVRPlugin__MeshConstants::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__MeshConstants::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__MeshConstants::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__MeshConstants::__OVRPlugin__MeshConstants(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__MeshConstants  GlobalNamespace::__OVRPlugin__MeshConstants::MaxVertices{static_cast<int32_t>(0xbb8)};
constexpr ::GlobalNamespace::__OVRPlugin__MeshConstants  GlobalNamespace::__OVRPlugin__MeshConstants::MaxIndices{static_cast<int32_t>(0x4650)};
constexpr void GlobalNamespace::__OVRPlugin__MeshType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__MeshType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__MeshType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__MeshType::__OVRPlugin__MeshType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__MeshType  GlobalNamespace::__OVRPlugin__MeshType::None{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__MeshType  GlobalNamespace::__OVRPlugin__MeshType::HandLeft{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__MeshType  GlobalNamespace::__OVRPlugin__MeshType::HandRight{static_cast<int32_t>(0x1)};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Mesh._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__Mesh::*)()>(&::GlobalNamespace::__OVRPlugin__Mesh::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x276d5f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Mesh*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_Type(::GlobalNamespace::__OVRPlugin__MeshType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__MeshType, 0x10>(this, std::forward<::GlobalNamespace::__OVRPlugin__MeshType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__MeshType& GlobalNamespace::__OVRPlugin__Mesh::__get_Type()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__MeshType, 0x10>(this);
}
constexpr ::GlobalNamespace::__OVRPlugin__MeshType const& GlobalNamespace::__OVRPlugin__Mesh::__get_Type() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__MeshType, 0x10>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_NumVertices(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x14>(this, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Mesh::__get_NumVertices()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x14>(this);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Mesh::__get_NumVertices() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x14>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_NumIndices(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x18>(this, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__Mesh::__get_NumIndices()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x18>(this);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__Mesh::__get_NumIndices() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x18>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_VertexPositions(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>, 0x20>(this, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexPositions()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>, 0x20>(this);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexPositions() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>, 0x20>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_Indices(::ArrayW<int16_t,::Array<int16_t>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<int16_t,::Array<int16_t>*>, 0x28>(this, std::forward<::ArrayW<int16_t,::Array<int16_t>*>>(value));
}
constexpr ::ArrayW<int16_t,::Array<int16_t>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_Indices()  {
return ::cordl_internals::getInstanceField<::ArrayW<int16_t,::Array<int16_t>*>, 0x28>(this);
}
constexpr ::ArrayW<int16_t,::Array<int16_t>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_Indices() const {
return ::cordl_internals::getInstanceField<::ArrayW<int16_t,::Array<int16_t>*>, 0x28>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_VertexNormals(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>, 0x30>(this, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexNormals()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>, 0x30>(this);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexNormals() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector3f,::Array<::GlobalNamespace::__OVRPlugin__Vector3f>*>, 0x30>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_VertexUV0(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f,::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f,::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*>, 0x38>(this, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f,::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f,::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexUV0()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f,::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*>, 0x38>(this);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f,::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_VertexUV0() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector2f,::Array<::GlobalNamespace::__OVRPlugin__Vector2f>*>, 0x38>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_BlendIndices(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s,::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s,::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*>, 0x40>(this, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s,::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s,::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_BlendIndices()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s,::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*>, 0x40>(this);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s,::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_BlendIndices() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4s,::Array<::GlobalNamespace::__OVRPlugin__Vector4s>*>, 0x40>(this);
}
constexpr void GlobalNamespace::__OVRPlugin__Mesh::__set_BlendWeights(::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f,::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f,::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*>, 0x48>(this, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f,::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f,::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*>& GlobalNamespace::__OVRPlugin__Mesh::__get_BlendWeights()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f,::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*>, 0x48>(this);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f,::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*> const& GlobalNamespace::__OVRPlugin__Mesh::__get_BlendWeights() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__Vector4f,::Array<::GlobalNamespace::__OVRPlugin__Vector4f>*>, 0x48>(this);
}
inline ::GlobalNamespace::__OVRPlugin__Mesh* GlobalNamespace::__OVRPlugin__Mesh::New_ctor()  {
return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__Mesh*>());
}
inline void GlobalNamespace::__OVRPlugin__Mesh::_ctor()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Mesh*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceLocationFlags::__set_value__(uint64_t  value)  {
::cordl_internals::setInstanceField<uint64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint64_t>(value));
}
constexpr uint64_t& GlobalNamespace::__OVRPlugin__SpaceLocationFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<uint64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint64_t const& GlobalNamespace::__OVRPlugin__SpaceLocationFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<uint64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "uint64_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags::__OVRPlugin__SpaceLocationFlags(uint64_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x8>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  GlobalNamespace::__OVRPlugin__SpaceLocationFlags::OrientationValid{static_cast<uint64_t>(0x1u)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  GlobalNamespace::__OVRPlugin__SpaceLocationFlags::PositionValid{static_cast<uint64_t>(0x2u)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  GlobalNamespace::__OVRPlugin__SpaceLocationFlags::OrientationTracked{static_cast<uint64_t>(0x4u)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  GlobalNamespace::__OVRPlugin__SpaceLocationFlags::PositionTracked{static_cast<uint64_t>(0x8u)};
constexpr void GlobalNamespace::__OVRPlugin__SpaceLocationf::__set_locationFlags(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags& GlobalNamespace::__OVRPlugin__SpaceLocationf::__get_locationFlags()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags const& GlobalNamespace::__OVRPlugin__SpaceLocationf::__get_locationFlags() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceLocationf::__set_pose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__SpaceLocationf::__get_pose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__SpaceLocationf::__get_pose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "locationFlags", ty: "::GlobalNamespace::__OVRPlugin__SpaceLocationFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationf::__OVRPlugin__SpaceLocationf(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  locationFlags, ::GlobalNamespace::__OVRPlugin__Posef  pose) noexcept : ::bs_hook::ValueTypeWrapper<0x28>() {this->locationFlags = locationFlags;
this->pose = pose;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__BodyJointLocation.get_OrientationValid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__BodyJointLocation::*)()>(&::GlobalNamespace::__OVRPlugin__BodyJointLocation::get_OrientationValid)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d5fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                            "get_OrientationValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__BodyJointLocation.get_PositionValid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__BodyJointLocation::*)()>(&::GlobalNamespace::__OVRPlugin__BodyJointLocation::get_PositionValid)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d608;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                            "get_PositionValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__BodyJointLocation.get_OrientationTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__BodyJointLocation::*)()>(&::GlobalNamespace::__OVRPlugin__BodyJointLocation::get_OrientationTracked)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d614;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                            "get_OrientationTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__BodyJointLocation.get_PositionTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__BodyJointLocation::*)()>(&::GlobalNamespace::__OVRPlugin__BodyJointLocation::get_PositionTracked)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d620;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                            "get_PositionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__BodyJointLocation::__set_LocationFlags(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags& GlobalNamespace::__OVRPlugin__BodyJointLocation::__get_LocationFlags()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceLocationFlags const& GlobalNamespace::__OVRPlugin__BodyJointLocation::__get_LocationFlags() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyJointLocation::__set_Pose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__BodyJointLocation::__get_Pose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__BodyJointLocation::__get_Pose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline bool GlobalNamespace::__OVRPlugin__BodyJointLocation::get_OrientationValid()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                            "get_OrientationValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(*this, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__BodyJointLocation::get_PositionValid()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                            "get_PositionValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(*this, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__BodyJointLocation::get_OrientationTracked()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                            "get_OrientationTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(*this, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__BodyJointLocation::get_PositionTracked()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__BodyJointLocation>::get(),
                            "get_PositionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "LocationFlags", ty: "::GlobalNamespace::__OVRPlugin__SpaceLocationFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "Pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation::__OVRPlugin__BodyJointLocation(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  LocationFlags, ::GlobalNamespace::__OVRPlugin__Posef  Pose) noexcept : ::bs_hook::ValueTypeWrapper<0x28>() {this->LocationFlags = LocationFlags;
this->Pose = Pose;
}
constexpr void GlobalNamespace::__OVRPlugin__BodyState::__set_JointLocations(::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*>& GlobalNamespace::__OVRPlugin__BodyState::__get_JointLocations()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*> const& GlobalNamespace::__OVRPlugin__BodyState::__get_JointLocations() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyState::__set_Confidence(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__BodyState::__get_Confidence()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__BodyState::__get_Confidence() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyState::__set_SkeletonChangedCount(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__BodyState::__get_SkeletonChangedCount()  {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__BodyState::__get_SkeletonChangedCount() const {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyState::__set_Time(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__BodyState::__get_Time()  {
return ::cordl_internals::getInstanceField<double_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__BodyState::__get_Time() const {
return ::cordl_internals::getInstanceField<double_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "JointLocations", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "Confidence", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SkeletonChangedCount", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BodyState::__OVRPlugin__BodyState(::ArrayW<::GlobalNamespace::__OVRPlugin__BodyJointLocation,::Array<::GlobalNamespace::__OVRPlugin__BodyJointLocation>*>  JointLocations, float_t  Confidence, uint32_t  SkeletonChangedCount, double_t  Time) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->JointLocations = JointLocations;
this->Confidence = Confidence;
this->SkeletonChangedCount = SkeletonChangedCount;
this->Time = Time;
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_IsActive(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_IsActive()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_IsActive() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_Confidence(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_Confidence()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_Confidence() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_SkeletonChangedCount(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_SkeletonChangedCount()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_SkeletonChangedCount() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_Time(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_Time()  {
return ::cordl_internals::getInstanceField<double_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_Time() const {
return ::cordl_internals::getInstanceField<double_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_0(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_0()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_0() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_1(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_1()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_1() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_2(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_2()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_2() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_3(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_3()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_3() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_4(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xb8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_4()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xb8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_4() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xb8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_5(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_5()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_5() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_6(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x108>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_6()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x108>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_6() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x108>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_7(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x130>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_7()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x130>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_7() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x130>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_8(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x158>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_8()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x158>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_8() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x158>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_9(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x180>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_9()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x180>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_9() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x180>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_10(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x1a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_10()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x1a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_10() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x1a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_11(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x1d0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_11()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x1d0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_11() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x1d0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_12(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x1f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_12()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x1f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_12() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x1f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_13(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x220>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_13()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x220>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_13() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x220>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_14(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x248>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_14()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x248>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_14() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x248>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_15(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x270>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_15()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x270>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_15() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x270>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_16(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x298>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_16()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x298>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_16() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x298>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_17(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x2c0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_17()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x2c0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_17() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x2c0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_18(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x2e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_18()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x2e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_18() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x2e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_19(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x310>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_19()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x310>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_19() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x310>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_20(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x338>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_20()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x338>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_20() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x338>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_21(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x360>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_21()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x360>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_21() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x360>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_22(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x388>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_22()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x388>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_22() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x388>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_23(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x3b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_23()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x3b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_23() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x3b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_24(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x3d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_24()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x3d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_24() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x3d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_25(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x400>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_25()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x400>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_25() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x400>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_26(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x428>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_26()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x428>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_26() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x428>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_27(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x450>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_27()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x450>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_27() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x450>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_28(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x478>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_28()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x478>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_28() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x478>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_29(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x4a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_29()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x4a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_29() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x4a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_30(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x4c8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_30()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x4c8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_30() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x4c8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_31(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x4f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_31()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x4f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_31() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x4f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_32(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x518>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_32()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x518>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_32() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x518>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_33(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x540>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_33()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x540>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_33() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x540>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_34(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x568>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_34()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x568>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_34() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x568>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_35(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x590>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_35()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x590>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_35() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x590>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_36(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x5b8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_36()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x5b8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_36() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x5b8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_37(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x5e0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_37()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x5e0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_37() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x5e0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_38(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x608>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_38()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x608>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_38() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x608>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_39(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x630>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_39()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x630>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_39() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x630>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_40(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x658>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_40()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x658>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_40() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x658>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_41(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x680>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_41()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x680>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_41() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x680>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_42(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x6a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_42()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x6a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_42() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x6a8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_43(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x6d0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_43()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x6d0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_43() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x6d0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_44(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x6f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_44()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x6f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_44() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x6f8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_45(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x720>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_45()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x720>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_45() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x720>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_46(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x748>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_46()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x748>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_46() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x748>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_47(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x770>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_47()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x770>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_47() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x770>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_48(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x798>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_48()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x798>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_48() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x798>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_49(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x7c0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_49()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x7c0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_49() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x7c0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_50(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x7e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_50()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x7e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_50() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x7e8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_51(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x810>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_51()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x810>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_51() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x810>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_52(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x838>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_52()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x838>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_52() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x838>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_53(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x860>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_53()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x860>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_53() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x860>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_54(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x888>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_54()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x888>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_54() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x888>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_55(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x8b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_55()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x8b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_55() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x8b0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_56(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x8d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_56()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x8d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_56() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x8d8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_57(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x900>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_57()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x900>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_57() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x900>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_58(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x928>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_58()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x928>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_58() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x928>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_59(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x950>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_59()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x950>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_59() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x950>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_60(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x978>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_60()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x978>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_60() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x978>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_61(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x9a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_61()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x9a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_61() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x9a0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_62(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x9c8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_62()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x9c8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_62() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x9c8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_63(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x9f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_63()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x9f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_63() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0x9f0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_64(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_64()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_64() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_65(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_65()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_65() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_66(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_66()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_66() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_67(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_67()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_67() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xa90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_68(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xab8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_68()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xab8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_68() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xab8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__BodyStateInternal::__set_JointLocation_69(::GlobalNamespace::__OVRPlugin__BodyJointLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xae0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__BodyJointLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_69()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xae0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__BodyJointLocation const& GlobalNamespace::__OVRPlugin__BodyStateInternal::__get_JointLocation_69() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__BodyJointLocation, 0xae0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "IsActive", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "Confidence", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "SkeletonChangedCount", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_0", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_1", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_2", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_3", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_4", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_5", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_6", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_7", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_8", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_9", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_10", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_11", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_12", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_13", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_14", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_15", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_16", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_17", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_18", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_19", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_20", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_21", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_22", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_23", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_24", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_25", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_26", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_27", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_28", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_29", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_30", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_31", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_32", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_33", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_34", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_35", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_36", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_37", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_38", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_39", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_40", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_41", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_42", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_43", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_44", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_45", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_46", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_47", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_48", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_49", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_50", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_51", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_52", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_53", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_54", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_55", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_56", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_57", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_58", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_59", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_60", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_61", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_62", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_63", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_64", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_65", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_66", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_67", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_68", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "JointLocation_69", ty: "::GlobalNamespace::__OVRPlugin__BodyJointLocation", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__BodyStateInternal::__OVRPlugin__BodyStateInternal(::GlobalNamespace::__OVRPlugin__Bool  IsActive, float_t  Confidence, uint32_t  SkeletonChangedCount, double_t  Time, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_0, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_1, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_2, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_3, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_4, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_5, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_6, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_7, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_8, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_9, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_10, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_11, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_12, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_13, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_14, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_15, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_16, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_17, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_18, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_19, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_20, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_21, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_22, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_23, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_24, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_25, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_26, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_27, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_28, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_29, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_30, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_31, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_32, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_33, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_34, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_35, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_36, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_37, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_38, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_39, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_40, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_41, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_42, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_43, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_44, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_45, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_46, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_47, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_48, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_49, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_50, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_51, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_52, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_53, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_54, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_55, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_56, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_57, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_58, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_59, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_60, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_61, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_62, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_63, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_64, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_65, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_66, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_67, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_68, ::GlobalNamespace::__OVRPlugin__BodyJointLocation  JointLocation_69) noexcept : ::bs_hook::ValueTypeWrapper<0xb08>() {this->IsActive = IsActive;
this->Confidence = Confidence;
this->SkeletonChangedCount = SkeletonChangedCount;
this->Time = Time;
this->JointLocation_0 = JointLocation_0;
this->JointLocation_1 = JointLocation_1;
this->JointLocation_2 = JointLocation_2;
this->JointLocation_3 = JointLocation_3;
this->JointLocation_4 = JointLocation_4;
this->JointLocation_5 = JointLocation_5;
this->JointLocation_6 = JointLocation_6;
this->JointLocation_7 = JointLocation_7;
this->JointLocation_8 = JointLocation_8;
this->JointLocation_9 = JointLocation_9;
this->JointLocation_10 = JointLocation_10;
this->JointLocation_11 = JointLocation_11;
this->JointLocation_12 = JointLocation_12;
this->JointLocation_13 = JointLocation_13;
this->JointLocation_14 = JointLocation_14;
this->JointLocation_15 = JointLocation_15;
this->JointLocation_16 = JointLocation_16;
this->JointLocation_17 = JointLocation_17;
this->JointLocation_18 = JointLocation_18;
this->JointLocation_19 = JointLocation_19;
this->JointLocation_20 = JointLocation_20;
this->JointLocation_21 = JointLocation_21;
this->JointLocation_22 = JointLocation_22;
this->JointLocation_23 = JointLocation_23;
this->JointLocation_24 = JointLocation_24;
this->JointLocation_25 = JointLocation_25;
this->JointLocation_26 = JointLocation_26;
this->JointLocation_27 = JointLocation_27;
this->JointLocation_28 = JointLocation_28;
this->JointLocation_29 = JointLocation_29;
this->JointLocation_30 = JointLocation_30;
this->JointLocation_31 = JointLocation_31;
this->JointLocation_32 = JointLocation_32;
this->JointLocation_33 = JointLocation_33;
this->JointLocation_34 = JointLocation_34;
this->JointLocation_35 = JointLocation_35;
this->JointLocation_36 = JointLocation_36;
this->JointLocation_37 = JointLocation_37;
this->JointLocation_38 = JointLocation_38;
this->JointLocation_39 = JointLocation_39;
this->JointLocation_40 = JointLocation_40;
this->JointLocation_41 = JointLocation_41;
this->JointLocation_42 = JointLocation_42;
this->JointLocation_43 = JointLocation_43;
this->JointLocation_44 = JointLocation_44;
this->JointLocation_45 = JointLocation_45;
this->JointLocation_46 = JointLocation_46;
this->JointLocation_47 = JointLocation_47;
this->JointLocation_48 = JointLocation_48;
this->JointLocation_49 = JointLocation_49;
this->JointLocation_50 = JointLocation_50;
this->JointLocation_51 = JointLocation_51;
this->JointLocation_52 = JointLocation_52;
this->JointLocation_53 = JointLocation_53;
this->JointLocation_54 = JointLocation_54;
this->JointLocation_55 = JointLocation_55;
this->JointLocation_56 = JointLocation_56;
this->JointLocation_57 = JointLocation_57;
this->JointLocation_58 = JointLocation_58;
this->JointLocation_59 = JointLocation_59;
this->JointLocation_60 = JointLocation_60;
this->JointLocation_61 = JointLocation_61;
this->JointLocation_62 = JointLocation_62;
this->JointLocation_63 = JointLocation_63;
this->JointLocation_64 = JointLocation_64;
this->JointLocation_65 = JointLocation_65;
this->JointLocation_66 = JointLocation_66;
this->JointLocation_67 = JointLocation_67;
this->JointLocation_68 = JointLocation_68;
this->JointLocation_69 = JointLocation_69;
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardState::__set_IsActive(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__KeyboardState::__get_IsActive()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__KeyboardState::__get_IsActive() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardState::__set_OrientationValid(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__KeyboardState::__get_OrientationValid()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__KeyboardState::__get_OrientationValid() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardState::__set_PositionValid(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__KeyboardState::__get_PositionValid()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__KeyboardState::__get_PositionValid() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardState::__set_OrientationTracked(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__KeyboardState::__get_OrientationTracked()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__KeyboardState::__get_OrientationTracked() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardState::__set_PositionTracked(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__KeyboardState::__get_PositionTracked()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__KeyboardState::__get_PositionTracked() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardState::__set_PoseState(::GlobalNamespace::__OVRPlugin__PoseStatef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__PoseStatef, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__PoseStatef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__PoseStatef& GlobalNamespace::__OVRPlugin__KeyboardState::__get_PoseState()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PoseStatef, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__PoseStatef const& GlobalNamespace::__OVRPlugin__KeyboardState::__get_PoseState() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PoseStatef, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardState::__set_ContrastParameters(::GlobalNamespace::__OVRPlugin__Vector4f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector4f, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector4f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector4f& GlobalNamespace::__OVRPlugin__KeyboardState::__get_ContrastParameters()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector4f, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector4f const& GlobalNamespace::__OVRPlugin__KeyboardState::__get_ContrastParameters() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector4f, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "IsActive", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "OrientationValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "PositionValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "OrientationTracked", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "PositionTracked", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "PoseState", ty: "::GlobalNamespace::__OVRPlugin__PoseStatef", modifiers: "", def_value: Some("{}") }, CppParam { name: "ContrastParameters", ty: "::GlobalNamespace::__OVRPlugin__Vector4f", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardState::__OVRPlugin__KeyboardState(::GlobalNamespace::__OVRPlugin__Bool  IsActive, ::GlobalNamespace::__OVRPlugin__Bool  OrientationValid, ::GlobalNamespace::__OVRPlugin__Bool  PositionValid, ::GlobalNamespace::__OVRPlugin__Bool  OrientationTracked, ::GlobalNamespace::__OVRPlugin__Bool  PositionTracked, ::GlobalNamespace::__OVRPlugin__PoseStatef  PoseState, ::GlobalNamespace::__OVRPlugin__Vector4f  ContrastParameters) noexcept : ::bs_hook::ValueTypeWrapper<0x80>() {this->IsActive = IsActive;
this->OrientationValid = OrientationValid;
this->PositionValid = PositionValid;
this->OrientationTracked = OrientationTracked;
this->PositionTracked = PositionTracked;
this->PoseState = PoseState;
this->ContrastParameters = ContrastParameters;
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants::__OVRPlugin__KeyboardDescriptionConstants(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants  GlobalNamespace::__OVRPlugin__KeyboardDescriptionConstants::NameMaxLength{static_cast<int32_t>(0x80)};
constexpr void GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::__OVRPlugin__TrackedKeyboardPresentationStyles(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles  GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::Unknown{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles  GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::Opaque{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles  GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles::KeyLabel{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::__OVRPlugin__TrackedKeyboardFlags(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags  GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::Exists{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags  GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::Local{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags  GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::Remote{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags  GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags::Connected{static_cast<int32_t>(0x8)};
constexpr void GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::__OVRPlugin__TrackedKeyboardQueryFlags(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags  GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::Local{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags  GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags::Remote{static_cast<int32_t>(0x4)};
constexpr void GlobalNamespace::__OVRPlugin__KeyboardDescription::__set_Name(::ArrayW<uint8_t,::Array<uint8_t>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<uint8_t,::Array<uint8_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<uint8_t,::Array<uint8_t>*>>(value));
}
constexpr ::ArrayW<uint8_t,::Array<uint8_t>*>& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_Name()  {
return ::cordl_internals::getInstanceField<::ArrayW<uint8_t,::Array<uint8_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<uint8_t,::Array<uint8_t>*> const& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_Name() const {
return ::cordl_internals::getInstanceField<::ArrayW<uint8_t,::Array<uint8_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardDescription::__set_TrackedKeyboardId(uint64_t  value)  {
::cordl_internals::setInstanceField<uint64_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint64_t>(value));
}
constexpr uint64_t& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_TrackedKeyboardId()  {
return ::cordl_internals::getInstanceField<uint64_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint64_t const& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_TrackedKeyboardId() const {
return ::cordl_internals::getInstanceField<uint64_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardDescription::__set_Dimensions(::GlobalNamespace::__OVRPlugin__Vector3f  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Vector3f>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_Dimensions()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Vector3f const& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_Dimensions() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Vector3f, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardDescription::__set_KeyboardFlags(::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_KeyboardFlags()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags const& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_KeyboardFlags() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__KeyboardDescription::__set_SupportedPresentationStyles(::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_SupportedPresentationStyles()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles const& GlobalNamespace::__OVRPlugin__KeyboardDescription::__get_SupportedPresentationStyles() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Name", ty: "::ArrayW<uint8_t,::Array<uint8_t>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "TrackedKeyboardId", ty: "uint64_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Dimensions", ty: "::GlobalNamespace::__OVRPlugin__Vector3f", modifiers: "", def_value: Some("{}") }, CppParam { name: "KeyboardFlags", ty: "::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "SupportedPresentationStyles", ty: "::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__KeyboardDescription::__OVRPlugin__KeyboardDescription(::ArrayW<uint8_t,::Array<uint8_t>*>  Name, uint64_t  TrackedKeyboardId, ::GlobalNamespace::__OVRPlugin__Vector3f  Dimensions, ::GlobalNamespace::__OVRPlugin__TrackedKeyboardFlags  KeyboardFlags, ::GlobalNamespace::__OVRPlugin__TrackedKeyboardPresentationStyles  SupportedPresentationStyles) noexcept : ::bs_hook::ValueTypeWrapper<0x28>() {this->Name = Name;
this->TrackedKeyboardId = TrackedKeyboardId;
this->Dimensions = Dimensions;
this->KeyboardFlags = KeyboardFlags;
this->SupportedPresentationStyles = SupportedPresentationStyles;
}
constexpr void GlobalNamespace::__OVRPlugin__FaceExpressionStatus::__set_IsValid(bool  value)  {
::cordl_internals::setInstanceField<bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<bool>(value));
}
constexpr bool& GlobalNamespace::__OVRPlugin__FaceExpressionStatus::__get_IsValid()  {
return ::cordl_internals::getInstanceField<bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr bool const& GlobalNamespace::__OVRPlugin__FaceExpressionStatus::__get_IsValid() const {
return ::cordl_internals::getInstanceField<bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceExpressionStatus::__set_IsEyeFollowingBlendshapesValid(bool  value)  {
::cordl_internals::setInstanceField<bool, 0x1>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<bool>(value));
}
constexpr bool& GlobalNamespace::__OVRPlugin__FaceExpressionStatus::__get_IsEyeFollowingBlendshapesValid()  {
return ::cordl_internals::getInstanceField<bool, 0x1>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr bool const& GlobalNamespace::__OVRPlugin__FaceExpressionStatus::__get_IsEyeFollowingBlendshapesValid() const {
return ::cordl_internals::getInstanceField<bool, 0x1>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "IsValid", ty: "bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "IsEyeFollowingBlendshapesValid", ty: "bool", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatus::__OVRPlugin__FaceExpressionStatus(bool  IsValid, bool  IsEyeFollowingBlendshapesValid) noexcept : ::bs_hook::ValueTypeWrapper<0x2>() {this->IsValid = IsValid;
this->IsEyeFollowingBlendshapesValid = IsEyeFollowingBlendshapesValid;
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState::__set_ExpressionWeights(::ArrayW<float_t,::Array<float_t>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<float_t,::Array<float_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<float_t,::Array<float_t>*>>(value));
}
constexpr ::ArrayW<float_t,::Array<float_t>*>& GlobalNamespace::__OVRPlugin__FaceState::__get_ExpressionWeights()  {
return ::cordl_internals::getInstanceField<::ArrayW<float_t,::Array<float_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<float_t,::Array<float_t>*> const& GlobalNamespace::__OVRPlugin__FaceState::__get_ExpressionWeights() const {
return ::cordl_internals::getInstanceField<::ArrayW<float_t,::Array<float_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState::__set_ExpressionWeightConfidences(::ArrayW<float_t,::Array<float_t>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<float_t,::Array<float_t>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<float_t,::Array<float_t>*>>(value));
}
constexpr ::ArrayW<float_t,::Array<float_t>*>& GlobalNamespace::__OVRPlugin__FaceState::__get_ExpressionWeightConfidences()  {
return ::cordl_internals::getInstanceField<::ArrayW<float_t,::Array<float_t>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<float_t,::Array<float_t>*> const& GlobalNamespace::__OVRPlugin__FaceState::__get_ExpressionWeightConfidences() const {
return ::cordl_internals::getInstanceField<::ArrayW<float_t,::Array<float_t>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState::__set_Status(::GlobalNamespace::__OVRPlugin__FaceExpressionStatus  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__FaceExpressionStatus, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__FaceExpressionStatus>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatus& GlobalNamespace::__OVRPlugin__FaceState::__get_Status()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__FaceExpressionStatus, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatus const& GlobalNamespace::__OVRPlugin__FaceState::__get_Status() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__FaceExpressionStatus, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState::__set_Time(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__FaceState::__get_Time()  {
return ::cordl_internals::getInstanceField<double_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__FaceState::__get_Time() const {
return ::cordl_internals::getInstanceField<double_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "ExpressionWeights", ty: "::ArrayW<float_t,::Array<float_t>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "ExpressionWeightConfidences", ty: "::ArrayW<float_t,::Array<float_t>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "Status", ty: "::GlobalNamespace::__OVRPlugin__FaceExpressionStatus", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceState::__OVRPlugin__FaceState(::ArrayW<float_t,::Array<float_t>*>  ExpressionWeights, ::ArrayW<float_t,::Array<float_t>*>  ExpressionWeightConfidences, ::GlobalNamespace::__OVRPlugin__FaceExpressionStatus  Status, double_t  Time) noexcept : ::bs_hook::ValueTypeWrapper<0x20>() {this->ExpressionWeights = ExpressionWeights;
this->ExpressionWeightConfidences = ExpressionWeightConfidences;
this->Status = Status;
this->Time = Time;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal.ToFaceExpressionStatus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__FaceExpressionStatus (::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::*)()>(&::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::ToFaceExpressionStatus)> {
  constexpr static std::size_t size = 0x1c;
  constexpr static std::size_t addrs = 0x276d62c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal>::get(),
                            "ToFaceExpressionStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::__set_IsValid(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::__get_IsValid()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::__get_IsValid() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::__set_IsEyeFollowingBlendshapesValid(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::__get_IsEyeFollowingBlendshapesValid()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::__get_IsEyeFollowingBlendshapesValid() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline ::GlobalNamespace::__OVRPlugin__FaceExpressionStatus GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::ToFaceExpressionStatus()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal>::get(),
                            "ToFaceExpressionStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__FaceExpressionStatus, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "IsValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }, CppParam { name: "IsEyeFollowingBlendshapesValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal::__OVRPlugin__FaceExpressionStatusInternal(::GlobalNamespace::__OVRPlugin__Bool  IsValid, ::GlobalNamespace::__OVRPlugin__Bool  IsEyeFollowingBlendshapesValid) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->IsValid = IsValid;
this->IsEyeFollowingBlendshapesValid = IsEyeFollowingBlendshapesValid;
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_0(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_0()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_0() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_1(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_1()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_1() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_2(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_2()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_2() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_3(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_3()  {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_3() const {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_4(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_4()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_4() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_5(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_5()  {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_5() const {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_6(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_6()  {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_6() const {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_7(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_7()  {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_7() const {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_8(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_8()  {
return ::cordl_internals::getInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_8() const {
return ::cordl_internals::getInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_9(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_9()  {
return ::cordl_internals::getInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_9() const {
return ::cordl_internals::getInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_10(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_10()  {
return ::cordl_internals::getInstanceField<float_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_10() const {
return ::cordl_internals::getInstanceField<float_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_11(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_11()  {
return ::cordl_internals::getInstanceField<float_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_11() const {
return ::cordl_internals::getInstanceField<float_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_12(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_12()  {
return ::cordl_internals::getInstanceField<float_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_12() const {
return ::cordl_internals::getInstanceField<float_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_13(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_13()  {
return ::cordl_internals::getInstanceField<float_t, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_13() const {
return ::cordl_internals::getInstanceField<float_t, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_14(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_14()  {
return ::cordl_internals::getInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_14() const {
return ::cordl_internals::getInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_15(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_15()  {
return ::cordl_internals::getInstanceField<float_t, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_15() const {
return ::cordl_internals::getInstanceField<float_t, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_16(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_16()  {
return ::cordl_internals::getInstanceField<float_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_16() const {
return ::cordl_internals::getInstanceField<float_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_17(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_17()  {
return ::cordl_internals::getInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_17() const {
return ::cordl_internals::getInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_18(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_18()  {
return ::cordl_internals::getInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_18() const {
return ::cordl_internals::getInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_19(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_19()  {
return ::cordl_internals::getInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_19() const {
return ::cordl_internals::getInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_20(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_20()  {
return ::cordl_internals::getInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_20() const {
return ::cordl_internals::getInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_21(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_21()  {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_21() const {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_22(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_22()  {
return ::cordl_internals::getInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_22() const {
return ::cordl_internals::getInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_23(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_23()  {
return ::cordl_internals::getInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_23() const {
return ::cordl_internals::getInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_24(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_24()  {
return ::cordl_internals::getInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_24() const {
return ::cordl_internals::getInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_25(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_25()  {
return ::cordl_internals::getInstanceField<float_t, 0x64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_25() const {
return ::cordl_internals::getInstanceField<float_t, 0x64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_26(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_26()  {
return ::cordl_internals::getInstanceField<float_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_26() const {
return ::cordl_internals::getInstanceField<float_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_27(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x6c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_27()  {
return ::cordl_internals::getInstanceField<float_t, 0x6c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_27() const {
return ::cordl_internals::getInstanceField<float_t, 0x6c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_28(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_28()  {
return ::cordl_internals::getInstanceField<float_t, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_28() const {
return ::cordl_internals::getInstanceField<float_t, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_29(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x74>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_29()  {
return ::cordl_internals::getInstanceField<float_t, 0x74>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_29() const {
return ::cordl_internals::getInstanceField<float_t, 0x74>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_30(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x78>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_30()  {
return ::cordl_internals::getInstanceField<float_t, 0x78>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_30() const {
return ::cordl_internals::getInstanceField<float_t, 0x78>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_31(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x7c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_31()  {
return ::cordl_internals::getInstanceField<float_t, 0x7c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_31() const {
return ::cordl_internals::getInstanceField<float_t, 0x7c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_32(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x80>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_32()  {
return ::cordl_internals::getInstanceField<float_t, 0x80>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_32() const {
return ::cordl_internals::getInstanceField<float_t, 0x80>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_33(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_33()  {
return ::cordl_internals::getInstanceField<float_t, 0x84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_33() const {
return ::cordl_internals::getInstanceField<float_t, 0x84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_34(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x88>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_34()  {
return ::cordl_internals::getInstanceField<float_t, 0x88>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_34() const {
return ::cordl_internals::getInstanceField<float_t, 0x88>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_35(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_35()  {
return ::cordl_internals::getInstanceField<float_t, 0x8c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_35() const {
return ::cordl_internals::getInstanceField<float_t, 0x8c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_36(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_36()  {
return ::cordl_internals::getInstanceField<float_t, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_36() const {
return ::cordl_internals::getInstanceField<float_t, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_37(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x94>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_37()  {
return ::cordl_internals::getInstanceField<float_t, 0x94>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_37() const {
return ::cordl_internals::getInstanceField<float_t, 0x94>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_38(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x98>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_38()  {
return ::cordl_internals::getInstanceField<float_t, 0x98>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_38() const {
return ::cordl_internals::getInstanceField<float_t, 0x98>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_39(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x9c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_39()  {
return ::cordl_internals::getInstanceField<float_t, 0x9c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_39() const {
return ::cordl_internals::getInstanceField<float_t, 0x9c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_40(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xa0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_40()  {
return ::cordl_internals::getInstanceField<float_t, 0xa0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_40() const {
return ::cordl_internals::getInstanceField<float_t, 0xa0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_41(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xa4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_41()  {
return ::cordl_internals::getInstanceField<float_t, 0xa4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_41() const {
return ::cordl_internals::getInstanceField<float_t, 0xa4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_42(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xa8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_42()  {
return ::cordl_internals::getInstanceField<float_t, 0xa8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_42() const {
return ::cordl_internals::getInstanceField<float_t, 0xa8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_43(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_43()  {
return ::cordl_internals::getInstanceField<float_t, 0xac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_43() const {
return ::cordl_internals::getInstanceField<float_t, 0xac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_44(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xb0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_44()  {
return ::cordl_internals::getInstanceField<float_t, 0xb0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_44() const {
return ::cordl_internals::getInstanceField<float_t, 0xb0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_45(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xb4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_45()  {
return ::cordl_internals::getInstanceField<float_t, 0xb4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_45() const {
return ::cordl_internals::getInstanceField<float_t, 0xb4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_46(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xb8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_46()  {
return ::cordl_internals::getInstanceField<float_t, 0xb8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_46() const {
return ::cordl_internals::getInstanceField<float_t, 0xb8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_47(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xbc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_47()  {
return ::cordl_internals::getInstanceField<float_t, 0xbc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_47() const {
return ::cordl_internals::getInstanceField<float_t, 0xbc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_48(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_48()  {
return ::cordl_internals::getInstanceField<float_t, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_48() const {
return ::cordl_internals::getInstanceField<float_t, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_49(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_49()  {
return ::cordl_internals::getInstanceField<float_t, 0xc4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_49() const {
return ::cordl_internals::getInstanceField<float_t, 0xc4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_50(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_50()  {
return ::cordl_internals::getInstanceField<float_t, 0xc8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_50() const {
return ::cordl_internals::getInstanceField<float_t, 0xc8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_51(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xcc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_51()  {
return ::cordl_internals::getInstanceField<float_t, 0xcc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_51() const {
return ::cordl_internals::getInstanceField<float_t, 0xcc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_52(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xd0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_52()  {
return ::cordl_internals::getInstanceField<float_t, 0xd0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_52() const {
return ::cordl_internals::getInstanceField<float_t, 0xd0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_53(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xd4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_53()  {
return ::cordl_internals::getInstanceField<float_t, 0xd4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_53() const {
return ::cordl_internals::getInstanceField<float_t, 0xd4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_54(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xd8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_54()  {
return ::cordl_internals::getInstanceField<float_t, 0xd8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_54() const {
return ::cordl_internals::getInstanceField<float_t, 0xd8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_55(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xdc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_55()  {
return ::cordl_internals::getInstanceField<float_t, 0xdc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_55() const {
return ::cordl_internals::getInstanceField<float_t, 0xdc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_56(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_56()  {
return ::cordl_internals::getInstanceField<float_t, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_56() const {
return ::cordl_internals::getInstanceField<float_t, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_57(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_57()  {
return ::cordl_internals::getInstanceField<float_t, 0xe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_57() const {
return ::cordl_internals::getInstanceField<float_t, 0xe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_58(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xe8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_58()  {
return ::cordl_internals::getInstanceField<float_t, 0xe8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_58() const {
return ::cordl_internals::getInstanceField<float_t, 0xe8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_59(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_59()  {
return ::cordl_internals::getInstanceField<float_t, 0xec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_59() const {
return ::cordl_internals::getInstanceField<float_t, 0xec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_60(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xf0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_60()  {
return ::cordl_internals::getInstanceField<float_t, 0xf0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_60() const {
return ::cordl_internals::getInstanceField<float_t, 0xf0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_61(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xf4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_61()  {
return ::cordl_internals::getInstanceField<float_t, 0xf4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_61() const {
return ::cordl_internals::getInstanceField<float_t, 0xf4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeights_62(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xf8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_62()  {
return ::cordl_internals::getInstanceField<float_t, 0xf8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeights_62() const {
return ::cordl_internals::getInstanceField<float_t, 0xf8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeightConfidences_0(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xfc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeightConfidences_0()  {
return ::cordl_internals::getInstanceField<float_t, 0xfc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeightConfidences_0() const {
return ::cordl_internals::getInstanceField<float_t, 0xfc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_ExpressionWeightConfidences_1(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x100>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeightConfidences_1()  {
return ::cordl_internals::getInstanceField<float_t, 0x100>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_ExpressionWeightConfidences_1() const {
return ::cordl_internals::getInstanceField<float_t, 0x100>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_Status(::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal, 0x104>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_Status()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal, 0x104>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_Status() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal, 0x104>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceStateInternal::__set_Time(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x110>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_Time()  {
return ::cordl_internals::getInstanceField<double_t, 0x110>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__FaceStateInternal::__get_Time() const {
return ::cordl_internals::getInstanceField<double_t, 0x110>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "ExpressionWeights_0", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_1", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_2", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_3", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_4", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_5", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_6", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_7", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_8", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_9", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_10", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_11", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_12", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_13", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_14", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_15", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_16", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_17", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_18", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_19", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_20", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_21", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_22", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_23", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_24", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_25", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_26", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_27", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_28", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_29", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_30", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_31", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_32", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_33", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_34", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_35", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_36", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_37", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_38", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_39", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_40", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_41", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_42", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_43", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_44", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_45", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_46", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_47", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_48", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_49", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_50", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_51", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_52", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_53", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_54", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_55", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_56", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_57", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_58", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_59", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_60", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_61", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_62", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeightConfidences_0", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeightConfidences_1", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Status", ty: "::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceStateInternal::__OVRPlugin__FaceStateInternal(float_t  ExpressionWeights_0, float_t  ExpressionWeights_1, float_t  ExpressionWeights_2, float_t  ExpressionWeights_3, float_t  ExpressionWeights_4, float_t  ExpressionWeights_5, float_t  ExpressionWeights_6, float_t  ExpressionWeights_7, float_t  ExpressionWeights_8, float_t  ExpressionWeights_9, float_t  ExpressionWeights_10, float_t  ExpressionWeights_11, float_t  ExpressionWeights_12, float_t  ExpressionWeights_13, float_t  ExpressionWeights_14, float_t  ExpressionWeights_15, float_t  ExpressionWeights_16, float_t  ExpressionWeights_17, float_t  ExpressionWeights_18, float_t  ExpressionWeights_19, float_t  ExpressionWeights_20, float_t  ExpressionWeights_21, float_t  ExpressionWeights_22, float_t  ExpressionWeights_23, float_t  ExpressionWeights_24, float_t  ExpressionWeights_25, float_t  ExpressionWeights_26, float_t  ExpressionWeights_27, float_t  ExpressionWeights_28, float_t  ExpressionWeights_29, float_t  ExpressionWeights_30, float_t  ExpressionWeights_31, float_t  ExpressionWeights_32, float_t  ExpressionWeights_33, float_t  ExpressionWeights_34, float_t  ExpressionWeights_35, float_t  ExpressionWeights_36, float_t  ExpressionWeights_37, float_t  ExpressionWeights_38, float_t  ExpressionWeights_39, float_t  ExpressionWeights_40, float_t  ExpressionWeights_41, float_t  ExpressionWeights_42, float_t  ExpressionWeights_43, float_t  ExpressionWeights_44, float_t  ExpressionWeights_45, float_t  ExpressionWeights_46, float_t  ExpressionWeights_47, float_t  ExpressionWeights_48, float_t  ExpressionWeights_49, float_t  ExpressionWeights_50, float_t  ExpressionWeights_51, float_t  ExpressionWeights_52, float_t  ExpressionWeights_53, float_t  ExpressionWeights_54, float_t  ExpressionWeights_55, float_t  ExpressionWeights_56, float_t  ExpressionWeights_57, float_t  ExpressionWeights_58, float_t  ExpressionWeights_59, float_t  ExpressionWeights_60, float_t  ExpressionWeights_61, float_t  ExpressionWeights_62, float_t  ExpressionWeightConfidences_0, float_t  ExpressionWeightConfidences_1, ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal  Status, double_t  Time) noexcept : ::bs_hook::ValueTypeWrapper<0x118>() {this->ExpressionWeights_0 = ExpressionWeights_0;
this->ExpressionWeights_1 = ExpressionWeights_1;
this->ExpressionWeights_2 = ExpressionWeights_2;
this->ExpressionWeights_3 = ExpressionWeights_3;
this->ExpressionWeights_4 = ExpressionWeights_4;
this->ExpressionWeights_5 = ExpressionWeights_5;
this->ExpressionWeights_6 = ExpressionWeights_6;
this->ExpressionWeights_7 = ExpressionWeights_7;
this->ExpressionWeights_8 = ExpressionWeights_8;
this->ExpressionWeights_9 = ExpressionWeights_9;
this->ExpressionWeights_10 = ExpressionWeights_10;
this->ExpressionWeights_11 = ExpressionWeights_11;
this->ExpressionWeights_12 = ExpressionWeights_12;
this->ExpressionWeights_13 = ExpressionWeights_13;
this->ExpressionWeights_14 = ExpressionWeights_14;
this->ExpressionWeights_15 = ExpressionWeights_15;
this->ExpressionWeights_16 = ExpressionWeights_16;
this->ExpressionWeights_17 = ExpressionWeights_17;
this->ExpressionWeights_18 = ExpressionWeights_18;
this->ExpressionWeights_19 = ExpressionWeights_19;
this->ExpressionWeights_20 = ExpressionWeights_20;
this->ExpressionWeights_21 = ExpressionWeights_21;
this->ExpressionWeights_22 = ExpressionWeights_22;
this->ExpressionWeights_23 = ExpressionWeights_23;
this->ExpressionWeights_24 = ExpressionWeights_24;
this->ExpressionWeights_25 = ExpressionWeights_25;
this->ExpressionWeights_26 = ExpressionWeights_26;
this->ExpressionWeights_27 = ExpressionWeights_27;
this->ExpressionWeights_28 = ExpressionWeights_28;
this->ExpressionWeights_29 = ExpressionWeights_29;
this->ExpressionWeights_30 = ExpressionWeights_30;
this->ExpressionWeights_31 = ExpressionWeights_31;
this->ExpressionWeights_32 = ExpressionWeights_32;
this->ExpressionWeights_33 = ExpressionWeights_33;
this->ExpressionWeights_34 = ExpressionWeights_34;
this->ExpressionWeights_35 = ExpressionWeights_35;
this->ExpressionWeights_36 = ExpressionWeights_36;
this->ExpressionWeights_37 = ExpressionWeights_37;
this->ExpressionWeights_38 = ExpressionWeights_38;
this->ExpressionWeights_39 = ExpressionWeights_39;
this->ExpressionWeights_40 = ExpressionWeights_40;
this->ExpressionWeights_41 = ExpressionWeights_41;
this->ExpressionWeights_42 = ExpressionWeights_42;
this->ExpressionWeights_43 = ExpressionWeights_43;
this->ExpressionWeights_44 = ExpressionWeights_44;
this->ExpressionWeights_45 = ExpressionWeights_45;
this->ExpressionWeights_46 = ExpressionWeights_46;
this->ExpressionWeights_47 = ExpressionWeights_47;
this->ExpressionWeights_48 = ExpressionWeights_48;
this->ExpressionWeights_49 = ExpressionWeights_49;
this->ExpressionWeights_50 = ExpressionWeights_50;
this->ExpressionWeights_51 = ExpressionWeights_51;
this->ExpressionWeights_52 = ExpressionWeights_52;
this->ExpressionWeights_53 = ExpressionWeights_53;
this->ExpressionWeights_54 = ExpressionWeights_54;
this->ExpressionWeights_55 = ExpressionWeights_55;
this->ExpressionWeights_56 = ExpressionWeights_56;
this->ExpressionWeights_57 = ExpressionWeights_57;
this->ExpressionWeights_58 = ExpressionWeights_58;
this->ExpressionWeights_59 = ExpressionWeights_59;
this->ExpressionWeights_60 = ExpressionWeights_60;
this->ExpressionWeights_61 = ExpressionWeights_61;
this->ExpressionWeights_62 = ExpressionWeights_62;
this->ExpressionWeightConfidences_0 = ExpressionWeightConfidences_0;
this->ExpressionWeightConfidences_1 = ExpressionWeightConfidences_1;
this->Status = Status;
this->Time = Time;
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_0(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_0()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_0() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_1(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_1()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_1() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_2(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_2()  {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_2() const {
return ::cordl_internals::getInstanceField<float_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_3(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_3()  {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_3() const {
return ::cordl_internals::getInstanceField<float_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_4(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_4()  {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_4() const {
return ::cordl_internals::getInstanceField<float_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_5(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_5()  {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_5() const {
return ::cordl_internals::getInstanceField<float_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_6(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_6()  {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_6() const {
return ::cordl_internals::getInstanceField<float_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_7(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_7()  {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_7() const {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_8(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_8()  {
return ::cordl_internals::getInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_8() const {
return ::cordl_internals::getInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_9(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_9()  {
return ::cordl_internals::getInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_9() const {
return ::cordl_internals::getInstanceField<float_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_10(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_10()  {
return ::cordl_internals::getInstanceField<float_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_10() const {
return ::cordl_internals::getInstanceField<float_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_11(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_11()  {
return ::cordl_internals::getInstanceField<float_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_11() const {
return ::cordl_internals::getInstanceField<float_t, 0x2c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_12(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_12()  {
return ::cordl_internals::getInstanceField<float_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_12() const {
return ::cordl_internals::getInstanceField<float_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_13(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_13()  {
return ::cordl_internals::getInstanceField<float_t, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_13() const {
return ::cordl_internals::getInstanceField<float_t, 0x34>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_14(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_14()  {
return ::cordl_internals::getInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_14() const {
return ::cordl_internals::getInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_15(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_15()  {
return ::cordl_internals::getInstanceField<float_t, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_15() const {
return ::cordl_internals::getInstanceField<float_t, 0x3c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_16(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_16()  {
return ::cordl_internals::getInstanceField<float_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_16() const {
return ::cordl_internals::getInstanceField<float_t, 0x40>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_17(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_17()  {
return ::cordl_internals::getInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_17() const {
return ::cordl_internals::getInstanceField<float_t, 0x44>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_18(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_18()  {
return ::cordl_internals::getInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_18() const {
return ::cordl_internals::getInstanceField<float_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_19(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_19()  {
return ::cordl_internals::getInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_19() const {
return ::cordl_internals::getInstanceField<float_t, 0x4c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_20(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_20()  {
return ::cordl_internals::getInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_20() const {
return ::cordl_internals::getInstanceField<float_t, 0x50>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_21(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_21()  {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_21() const {
return ::cordl_internals::getInstanceField<float_t, 0x54>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_22(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_22()  {
return ::cordl_internals::getInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_22() const {
return ::cordl_internals::getInstanceField<float_t, 0x58>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_23(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_23()  {
return ::cordl_internals::getInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_23() const {
return ::cordl_internals::getInstanceField<float_t, 0x5c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_24(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_24()  {
return ::cordl_internals::getInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_24() const {
return ::cordl_internals::getInstanceField<float_t, 0x60>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_25(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_25()  {
return ::cordl_internals::getInstanceField<float_t, 0x64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_25() const {
return ::cordl_internals::getInstanceField<float_t, 0x64>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_26(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_26()  {
return ::cordl_internals::getInstanceField<float_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_26() const {
return ::cordl_internals::getInstanceField<float_t, 0x68>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_27(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x6c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_27()  {
return ::cordl_internals::getInstanceField<float_t, 0x6c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_27() const {
return ::cordl_internals::getInstanceField<float_t, 0x6c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_28(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_28()  {
return ::cordl_internals::getInstanceField<float_t, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_28() const {
return ::cordl_internals::getInstanceField<float_t, 0x70>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_29(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x74>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_29()  {
return ::cordl_internals::getInstanceField<float_t, 0x74>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_29() const {
return ::cordl_internals::getInstanceField<float_t, 0x74>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_30(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x78>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_30()  {
return ::cordl_internals::getInstanceField<float_t, 0x78>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_30() const {
return ::cordl_internals::getInstanceField<float_t, 0x78>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_31(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x7c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_31()  {
return ::cordl_internals::getInstanceField<float_t, 0x7c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_31() const {
return ::cordl_internals::getInstanceField<float_t, 0x7c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_32(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x80>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_32()  {
return ::cordl_internals::getInstanceField<float_t, 0x80>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_32() const {
return ::cordl_internals::getInstanceField<float_t, 0x80>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_33(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_33()  {
return ::cordl_internals::getInstanceField<float_t, 0x84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_33() const {
return ::cordl_internals::getInstanceField<float_t, 0x84>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_34(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x88>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_34()  {
return ::cordl_internals::getInstanceField<float_t, 0x88>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_34() const {
return ::cordl_internals::getInstanceField<float_t, 0x88>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_35(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x8c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_35()  {
return ::cordl_internals::getInstanceField<float_t, 0x8c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_35() const {
return ::cordl_internals::getInstanceField<float_t, 0x8c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_36(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_36()  {
return ::cordl_internals::getInstanceField<float_t, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_36() const {
return ::cordl_internals::getInstanceField<float_t, 0x90>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_37(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x94>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_37()  {
return ::cordl_internals::getInstanceField<float_t, 0x94>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_37() const {
return ::cordl_internals::getInstanceField<float_t, 0x94>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_38(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x98>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_38()  {
return ::cordl_internals::getInstanceField<float_t, 0x98>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_38() const {
return ::cordl_internals::getInstanceField<float_t, 0x98>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_39(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x9c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_39()  {
return ::cordl_internals::getInstanceField<float_t, 0x9c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_39() const {
return ::cordl_internals::getInstanceField<float_t, 0x9c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_40(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xa0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_40()  {
return ::cordl_internals::getInstanceField<float_t, 0xa0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_40() const {
return ::cordl_internals::getInstanceField<float_t, 0xa0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_41(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xa4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_41()  {
return ::cordl_internals::getInstanceField<float_t, 0xa4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_41() const {
return ::cordl_internals::getInstanceField<float_t, 0xa4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_42(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xa8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_42()  {
return ::cordl_internals::getInstanceField<float_t, 0xa8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_42() const {
return ::cordl_internals::getInstanceField<float_t, 0xa8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_43(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_43()  {
return ::cordl_internals::getInstanceField<float_t, 0xac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_43() const {
return ::cordl_internals::getInstanceField<float_t, 0xac>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_44(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xb0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_44()  {
return ::cordl_internals::getInstanceField<float_t, 0xb0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_44() const {
return ::cordl_internals::getInstanceField<float_t, 0xb0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_45(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xb4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_45()  {
return ::cordl_internals::getInstanceField<float_t, 0xb4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_45() const {
return ::cordl_internals::getInstanceField<float_t, 0xb4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_46(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xb8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_46()  {
return ::cordl_internals::getInstanceField<float_t, 0xb8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_46() const {
return ::cordl_internals::getInstanceField<float_t, 0xb8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_47(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xbc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_47()  {
return ::cordl_internals::getInstanceField<float_t, 0xbc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_47() const {
return ::cordl_internals::getInstanceField<float_t, 0xbc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_48(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_48()  {
return ::cordl_internals::getInstanceField<float_t, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_48() const {
return ::cordl_internals::getInstanceField<float_t, 0xc0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_49(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_49()  {
return ::cordl_internals::getInstanceField<float_t, 0xc4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_49() const {
return ::cordl_internals::getInstanceField<float_t, 0xc4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_50(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xc8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_50()  {
return ::cordl_internals::getInstanceField<float_t, 0xc8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_50() const {
return ::cordl_internals::getInstanceField<float_t, 0xc8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_51(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xcc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_51()  {
return ::cordl_internals::getInstanceField<float_t, 0xcc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_51() const {
return ::cordl_internals::getInstanceField<float_t, 0xcc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_52(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xd0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_52()  {
return ::cordl_internals::getInstanceField<float_t, 0xd0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_52() const {
return ::cordl_internals::getInstanceField<float_t, 0xd0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_53(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xd4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_53()  {
return ::cordl_internals::getInstanceField<float_t, 0xd4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_53() const {
return ::cordl_internals::getInstanceField<float_t, 0xd4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_54(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xd8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_54()  {
return ::cordl_internals::getInstanceField<float_t, 0xd8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_54() const {
return ::cordl_internals::getInstanceField<float_t, 0xd8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_55(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xdc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_55()  {
return ::cordl_internals::getInstanceField<float_t, 0xdc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_55() const {
return ::cordl_internals::getInstanceField<float_t, 0xdc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_56(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_56()  {
return ::cordl_internals::getInstanceField<float_t, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_56() const {
return ::cordl_internals::getInstanceField<float_t, 0xe0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_57(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_57()  {
return ::cordl_internals::getInstanceField<float_t, 0xe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_57() const {
return ::cordl_internals::getInstanceField<float_t, 0xe4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_58(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xe8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_58()  {
return ::cordl_internals::getInstanceField<float_t, 0xe8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_58() const {
return ::cordl_internals::getInstanceField<float_t, 0xe8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_59(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_59()  {
return ::cordl_internals::getInstanceField<float_t, 0xec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_59() const {
return ::cordl_internals::getInstanceField<float_t, 0xec>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_60(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xf0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_60()  {
return ::cordl_internals::getInstanceField<float_t, 0xf0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_60() const {
return ::cordl_internals::getInstanceField<float_t, 0xf0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_61(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xf4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_61()  {
return ::cordl_internals::getInstanceField<float_t, 0xf4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_61() const {
return ::cordl_internals::getInstanceField<float_t, 0xf4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeights_62(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xf8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_62()  {
return ::cordl_internals::getInstanceField<float_t, 0xf8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeights_62() const {
return ::cordl_internals::getInstanceField<float_t, 0xf8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeightConfidences_0(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0xfc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeightConfidences_0()  {
return ::cordl_internals::getInstanceField<float_t, 0xfc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeightConfidences_0() const {
return ::cordl_internals::getInstanceField<float_t, 0xfc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_ExpressionWeightConfidences_1(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x100>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeightConfidences_1()  {
return ::cordl_internals::getInstanceField<float_t, 0x100>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_ExpressionWeightConfidences_1() const {
return ::cordl_internals::getInstanceField<float_t, 0x100>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_Status(::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal, 0x104>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_Status()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal, 0x104>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_Status() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal, 0x104>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__FaceState2Internal::__set_Time(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x110>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_Time()  {
return ::cordl_internals::getInstanceField<double_t, 0x110>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__FaceState2Internal::__get_Time() const {
return ::cordl_internals::getInstanceField<double_t, 0x110>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "ExpressionWeights_0", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_1", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_2", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_3", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_4", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_5", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_6", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_7", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_8", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_9", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_10", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_11", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_12", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_13", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_14", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_15", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_16", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_17", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_18", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_19", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_20", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_21", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_22", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_23", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_24", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_25", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_26", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_27", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_28", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_29", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_30", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_31", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_32", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_33", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_34", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_35", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_36", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_37", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_38", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_39", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_40", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_41", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_42", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_43", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_44", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_45", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_46", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_47", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_48", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_49", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_50", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_51", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_52", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_53", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_54", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_55", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_56", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_57", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_58", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_59", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_60", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_61", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeights_62", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeightConfidences_0", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ExpressionWeightConfidences_1", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Status", ty: "::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceState2Internal::__OVRPlugin__FaceState2Internal(float_t  ExpressionWeights_0, float_t  ExpressionWeights_1, float_t  ExpressionWeights_2, float_t  ExpressionWeights_3, float_t  ExpressionWeights_4, float_t  ExpressionWeights_5, float_t  ExpressionWeights_6, float_t  ExpressionWeights_7, float_t  ExpressionWeights_8, float_t  ExpressionWeights_9, float_t  ExpressionWeights_10, float_t  ExpressionWeights_11, float_t  ExpressionWeights_12, float_t  ExpressionWeights_13, float_t  ExpressionWeights_14, float_t  ExpressionWeights_15, float_t  ExpressionWeights_16, float_t  ExpressionWeights_17, float_t  ExpressionWeights_18, float_t  ExpressionWeights_19, float_t  ExpressionWeights_20, float_t  ExpressionWeights_21, float_t  ExpressionWeights_22, float_t  ExpressionWeights_23, float_t  ExpressionWeights_24, float_t  ExpressionWeights_25, float_t  ExpressionWeights_26, float_t  ExpressionWeights_27, float_t  ExpressionWeights_28, float_t  ExpressionWeights_29, float_t  ExpressionWeights_30, float_t  ExpressionWeights_31, float_t  ExpressionWeights_32, float_t  ExpressionWeights_33, float_t  ExpressionWeights_34, float_t  ExpressionWeights_35, float_t  ExpressionWeights_36, float_t  ExpressionWeights_37, float_t  ExpressionWeights_38, float_t  ExpressionWeights_39, float_t  ExpressionWeights_40, float_t  ExpressionWeights_41, float_t  ExpressionWeights_42, float_t  ExpressionWeights_43, float_t  ExpressionWeights_44, float_t  ExpressionWeights_45, float_t  ExpressionWeights_46, float_t  ExpressionWeights_47, float_t  ExpressionWeights_48, float_t  ExpressionWeights_49, float_t  ExpressionWeights_50, float_t  ExpressionWeights_51, float_t  ExpressionWeights_52, float_t  ExpressionWeights_53, float_t  ExpressionWeights_54, float_t  ExpressionWeights_55, float_t  ExpressionWeights_56, float_t  ExpressionWeights_57, float_t  ExpressionWeights_58, float_t  ExpressionWeights_59, float_t  ExpressionWeights_60, float_t  ExpressionWeights_61, float_t  ExpressionWeights_62, float_t  ExpressionWeightConfidences_0, float_t  ExpressionWeightConfidences_1, ::GlobalNamespace::__OVRPlugin__FaceExpressionStatusInternal  Status, double_t  Time) noexcept : ::bs_hook::ValueTypeWrapper<0x118>() {this->ExpressionWeights_0 = ExpressionWeights_0;
this->ExpressionWeights_1 = ExpressionWeights_1;
this->ExpressionWeights_2 = ExpressionWeights_2;
this->ExpressionWeights_3 = ExpressionWeights_3;
this->ExpressionWeights_4 = ExpressionWeights_4;
this->ExpressionWeights_5 = ExpressionWeights_5;
this->ExpressionWeights_6 = ExpressionWeights_6;
this->ExpressionWeights_7 = ExpressionWeights_7;
this->ExpressionWeights_8 = ExpressionWeights_8;
this->ExpressionWeights_9 = ExpressionWeights_9;
this->ExpressionWeights_10 = ExpressionWeights_10;
this->ExpressionWeights_11 = ExpressionWeights_11;
this->ExpressionWeights_12 = ExpressionWeights_12;
this->ExpressionWeights_13 = ExpressionWeights_13;
this->ExpressionWeights_14 = ExpressionWeights_14;
this->ExpressionWeights_15 = ExpressionWeights_15;
this->ExpressionWeights_16 = ExpressionWeights_16;
this->ExpressionWeights_17 = ExpressionWeights_17;
this->ExpressionWeights_18 = ExpressionWeights_18;
this->ExpressionWeights_19 = ExpressionWeights_19;
this->ExpressionWeights_20 = ExpressionWeights_20;
this->ExpressionWeights_21 = ExpressionWeights_21;
this->ExpressionWeights_22 = ExpressionWeights_22;
this->ExpressionWeights_23 = ExpressionWeights_23;
this->ExpressionWeights_24 = ExpressionWeights_24;
this->ExpressionWeights_25 = ExpressionWeights_25;
this->ExpressionWeights_26 = ExpressionWeights_26;
this->ExpressionWeights_27 = ExpressionWeights_27;
this->ExpressionWeights_28 = ExpressionWeights_28;
this->ExpressionWeights_29 = ExpressionWeights_29;
this->ExpressionWeights_30 = ExpressionWeights_30;
this->ExpressionWeights_31 = ExpressionWeights_31;
this->ExpressionWeights_32 = ExpressionWeights_32;
this->ExpressionWeights_33 = ExpressionWeights_33;
this->ExpressionWeights_34 = ExpressionWeights_34;
this->ExpressionWeights_35 = ExpressionWeights_35;
this->ExpressionWeights_36 = ExpressionWeights_36;
this->ExpressionWeights_37 = ExpressionWeights_37;
this->ExpressionWeights_38 = ExpressionWeights_38;
this->ExpressionWeights_39 = ExpressionWeights_39;
this->ExpressionWeights_40 = ExpressionWeights_40;
this->ExpressionWeights_41 = ExpressionWeights_41;
this->ExpressionWeights_42 = ExpressionWeights_42;
this->ExpressionWeights_43 = ExpressionWeights_43;
this->ExpressionWeights_44 = ExpressionWeights_44;
this->ExpressionWeights_45 = ExpressionWeights_45;
this->ExpressionWeights_46 = ExpressionWeights_46;
this->ExpressionWeights_47 = ExpressionWeights_47;
this->ExpressionWeights_48 = ExpressionWeights_48;
this->ExpressionWeights_49 = ExpressionWeights_49;
this->ExpressionWeights_50 = ExpressionWeights_50;
this->ExpressionWeights_51 = ExpressionWeights_51;
this->ExpressionWeights_52 = ExpressionWeights_52;
this->ExpressionWeights_53 = ExpressionWeights_53;
this->ExpressionWeights_54 = ExpressionWeights_54;
this->ExpressionWeights_55 = ExpressionWeights_55;
this->ExpressionWeights_56 = ExpressionWeights_56;
this->ExpressionWeights_57 = ExpressionWeights_57;
this->ExpressionWeights_58 = ExpressionWeights_58;
this->ExpressionWeights_59 = ExpressionWeights_59;
this->ExpressionWeights_60 = ExpressionWeights_60;
this->ExpressionWeights_61 = ExpressionWeights_61;
this->ExpressionWeights_62 = ExpressionWeights_62;
this->ExpressionWeightConfidences_0 = ExpressionWeightConfidences_0;
this->ExpressionWeightConfidences_1 = ExpressionWeightConfidences_1;
this->Status = Status;
this->Time = Time;
}
constexpr void GlobalNamespace::__OVRPlugin__FaceRegionConfidence::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__FaceRegionConfidence::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__FaceRegionConfidence::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceRegionConfidence::__OVRPlugin__FaceRegionConfidence(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__FaceRegionConfidence  GlobalNamespace::__OVRPlugin__FaceRegionConfidence::Lower{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceRegionConfidence  GlobalNamespace::__OVRPlugin__FaceRegionConfidence::Upper{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceRegionConfidence  GlobalNamespace::__OVRPlugin__FaceRegionConfidence::Max{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__FaceExpression::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__FaceExpression::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__FaceExpression::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression::__OVRPlugin__FaceExpression(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Invalid{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Brow_Lowerer_L{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Brow_Lowerer_R{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Puff_L{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Puff_R{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Raiser_L{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Raiser_R{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Suck_L{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Cheek_Suck_R{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Chin_Raiser_B{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Chin_Raiser_T{static_cast<int32_t>(0x9)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Dimpler_L{static_cast<int32_t>(0xa)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Dimpler_R{static_cast<int32_t>(0xb)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Closed_L{static_cast<int32_t>(0xc)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Closed_R{static_cast<int32_t>(0xd)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Down_L{static_cast<int32_t>(0xe)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Down_R{static_cast<int32_t>(0xf)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Left_L{static_cast<int32_t>(0x10)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Left_R{static_cast<int32_t>(0x11)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Right_L{static_cast<int32_t>(0x12)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Right_R{static_cast<int32_t>(0x13)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Up_L{static_cast<int32_t>(0x14)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Eyes_Look_Up_R{static_cast<int32_t>(0x15)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Inner_Brow_Raiser_L{static_cast<int32_t>(0x16)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Inner_Brow_Raiser_R{static_cast<int32_t>(0x17)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Jaw_Drop{static_cast<int32_t>(0x18)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Jaw_Sideways_Left{static_cast<int32_t>(0x19)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Jaw_Sideways_Right{static_cast<int32_t>(0x1a)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Jaw_Thrust{static_cast<int32_t>(0x1b)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lid_Tightener_L{static_cast<int32_t>(0x1c)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lid_Tightener_R{static_cast<int32_t>(0x1d)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Corner_Depressor_L{static_cast<int32_t>(0x1e)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Corner_Depressor_R{static_cast<int32_t>(0x1f)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Corner_Puller_L{static_cast<int32_t>(0x20)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Corner_Puller_R{static_cast<int32_t>(0x21)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Funneler_LB{static_cast<int32_t>(0x22)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Funneler_LT{static_cast<int32_t>(0x23)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Funneler_RB{static_cast<int32_t>(0x24)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Funneler_RT{static_cast<int32_t>(0x25)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Pressor_L{static_cast<int32_t>(0x26)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Pressor_R{static_cast<int32_t>(0x27)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Pucker_L{static_cast<int32_t>(0x28)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Pucker_R{static_cast<int32_t>(0x29)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Stretcher_L{static_cast<int32_t>(0x2a)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Stretcher_R{static_cast<int32_t>(0x2b)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Suck_LB{static_cast<int32_t>(0x2c)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Suck_LT{static_cast<int32_t>(0x2d)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Suck_RB{static_cast<int32_t>(0x2e)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Suck_RT{static_cast<int32_t>(0x2f)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Tightener_L{static_cast<int32_t>(0x30)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lip_Tightener_R{static_cast<int32_t>(0x31)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lips_Toward{static_cast<int32_t>(0x32)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lower_Lip_Depressor_L{static_cast<int32_t>(0x33)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Lower_Lip_Depressor_R{static_cast<int32_t>(0x34)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Mouth_Left{static_cast<int32_t>(0x35)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Mouth_Right{static_cast<int32_t>(0x36)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Nose_Wrinkler_L{static_cast<int32_t>(0x37)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Nose_Wrinkler_R{static_cast<int32_t>(0x38)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Outer_Brow_Raiser_L{static_cast<int32_t>(0x39)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Outer_Brow_Raiser_R{static_cast<int32_t>(0x3a)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Upper_Lid_Raiser_L{static_cast<int32_t>(0x3b)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Upper_Lid_Raiser_R{static_cast<int32_t>(0x3c)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Upper_Lip_Raiser_L{static_cast<int32_t>(0x3d)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Upper_Lip_Raiser_R{static_cast<int32_t>(0x3e)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceExpression  GlobalNamespace::__OVRPlugin__FaceExpression::Max{static_cast<int32_t>(0x3f)};
constexpr void GlobalNamespace::__OVRPlugin__FaceConstants::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__FaceConstants::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__FaceConstants::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__FaceConstants::__OVRPlugin__FaceConstants(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__FaceConstants  GlobalNamespace::__OVRPlugin__FaceConstants::MaxFaceExpressions{static_cast<int32_t>(0x3f)};
constexpr ::GlobalNamespace::__OVRPlugin__FaceConstants  GlobalNamespace::__OVRPlugin__FaceConstants::MaxFaceRegionConfidences{static_cast<int32_t>(0x2)};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__EyeGazeState.get_IsValid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__EyeGazeState::*)()>(&::GlobalNamespace::__OVRPlugin__EyeGazeState::get_IsValid)> {
  constexpr static std::size_t size = 0x10;
  constexpr static std::size_t addrs = 0x276d648;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__EyeGazeState>::get(),
                            "get_IsValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__EyeGazeState::__set_Pose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__EyeGazeState::__get_Pose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__EyeGazeState::__get_Pose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__EyeGazeState::__set_Confidence(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__EyeGazeState::__get_Confidence()  {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__EyeGazeState::__get_Confidence() const {
return ::cordl_internals::getInstanceField<float_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__EyeGazeState::__set__isValid(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__EyeGazeState::__get__isValid()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__EyeGazeState::__get__isValid() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline bool GlobalNamespace::__OVRPlugin__EyeGazeState::get_IsValid()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__EyeGazeState>::get(),
                            "get_IsValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(*this, ___internal_method);
}
// Ctor Parameters [CppParam { name: "Pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "Confidence", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "_isValid", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazeState::__OVRPlugin__EyeGazeState(::GlobalNamespace::__OVRPlugin__Posef  Pose, float_t  Confidence, ::GlobalNamespace::__OVRPlugin__Bool  _isValid) noexcept : ::bs_hook::ValueTypeWrapper<0x24>() {this->Pose = Pose;
this->Confidence = Confidence;
this->_isValid = _isValid;
}
constexpr void GlobalNamespace::__OVRPlugin__EyeGazesState::__set_EyeGazes(::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*>& GlobalNamespace::__OVRPlugin__EyeGazesState::__get_EyeGazes()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*> const& GlobalNamespace::__OVRPlugin__EyeGazesState::__get_EyeGazes() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__EyeGazesState::__set_Time(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__EyeGazesState::__get_Time()  {
return ::cordl_internals::getInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__EyeGazesState::__get_Time() const {
return ::cordl_internals::getInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "EyeGazes", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazesState::__OVRPlugin__EyeGazesState(::ArrayW<::GlobalNamespace::__OVRPlugin__EyeGazeState,::Array<::GlobalNamespace::__OVRPlugin__EyeGazeState>*>  EyeGazes, double_t  Time) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->EyeGazes = EyeGazes;
this->Time = Time;
}
constexpr void GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__set_EyeGazes_0(::GlobalNamespace::__OVRPlugin__EyeGazeState  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeGazeState, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeGazeState>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazeState& GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__get_EyeGazes_0()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeGazeState, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazeState const& GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__get_EyeGazes_0() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeGazeState, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__set_EyeGazes_1(::GlobalNamespace::__OVRPlugin__EyeGazeState  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EyeGazeState, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EyeGazeState>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazeState& GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__get_EyeGazes_1()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeGazeState, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazeState const& GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__get_EyeGazes_1() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EyeGazeState, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__set_Time(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__get_Time()  {
return ::cordl_internals::getInstanceField<double_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__get_Time() const {
return ::cordl_internals::getInstanceField<double_t, 0x48>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "EyeGazes_0", ty: "::GlobalNamespace::__OVRPlugin__EyeGazeState", modifiers: "", def_value: Some("{}") }, CppParam { name: "EyeGazes_1", ty: "::GlobalNamespace::__OVRPlugin__EyeGazeState", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal::__OVRPlugin__EyeGazesStateInternal(::GlobalNamespace::__OVRPlugin__EyeGazeState  EyeGazes_0, ::GlobalNamespace::__OVRPlugin__EyeGazeState  EyeGazes_1, double_t  Time) noexcept : ::bs_hook::ValueTypeWrapper<0x50>() {this->EyeGazes_0 = EyeGazes_0;
this->EyeGazes_1 = EyeGazes_1;
this->Time = Time;
}
constexpr void GlobalNamespace::__OVRPlugin__ColorSpace::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__ColorSpace::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__ColorSpace::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace::__OVRPlugin__ColorSpace(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace  GlobalNamespace::__OVRPlugin__ColorSpace::Unknown{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace  GlobalNamespace::__OVRPlugin__ColorSpace::Unmanaged{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace  GlobalNamespace::__OVRPlugin__ColorSpace::Rec_2020{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace  GlobalNamespace::__OVRPlugin__ColorSpace::Rec_709{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace  GlobalNamespace::__OVRPlugin__ColorSpace::Rift_CV1{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace  GlobalNamespace::__OVRPlugin__ColorSpace::Rift_S{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace  GlobalNamespace::__OVRPlugin__ColorSpace::Quest{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace  GlobalNamespace::__OVRPlugin__ColorSpace::P3{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__ColorSpace  GlobalNamespace::__OVRPlugin__ColorSpace::Adobe_RGB{static_cast<int32_t>(0x8)};
constexpr void GlobalNamespace::__OVRPlugin__EventType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__EventType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__EventType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__EventType::__OVRPlugin__EventType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::Unknown{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::DisplayRefreshRateChanged{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::SpatialAnchorCreateComplete{static_cast<int32_t>(0x31)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::SpaceSetComponentStatusComplete{static_cast<int32_t>(0x32)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::SpaceQueryResults{static_cast<int32_t>(0x33)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::SpaceQueryComplete{static_cast<int32_t>(0x34)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::SpaceSaveComplete{static_cast<int32_t>(0x35)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::SpaceEraseComplete{static_cast<int32_t>(0x36)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::SpaceShareResult{static_cast<int32_t>(0x38)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::SpaceListSaveResult{static_cast<int32_t>(0x39)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::SceneCaptureComplete{static_cast<int32_t>(0x64)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardCommitText{static_cast<int32_t>(0xc9)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardBackspace{static_cast<int32_t>(0xca)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardEnter{static_cast<int32_t>(0xcb)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardShown{static_cast<int32_t>(0xcc)};
constexpr ::GlobalNamespace::__OVRPlugin__EventType  GlobalNamespace::__OVRPlugin__EventType::VirtualKeyboardHidden{static_cast<int32_t>(0xcd)};
constexpr void GlobalNamespace::__OVRPlugin__EventDataBuffer::__set_EventType(::GlobalNamespace::__OVRPlugin__EventType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__EventType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__EventType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__EventType& GlobalNamespace::__OVRPlugin__EventDataBuffer::__get_EventType()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EventType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__EventType const& GlobalNamespace::__OVRPlugin__EventDataBuffer::__get_EventType() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__EventType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__EventDataBuffer::__set_EventData(::ArrayW<uint8_t,::Array<uint8_t>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<uint8_t,::Array<uint8_t>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<uint8_t,::Array<uint8_t>*>>(value));
}
constexpr ::ArrayW<uint8_t,::Array<uint8_t>*>& GlobalNamespace::__OVRPlugin__EventDataBuffer::__get_EventData()  {
return ::cordl_internals::getInstanceField<::ArrayW<uint8_t,::Array<uint8_t>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<uint8_t,::Array<uint8_t>*> const& GlobalNamespace::__OVRPlugin__EventDataBuffer::__get_EventData() const {
return ::cordl_internals::getInstanceField<::ArrayW<uint8_t,::Array<uint8_t>*>, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "EventType", ty: "::GlobalNamespace::__OVRPlugin__EventType", modifiers: "", def_value: Some("{}") }, CppParam { name: "EventData", ty: "::ArrayW<uint8_t,::Array<uint8_t>*>", modifiers: "", def_value: Some("csnull") }]
constexpr ::GlobalNamespace::__OVRPlugin__EventDataBuffer::__OVRPlugin__EventDataBuffer(::GlobalNamespace::__OVRPlugin__EventType  EventType, ::ArrayW<uint8_t,::Array<uint8_t>*>  EventData) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->EventType = EventType;
this->EventData = EventData;
}
constexpr void GlobalNamespace::__OVRPlugin__RenderModelProperties::__set_ModelName(::StringW  value)  {
::cordl_internals::setInstanceField<::StringW, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::StringW>(value));
}
constexpr ::StringW& GlobalNamespace::__OVRPlugin__RenderModelProperties::__get_ModelName()  {
return ::cordl_internals::getInstanceField<::StringW, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::StringW const& GlobalNamespace::__OVRPlugin__RenderModelProperties::__get_ModelName() const {
return ::cordl_internals::getInstanceField<::StringW, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RenderModelProperties::__set_ModelKey(uint64_t  value)  {
::cordl_internals::setInstanceField<uint64_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint64_t>(value));
}
constexpr uint64_t& GlobalNamespace::__OVRPlugin__RenderModelProperties::__get_ModelKey()  {
return ::cordl_internals::getInstanceField<uint64_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint64_t const& GlobalNamespace::__OVRPlugin__RenderModelProperties::__get_ModelKey() const {
return ::cordl_internals::getInstanceField<uint64_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RenderModelProperties::__set_VendorId(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__RenderModelProperties::__get_VendorId()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__RenderModelProperties::__get_VendorId() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RenderModelProperties::__set_ModelVersion(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__RenderModelProperties::__get_ModelVersion()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__RenderModelProperties::__get_ModelVersion() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "ModelName", ty: "::StringW", modifiers: "", def_value: Some("csnull") }, CppParam { name: "ModelKey", ty: "uint64_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "VendorId", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ModelVersion", ty: "uint32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelProperties::__OVRPlugin__RenderModelProperties(::StringW  ModelName, uint64_t  ModelKey, uint32_t  VendorId, uint32_t  ModelVersion) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->ModelName = ModelName;
this->ModelKey = ModelKey;
this->VendorId = VendorId;
this->ModelVersion = ModelVersion;
}
constexpr void GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__set_ModelName(::ArrayW<uint8_t,::Array<uint8_t>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<uint8_t,::Array<uint8_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<uint8_t,::Array<uint8_t>*>>(value));
}
constexpr ::ArrayW<uint8_t,::Array<uint8_t>*>& GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__get_ModelName()  {
return ::cordl_internals::getInstanceField<::ArrayW<uint8_t,::Array<uint8_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<uint8_t,::Array<uint8_t>*> const& GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__get_ModelName() const {
return ::cordl_internals::getInstanceField<::ArrayW<uint8_t,::Array<uint8_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__set_ModelKey(uint64_t  value)  {
::cordl_internals::setInstanceField<uint64_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint64_t>(value));
}
constexpr uint64_t& GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__get_ModelKey()  {
return ::cordl_internals::getInstanceField<uint64_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint64_t const& GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__get_ModelKey() const {
return ::cordl_internals::getInstanceField<uint64_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__set_VendorId(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__get_VendorId()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__get_VendorId() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__set_ModelVersion(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__get_ModelVersion()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__get_ModelVersion() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "ModelName", ty: "::ArrayW<uint8_t,::Array<uint8_t>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "ModelKey", ty: "uint64_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "VendorId", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "ModelVersion", ty: "uint32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal::__OVRPlugin__RenderModelPropertiesInternal(::ArrayW<uint8_t,::Array<uint8_t>*>  ModelName, uint64_t  ModelKey, uint32_t  VendorId, uint32_t  ModelVersion) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->ModelName = ModelName;
this->ModelKey = ModelKey;
this->VendorId = VendorId;
this->ModelVersion = ModelVersion;
}
constexpr void GlobalNamespace::__OVRPlugin__RenderModelFlags::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__RenderModelFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__RenderModelFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelFlags::__OVRPlugin__RenderModelFlags(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelFlags  GlobalNamespace::__OVRPlugin__RenderModelFlags::SupportsGltf20Subset1{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__RenderModelFlags  GlobalNamespace::__OVRPlugin__RenderModelFlags::SupportsGltf20Subset2{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::__OVRPlugin__VirtualKeyboardLocationType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType  GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::Custom{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType  GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::Far{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType  GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType::Direct{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo::__set_locationType(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType& GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo::__get_locationType()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType const& GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo::__get_locationType() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo::__set_pose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo::__get_pose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo::__get_pose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "locationType", ty: "::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType", modifiers: "", def_value: Some("{}") }, CppParam { name: "pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo::__OVRPlugin__VirtualKeyboardSpaceCreateInfo(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType  locationType, ::GlobalNamespace::__OVRPlugin__Posef  pose) noexcept : ::bs_hook::ValueTypeWrapper<0x20>() {this->locationType = locationType;
this->pose = pose;
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__set_locationType(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType& GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__get_locationType()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType const& GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__get_locationType() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__set_pose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__get_pose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__get_pose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__set_scale(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__get_scale()  {
return ::cordl_internals::getInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__get_scale() const {
return ::cordl_internals::getInstanceField<float_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "locationType", ty: "::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType", modifiers: "", def_value: Some("{}") }, CppParam { name: "pose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "scale", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo::__OVRPlugin__VirtualKeyboardLocationInfo(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationType  locationType, ::GlobalNamespace::__OVRPlugin__Posef  pose, float_t  scale) noexcept : ::bs_hook::ValueTypeWrapper<0x24>() {this->locationType = locationType;
this->pose = pose;
this->scale = scale;
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::__OVRPlugin__VirtualKeyboardInputSource(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::Invalid{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::ControllerRayLeft{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::ControllerRayRight{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::HandRayLeft{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::HandRayRight{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::ControllerDirectLeft{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::ControllerDirectRight{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::HandDirectIndexTipLeft{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::HandDirectIndexTipRight{static_cast<int32_t>(0x8)};
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags::__set_value__(uint64_t  value)  {
::cordl_internals::setInstanceField<uint64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint64_t>(value));
}
constexpr uint64_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<uint64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint64_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<uint64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "uint64_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags::__OVRPlugin__VirtualKeyboardInputStateFlags(uint64_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x8>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags  GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags::IsPressed{static_cast<uint64_t>(0x1u)};
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__set_inputSource(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__get_inputSource()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource const& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__get_inputSource() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__set_inputPose(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__get_inputPose()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__get_inputPose() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__set_inputState(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__get_inputState()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags const& GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__get_inputState() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "inputSource", ty: "::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource", modifiers: "", def_value: Some("{}") }, CppParam { name: "inputPose", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "inputState", ty: "::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo::__OVRPlugin__VirtualKeyboardInputInfo(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputSource  inputSource, ::GlobalNamespace::__OVRPlugin__Posef  inputPose, ::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputStateFlags  inputState) noexcept : ::bs_hook::ValueTypeWrapper<0x28>() {this->inputSource = inputSource;
this->inputPose = inputPose;
this->inputState = inputState;
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState::__set_AnimationIndex(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState::__get_AnimationIndex()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState::__get_AnimationIndex() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState::__set_Fraction(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState::__get_Fraction()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState::__get_Fraction() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "AnimationIndex", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Fraction", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState::__OVRPlugin__VirtualKeyboardModelAnimationState(int32_t  AnimationIndex, float_t  Fraction) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->AnimationIndex = AnimationIndex;
this->Fraction = Fraction;
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates::__set_States(::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*>& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates::__get_States()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*> const& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates::__get_States() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "States", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*>", modifiers: "", def_value: Some("csnull") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates::__OVRPlugin__VirtualKeyboardModelAnimationStates(::ArrayW<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState,::Array<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationState>*>  States) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->States = States;
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__set_StateCapacityInput(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__get_StateCapacityInput()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__get_StateCapacityInput() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__set_StateCountOutput(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__get_StateCountOutput()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__get_StateCountOutput() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__set_StatesBuffer(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__get_StatesBuffer()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__get_StatesBuffer() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "StateCapacityInput", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "StateCountOutput", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "StatesBuffer", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal(uint32_t  StateCapacityInput, uint32_t  StateCountOutput, ::cordl_internals::intptr_t  StatesBuffer) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->StateCapacityInput = StateCapacityInput;
this->StateCountOutput = StateCountOutput;
this->StatesBuffer = StatesBuffer;
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds::__set_TextureIds(::ArrayW<uint64_t,::Array<uint64_t>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<uint64_t,::Array<uint64_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<uint64_t,::Array<uint64_t>*>>(value));
}
constexpr ::ArrayW<uint64_t,::Array<uint64_t>*>& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds::__get_TextureIds()  {
return ::cordl_internals::getInstanceField<::ArrayW<uint64_t,::Array<uint64_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<uint64_t,::Array<uint64_t>*> const& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds::__get_TextureIds() const {
return ::cordl_internals::getInstanceField<::ArrayW<uint64_t,::Array<uint64_t>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "TextureIds", ty: "::ArrayW<uint64_t,::Array<uint64_t>*>", modifiers: "", def_value: Some("csnull") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds::__OVRPlugin__VirtualKeyboardTextureIds(::ArrayW<uint64_t,::Array<uint64_t>*>  TextureIds) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->TextureIds = TextureIds;
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__set_TextureIdCapacityInput(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__get_TextureIdCapacityInput()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__get_TextureIdCapacityInput() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__set_TextureIdCountOutput(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__get_TextureIdCountOutput()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__get_TextureIdCountOutput() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__set_TextureIdsBuffer(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__get_TextureIdsBuffer()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__get_TextureIdsBuffer() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "TextureIdCapacityInput", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureIdCountOutput", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureIdsBuffer", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal::__OVRPlugin__VirtualKeyboardTextureIdsInternal(uint32_t  TextureIdCapacityInput, uint32_t  TextureIdCountOutput, ::cordl_internals::intptr_t  TextureIdsBuffer) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->TextureIdCapacityInput = TextureIdCapacityInput;
this->TextureIdCountOutput = TextureIdCountOutput;
this->TextureIdsBuffer = TextureIdsBuffer;
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__set_TextureWidth(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_TextureWidth()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_TextureWidth() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__set_TextureHeight(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_TextureHeight()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_TextureHeight() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__set_BufferCapacityInput(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_BufferCapacityInput()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_BufferCapacityInput() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__set_BufferCountOutput(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_BufferCountOutput()  {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_BufferCountOutput() const {
return ::cordl_internals::getInstanceField<uint32_t, 0xc>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__set_Buffer(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_Buffer()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__get_Buffer() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "TextureWidth", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureHeight", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "BufferCapacityInput", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "BufferCountOutput", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buffer", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData::__OVRPlugin__VirtualKeyboardTextureData(uint32_t  TextureWidth, uint32_t  TextureHeight, uint32_t  BufferCapacityInput, uint32_t  BufferCountOutput, ::cordl_internals::intptr_t  Buffer) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->TextureWidth = TextureWidth;
this->TextureHeight = TextureHeight;
this->BufferCapacityInput = BufferCapacityInput;
this->BufferCountOutput = BufferCountOutput;
this->Buffer = Buffer;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility.get_Visible
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::*)()>(&::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::get_Visible)> {
  constexpr static std::size_t size = 0x10;
  constexpr static std::size_t addrs = 0x276d658;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>::get(),
                            "get_Visible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility.set_Visible
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::*)(bool)>(&::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::set_Visible)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x276d668;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>::get(),
                            "set_Visible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::__set__visible(::GlobalNamespace::__OVRPlugin__Bool  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Bool>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::__get__visible()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Bool const& GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::__get__visible() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Bool, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline bool GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::get_Visible()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>::get(),
                            "get_Visible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(*this, ___internal_method);
}
inline void GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::set_Visible(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>::get(),
                            "set_Visible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, value);
}
// Ctor Parameters [CppParam { name: "_visible", ty: "::GlobalNamespace::__OVRPlugin__Bool", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility::__OVRPlugin__VirtualKeyboardModelVisibility(::GlobalNamespace::__OVRPlugin__Bool  _visible) noexcept : ::bs_hook::ValueTypeWrapper<0x4>() {this->_visible = _visible;
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::__OVRPlugin__InsightPassthroughColorMapType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::MonoToRgba{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::MonoToMono{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::BrightnessContrastSaturation{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::ColorLut{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType::InterpolatedColorLut{static_cast<int32_t>(0x7)};
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::__OVRPlugin__InsightPassthroughStyleFlags(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags  GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::HasTextureOpacityFactor{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags  GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::HasEdgeColor{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags  GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags::HasTextureColorMap{static_cast<int32_t>(0x4)};
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__set_Flags(::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_Flags()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_Flags() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__set_TextureOpacityFactor(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_TextureOpacityFactor()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_TextureOpacityFactor() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__set_EdgeColor(::GlobalNamespace::__OVRPlugin__Colorf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Colorf, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Colorf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Colorf& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_EdgeColor()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Colorf, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Colorf const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_EdgeColor() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Colorf, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__set_TextureColorMapType(::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_TextureColorMapType()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_TextureColorMapType() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__set_TextureColorMapDataSize(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_TextureColorMapDataSize()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_TextureColorMapDataSize() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__set_TextureColorMapData(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_TextureColorMapData()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__get_TextureColorMapData() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Flags", ty: "::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureOpacityFactor", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "EdgeColor", ty: "::GlobalNamespace::__OVRPlugin__Colorf", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapType", ty: "::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapDataSize", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapData", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle::__OVRPlugin__InsightPassthroughStyle(::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags  Flags, float_t  TextureOpacityFactor, ::GlobalNamespace::__OVRPlugin__Colorf  EdgeColor, ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  TextureColorMapType, uint32_t  TextureColorMapDataSize, ::cordl_internals::intptr_t  TextureColorMapData) noexcept : ::bs_hook::ValueTypeWrapper<0x28>() {this->Flags = Flags;
this->TextureOpacityFactor = TextureOpacityFactor;
this->EdgeColor = EdgeColor;
this->TextureColorMapType = TextureColorMapType;
this->TextureColorMapDataSize = TextureColorMapDataSize;
this->TextureColorMapData = TextureColorMapData;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2.CopyTo
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::*)(ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>)>(&::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::CopyTo)> {
  constexpr static std::size_t size = 0x24;
  constexpr static std::size_t addrs = 0x276d674;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>::get(),
                            "CopyTo",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>>::get()}
                        )));
    return ___internal_method;
  }
};
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__set_Flags(::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_Flags()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_Flags() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__set_TextureOpacityFactor(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_TextureOpacityFactor()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_TextureOpacityFactor() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__set_EdgeColor(::GlobalNamespace::__OVRPlugin__Colorf  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Colorf, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Colorf>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Colorf& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_EdgeColor()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Colorf, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Colorf const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_EdgeColor() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Colorf, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__set_TextureColorMapType(::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_TextureColorMapType()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_TextureColorMapType() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__set_TextureColorMapDataSize(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_TextureColorMapDataSize()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_TextureColorMapDataSize() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x1c>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__set_TextureColorMapData(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_TextureColorMapData()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_TextureColorMapData() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__set_LutSource(uint64_t  value)  {
::cordl_internals::setInstanceField<uint64_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint64_t>(value));
}
constexpr uint64_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_LutSource()  {
return ::cordl_internals::getInstanceField<uint64_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint64_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_LutSource() const {
return ::cordl_internals::getInstanceField<uint64_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__set_LutTarget(uint64_t  value)  {
::cordl_internals::setInstanceField<uint64_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint64_t>(value));
}
constexpr uint64_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_LutTarget()  {
return ::cordl_internals::getInstanceField<uint64_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint64_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_LutTarget() const {
return ::cordl_internals::getInstanceField<uint64_t, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__set_LutWeight(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_LutWeight()  {
return ::cordl_internals::getInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__get_LutWeight() const {
return ::cordl_internals::getInstanceField<float_t, 0x38>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::CopyTo(ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>  target)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>::get(),
                            "CopyTo",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, target);
}
// Ctor Parameters [CppParam { name: "Flags", ty: "::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureOpacityFactor", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "EdgeColor", ty: "::GlobalNamespace::__OVRPlugin__Colorf", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapType", ty: "::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapDataSize", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "TextureColorMapData", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LutSource", ty: "uint64_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LutTarget", ty: "uint64_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "LutWeight", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2::__OVRPlugin__InsightPassthroughStyle2(::GlobalNamespace::__OVRPlugin__InsightPassthroughStyleFlags  Flags, float_t  TextureOpacityFactor, ::GlobalNamespace::__OVRPlugin__Colorf  EdgeColor, ::GlobalNamespace::__OVRPlugin__InsightPassthroughColorMapType  TextureColorMapType, uint32_t  TextureColorMapDataSize, ::cordl_internals::intptr_t  TextureColorMapData, uint64_t  LutSource, uint64_t  LutTarget, float_t  LutWeight) noexcept : ::bs_hook::ValueTypeWrapper<0x40>() {this->Flags = Flags;
this->TextureOpacityFactor = TextureOpacityFactor;
this->EdgeColor = EdgeColor;
this->TextureColorMapType = TextureColorMapType;
this->TextureColorMapDataSize = TextureColorMapDataSize;
this->TextureColorMapData = TextureColorMapData;
this->LutSource = LutSource;
this->LutTarget = LutTarget;
this->LutWeight = LutWeight;
}
constexpr void GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::__OVRPlugin__PassthroughColorLutChannels(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels  GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::Rgb{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels  GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels::Rgba{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__PassthroughColorLutData::__set_BufferSize(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__PassthroughColorLutData::__get_BufferSize()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__PassthroughColorLutData::__get_BufferSize() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PassthroughColorLutData::__set_Buffer(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__PassthroughColorLutData::__get_Buffer()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__PassthroughColorLutData::__get_Buffer() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "BufferSize", ty: "uint32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Buffer", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData::__OVRPlugin__PassthroughColorLutData(uint32_t  BufferSize, ::cordl_internals::intptr_t  Buffer) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->BufferSize = BufferSize;
this->Buffer = Buffer;
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity::__set_LeftHandIntensity(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity::__get_LeftHandIntensity()  {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity::__get_LeftHandIntensity() const {
return ::cordl_internals::getInstanceField<float_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity::__set_RightHandIntensity(float_t  value)  {
::cordl_internals::setInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<float_t>(value));
}
constexpr float_t& GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity::__get_RightHandIntensity()  {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr float_t const& GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity::__get_RightHandIntensity() const {
return ::cordl_internals::getInstanceField<float_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "LeftHandIntensity", ty: "float_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "RightHandIntensity", ty: "float_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity(float_t  LeftHandIntensity, float_t  RightHandIntensity) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->LeftHandIntensity = LeftHandIntensity;
this->RightHandIntensity = RightHandIntensity;
}
constexpr void GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::__OVRPlugin__PassthroughCapabilityFlags(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags  GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::Passthrough{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags  GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::Color{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags  GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags::Depth{static_cast<int32_t>(0x4)};
constexpr void GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::__OVRPlugin__PassthroughCapabilityFields(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields  GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::Flags{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields  GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields::MaxColorLutResolution{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__set_Fields(::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields& GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__get_Fields()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields const& GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__get_Fields() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__set_Flags(::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags& GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__get_Flags()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags const& GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__get_Flags() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__set_MaxColorLutResolution(uint32_t  value)  {
::cordl_internals::setInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint32_t>(value));
}
constexpr uint32_t& GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__get_MaxColorLutResolution()  {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint32_t const& GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__get_MaxColorLutResolution() const {
return ::cordl_internals::getInstanceField<uint32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Fields", ty: "::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields", modifiers: "", def_value: Some("{}") }, CppParam { name: "Flags", ty: "::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags", modifiers: "", def_value: Some("{}") }, CppParam { name: "MaxColorLutResolution", ty: "uint32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughCapabilities::__OVRPlugin__PassthroughCapabilities(::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFields  Fields, ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags  Flags, uint32_t  MaxColorLutResolution) noexcept : ::bs_hook::ValueTypeWrapper<0xc>() {this->Fields = Fields;
this->Flags = Flags;
this->MaxColorLutResolution = MaxColorLutResolution;
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceComponentType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceComponentType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceComponentType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType::__OVRPlugin__SpaceComponentType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType  GlobalNamespace::__OVRPlugin__SpaceComponentType::Locatable{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType  GlobalNamespace::__OVRPlugin__SpaceComponentType::Storable{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType  GlobalNamespace::__OVRPlugin__SpaceComponentType::Sharable{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType  GlobalNamespace::__OVRPlugin__SpaceComponentType::Bounded2D{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType  GlobalNamespace::__OVRPlugin__SpaceComponentType::Bounded3D{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType  GlobalNamespace::__OVRPlugin__SpaceComponentType::SemanticLabels{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType  GlobalNamespace::__OVRPlugin__SpaceComponentType::RoomLayout{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType  GlobalNamespace::__OVRPlugin__SpaceComponentType::SpaceContainer{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceComponentType  GlobalNamespace::__OVRPlugin__SpaceComponentType::TriangleMesh{static_cast<int32_t>(0x3b9ee4c8)};
constexpr void GlobalNamespace::__OVRPlugin__SpaceStorageLocation::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceStorageLocation::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceStorageLocation::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation::__OVRPlugin__SpaceStorageLocation(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  GlobalNamespace::__OVRPlugin__SpaceStorageLocation::Invalid{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  GlobalNamespace::__OVRPlugin__SpaceStorageLocation::Local{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  GlobalNamespace::__OVRPlugin__SpaceStorageLocation::Cloud{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::__OVRPlugin__SpaceStoragePersistenceMode(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode  GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::Invalid{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode  GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode::Indefinite{static_cast<int32_t>(0x1)};
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryActionType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceQueryActionType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceQueryActionType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryActionType::__OVRPlugin__SpaceQueryActionType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryActionType  GlobalNamespace::__OVRPlugin__SpaceQueryActionType::Load{static_cast<int32_t>(0x0)};
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceQueryType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceQueryType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryType::__OVRPlugin__SpaceQueryType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryType  GlobalNamespace::__OVRPlugin__SpaceQueryType::Action{static_cast<int32_t>(0x0)};
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::__OVRPlugin__SpaceQueryFilterType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType  GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::None{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType  GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::Ids{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType  GlobalNamespace::__OVRPlugin__SpaceQueryFilterType::Components{static_cast<int32_t>(0x2)};
constexpr void GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__set_BaseTracking(::GlobalNamespace::__OVRPlugin__TrackingOrigin  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__TrackingOrigin, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__TrackingOrigin>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin& GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__get_BaseTracking()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingOrigin, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__TrackingOrigin const& GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__get_BaseTracking() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__TrackingOrigin, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__set_PoseInSpace(::GlobalNamespace::__OVRPlugin__Posef  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__Posef>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef& GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__get_PoseInSpace()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__Posef const& GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__get_PoseInSpace() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__Posef, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__set_Time(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__get_Time()  {
return ::cordl_internals::getInstanceField<double_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__get_Time() const {
return ::cordl_internals::getInstanceField<double_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "BaseTracking", ty: "::GlobalNamespace::__OVRPlugin__TrackingOrigin", modifiers: "", def_value: Some("{}") }, CppParam { name: "PoseInSpace", ty: "::GlobalNamespace::__OVRPlugin__Posef", modifiers: "", def_value: Some("{}") }, CppParam { name: "Time", ty: "double_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo::__OVRPlugin__SpatialAnchorCreateInfo(::GlobalNamespace::__OVRPlugin__TrackingOrigin  BaseTracking, ::GlobalNamespace::__OVRPlugin__Posef  PoseInSpace, double_t  Time) noexcept : ::bs_hook::ValueTypeWrapper<0x28>() {this->BaseTracking = BaseTracking;
this->PoseInSpace = PoseInSpace;
this->Time = Time;
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds::__set_Ids(::ArrayW<::System::Guid,::Array<::System::Guid>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::System::Guid,::Array<::System::Guid>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::System::Guid,::Array<::System::Guid>*>>(value));
}
constexpr ::ArrayW<::System::Guid,::Array<::System::Guid>*>& GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds::__get_Ids()  {
return ::cordl_internals::getInstanceField<::ArrayW<::System::Guid,::Array<::System::Guid>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::System::Guid,::Array<::System::Guid>*> const& GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds::__get_Ids() const {
return ::cordl_internals::getInstanceField<::ArrayW<::System::Guid,::Array<::System::Guid>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds::__set_NumIds(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds::__get_NumIds()  {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds::__get_NumIds() const {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Ids", ty: "::ArrayW<::System::Guid,::Array<::System::Guid>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "NumIds", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds::__OVRPlugin__SpaceFilterInfoIds(::ArrayW<::System::Guid,::Array<::System::Guid>*>  Ids, int32_t  NumIds) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->Ids = Ids;
this->NumIds = NumIds;
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents::__set_Components(::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>(value));
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>& GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents::__get_Components()  {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*> const& GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents::__get_Components() const {
return ::cordl_internals::getInstanceField<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents::__set_NumComponents(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents::__get_NumComponents()  {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents::__get_NumComponents() const {
return ::cordl_internals::getInstanceField<int32_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Components", ty: "::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>", modifiers: "", def_value: Some("csnull") }, CppParam { name: "NumComponents", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents::__OVRPlugin__SpaceFilterInfoComponents(::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>  Components, int32_t  NumComponents) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->Components = Components;
this->NumComponents = NumComponents;
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__set_QueryType(::GlobalNamespace::__OVRPlugin__SpaceQueryType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SpaceQueryType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SpaceQueryType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryType& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_QueryType()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceQueryType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryType const& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_QueryType() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceQueryType, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__set_MaxQuerySpaces(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_MaxQuerySpaces()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_MaxQuerySpaces() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__set_Timeout(double_t  value)  {
::cordl_internals::setInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<double_t>(value));
}
constexpr double_t& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_Timeout()  {
return ::cordl_internals::getInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr double_t const& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_Timeout() const {
return ::cordl_internals::getInstanceField<double_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__set_Location(::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_Location()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation const& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_Location() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__set_ActionType(::GlobalNamespace::__OVRPlugin__SpaceQueryActionType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SpaceQueryActionType, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SpaceQueryActionType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryActionType& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_ActionType()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceQueryActionType, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryActionType const& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_ActionType() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceQueryActionType, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__set_FilterType(::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_FilterType()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType const& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_FilterType() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__set_IdInfo(::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_IdInfo()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds const& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_IdInfo() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__set_ComponentsInfo(::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_ComponentsInfo()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents const& GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__get_ComponentsInfo() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents, 0x30>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "QueryType", ty: "::GlobalNamespace::__OVRPlugin__SpaceQueryType", modifiers: "", def_value: Some("{}") }, CppParam { name: "MaxQuerySpaces", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Timeout", ty: "double_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "Location", ty: "::GlobalNamespace::__OVRPlugin__SpaceStorageLocation", modifiers: "", def_value: Some("{}") }, CppParam { name: "ActionType", ty: "::GlobalNamespace::__OVRPlugin__SpaceQueryActionType", modifiers: "", def_value: Some("{}") }, CppParam { name: "FilterType", ty: "::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType", modifiers: "", def_value: Some("{}") }, CppParam { name: "IdInfo", ty: "::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds", modifiers: "", def_value: Some("{}") }, CppParam { name: "ComponentsInfo", ty: "::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryInfo::__OVRPlugin__SpaceQueryInfo(::GlobalNamespace::__OVRPlugin__SpaceQueryType  QueryType, int32_t  MaxQuerySpaces, double_t  Timeout, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  Location, ::GlobalNamespace::__OVRPlugin__SpaceQueryActionType  ActionType, ::GlobalNamespace::__OVRPlugin__SpaceQueryFilterType  FilterType, ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoIds  IdInfo, ::GlobalNamespace::__OVRPlugin__SpaceFilterInfoComponents  ComponentsInfo) noexcept : ::bs_hook::ValueTypeWrapper<0x40>() {this->QueryType = QueryType;
this->MaxQuerySpaces = MaxQuerySpaces;
this->Timeout = Timeout;
this->Location = Location;
this->ActionType = ActionType;
this->FilterType = FilterType;
this->IdInfo = IdInfo;
this->ComponentsInfo = ComponentsInfo;
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryResult::__set_space(uint64_t  value)  {
::cordl_internals::setInstanceField<uint64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<uint64_t>(value));
}
constexpr uint64_t& GlobalNamespace::__OVRPlugin__SpaceQueryResult::__get_space()  {
return ::cordl_internals::getInstanceField<uint64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr uint64_t const& GlobalNamespace::__OVRPlugin__SpaceQueryResult::__get_space() const {
return ::cordl_internals::getInstanceField<uint64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceQueryResult::__set_uuid(::System::Guid  value)  {
::cordl_internals::setInstanceField<::System::Guid, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::System::Guid>(value));
}
constexpr ::System::Guid& GlobalNamespace::__OVRPlugin__SpaceQueryResult::__get_uuid()  {
return ::cordl_internals::getInstanceField<::System::Guid, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::System::Guid const& GlobalNamespace::__OVRPlugin__SpaceQueryResult::__get_uuid() const {
return ::cordl_internals::getInstanceField<::System::Guid, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "space", ty: "uint64_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "uuid", ty: "::System::Guid", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceQueryResult::__OVRPlugin__SpaceQueryResult(uint64_t  space, ::System::Guid  uuid) noexcept : ::bs_hook::ValueTypeWrapper<0x18>() {this->space = space;
this->uuid = uuid;
}
constexpr void GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::__OVRPlugin__Media__MrcActivationMode(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode  GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::Automatic{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode  GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::Disabled{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode  GlobalNamespace::__OVRPlugin__Media__MrcActivationMode::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::__OVRPlugin__Media__PlatformCameraMode(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::Disabled{static_cast<int32_t>(0xffffffff)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::Initialized{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::UserControlled{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::SmartNavigated{static_cast<int32_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::StabilizedPoV{static_cast<int32_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::RemoteDroneControlled{static_cast<int32_t>(0x4)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::RemoteSpatialMapped{static_cast<int32_t>(0x5)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::SpectatorMode{static_cast<int32_t>(0x6)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::MobileMRC{static_cast<int32_t>(0x7)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode::EnumSize{static_cast<int32_t>(0x7fffffff)};
constexpr void GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::__OVRPlugin__Media__InputVideoBufferType(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType  GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::Memory{static_cast<int32_t>(0x0)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType  GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::TextureHandle{static_cast<int32_t>(0x1)};
constexpr ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType  GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType::EnumSize{static_cast<int32_t>(0x7fffffff)};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.Initialize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::Initialize)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x276d698;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "Initialize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.Shutdown
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::Shutdown)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x276d7c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "Shutdown",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetInitialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::GetInitialized)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x276d8e8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.Update
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::Update)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x276da38;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "Update",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcActivationMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode (*)()>(&::GlobalNamespace::__OVRPlugin__Media::GetMrcActivationMode)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276db60;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcActivationMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcActivationMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcActivationMode)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276dca8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcActivationMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetPlatformInitialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::SetPlatformInitialized)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x276ddec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetPlatformInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetPlatformCameraMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode (*)()>(&::GlobalNamespace::__OVRPlugin__Media::GetPlatformCameraMode)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276df14;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetPlatformCameraMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetPlatformCameraMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode)>(&::GlobalNamespace::__OVRPlugin__Media::SetPlatformCameraMode)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276e05c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetPlatformCameraMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.IsMrcEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::IsMrcEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x276e1a0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "IsMrcEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.IsMrcActivated
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::IsMrcActivated)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x276e2ec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "IsMrcActivated",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.UseMrcDebugCamera
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::UseMrcDebugCamera)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x276e438;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "UseMrcDebugCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcInputVideoBufferType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcInputVideoBufferType)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276e584;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcInputVideoBufferType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcInputVideoBufferType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType (*)()>(&::GlobalNamespace::__OVRPlugin__Media::GetMrcInputVideoBufferType)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276e6c8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcInputVideoBufferType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcFrameSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, int32_t)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcFrameSize)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x276e80c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcFrameSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<int32_t>, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__Media::GetMrcFrameSize)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x276e968;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcAudioSampleRate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcAudioSampleRate)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276eacc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcAudioSampleRate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcAudioSampleRate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__Media::GetMrcAudioSampleRate)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276ec10;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcAudioSampleRate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcFrameImageFlipped
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcFrameImageFlipped)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276ed50;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcFrameImageFlipped",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.GetMrcFrameImageFlipped
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::GetMrcFrameImageFlipped)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276ee98;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcFrameImageFlipped",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.EncodeMrcFrame
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::cordl_internals::intptr_t, ::cordl_internals::intptr_t, ::ArrayW<float_t,::Array<float_t>*>, int32_t, int32_t, double_t, double_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__Media::EncodeMrcFrame)> {
  constexpr static std::size_t size = 0x354;
  constexpr static std::size_t addrs = 0x276efe0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "EncodeMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<float_t,::Array<float_t>*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.EncodeMrcFrame
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::RenderTexture*, ::ArrayW<float_t,::Array<float_t>*>, int32_t, int32_t, double_t, double_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__Media::EncodeMrcFrame)> {
  constexpr static std::size_t size = 0x4e8;
  constexpr static std::size_t addrs = 0x276f644;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "EncodeMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::RenderTexture*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<float_t,::Array<float_t>*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SyncMrcFrame
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__Media::SyncMrcFrame)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276fb2c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SyncMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetAvailableQueueIndexVulkan
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint32_t)>(&::GlobalNamespace::__OVRPlugin__Media::SetAvailableQueueIndexVulkan)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276fc70;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetAvailableQueueIndexVulkan",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.SetMrcHeadsetControllerPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Posef)>(&::GlobalNamespace::__OVRPlugin__Media::SetMrcHeadsetControllerPose)> {
  constexpr static std::size_t size = 0x14c;
  constexpr static std::size_t addrs = 0x276fdb4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcHeadsetControllerPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media.IsCastingToRemoteClient
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::__OVRPlugin__Media::IsCastingToRemoteClient)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x276ffc4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "IsCastingToRemoteClient",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Media._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__Media::*)()>(&::GlobalNamespace::__OVRPlugin__Media::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2770114;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__Media::setStaticF_cachedTexture(::UnityEngine::Texture2D*  value)  {
::cordl_internals::setStaticField<::UnityEngine::Texture2D*, "cachedTexture", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get>(std::forward<::UnityEngine::Texture2D*>(value));
}
inline ::UnityEngine::Texture2D* GlobalNamespace::__OVRPlugin__Media::getStaticF_cachedTexture()  {
return ::cordl_internals::getStaticField<::UnityEngine::Texture2D*, "cachedTexture", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get>();
}
inline bool GlobalNamespace::__OVRPlugin__Media::Initialize()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "Initialize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::Shutdown()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "Shutdown",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::GetInitialized()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::Update()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "Update",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode GlobalNamespace::__OVRPlugin__Media::GetMrcActivationMode()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcActivationMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcActivationMode(::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode  mode)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcActivationMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, mode);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetPlatformInitialized()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetPlatformInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode GlobalNamespace::__OVRPlugin__Media::GetPlatformCameraMode()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetPlatformCameraMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetPlatformCameraMode(::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  mode)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetPlatformCameraMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, mode);
}
inline bool GlobalNamespace::__OVRPlugin__Media::IsMrcEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "IsMrcEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::IsMrcActivated()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "IsMrcActivated",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::UseMrcDebugCamera()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "UseMrcDebugCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcInputVideoBufferType(::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType  videoBufferType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcInputVideoBufferType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, videoBufferType);
}
inline ::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType GlobalNamespace::__OVRPlugin__Media::GetMrcInputVideoBufferType()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcInputVideoBufferType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcFrameSize(int32_t  frameWidth, int32_t  frameHeight)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, frameWidth, frameHeight);
}
inline void GlobalNamespace::__OVRPlugin__Media::GetMrcFrameSize(ByRef<int32_t>  frameWidth, ByRef<int32_t>  frameHeight)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, frameWidth, frameHeight);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcAudioSampleRate(int32_t  sampleRate)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcAudioSampleRate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, sampleRate);
}
inline int32_t GlobalNamespace::__OVRPlugin__Media::GetMrcAudioSampleRate()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcAudioSampleRate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcFrameImageFlipped(bool  imageFlipped)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcFrameImageFlipped",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, imageFlipped);
}
inline bool GlobalNamespace::__OVRPlugin__Media::GetMrcFrameImageFlipped()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "GetMrcFrameImageFlipped",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::__OVRPlugin__Media::EncodeMrcFrame(::cordl_internals::intptr_t  textureHandle, ::cordl_internals::intptr_t  fgTextureHandle, ::ArrayW<float_t,::Array<float_t>*>  audioData, int32_t  audioFrames, int32_t  audioChannels, double_t  timestamp, double_t  poseTime, ByRef<int32_t>  outSyncId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "EncodeMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<float_t,::Array<float_t>*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, textureHandle, fgTextureHandle, audioData, audioFrames, audioChannels, timestamp, poseTime, outSyncId);
}
inline bool GlobalNamespace::__OVRPlugin__Media::EncodeMrcFrame(::UnityEngine::RenderTexture*  frame, ::ArrayW<float_t,::Array<float_t>*>  audioData, int32_t  audioFrames, int32_t  audioChannels, double_t  timestamp, double_t  poseTime, ByRef<int32_t>  outSyncId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "EncodeMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::RenderTexture*>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<float_t,::Array<float_t>*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, frame, audioData, audioFrames, audioChannels, timestamp, poseTime, outSyncId);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SyncMrcFrame(int32_t  syncId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SyncMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, syncId);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetAvailableQueueIndexVulkan(uint32_t  queueIndexVk)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetAvailableQueueIndexVulkan",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, queueIndexVk);
}
inline bool GlobalNamespace::__OVRPlugin__Media::SetMrcHeadsetControllerPose(::GlobalNamespace::__OVRPlugin__Posef  headsetPose, ::GlobalNamespace::__OVRPlugin__Posef  leftControllerPose, ::GlobalNamespace::__OVRPlugin__Posef  rightControllerPose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "SetMrcHeadsetControllerPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, headsetPose, leftControllerPose, rightControllerPose);
}
inline bool GlobalNamespace::__OVRPlugin__Media::IsCastingToRemoteClient()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            "IsCastingToRemoteClient",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Media* GlobalNamespace::__OVRPlugin__Media::New_ctor()  {
return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__Media*>());
}
inline void GlobalNamespace::__OVRPlugin__Media::_ctor()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Media*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__set_uuidCapacityInput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__get_uuidCapacityInput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__get_uuidCapacityInput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__set_uuidCountOutput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__get_uuidCountOutput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__get_uuidCountOutput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__set_uuids(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__get_uuids()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__get_uuids() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "uuidCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "uuidCountOutput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "uuids", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceContainerInternal::__OVRPlugin__SpaceContainerInternal(int32_t  uuidCapacityInput, int32_t  uuidCountOutput, ::cordl_internals::intptr_t  uuids) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->uuidCapacityInput = uuidCapacityInput;
this->uuidCountOutput = uuidCountOutput;
this->uuids = uuids;
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__set_byteCapacityInput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__get_byteCapacityInput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__get_byteCapacityInput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__set_byteCountOutput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__get_byteCountOutput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__get_byteCountOutput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__set_labels(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__get_labels()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__get_labels() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "byteCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "byteCountOutput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "labels", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal::__OVRPlugin__SpaceSemanticLabelInternal(int32_t  byteCapacityInput, int32_t  byteCountOutput, ::cordl_internals::intptr_t  labels) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->byteCapacityInput = byteCapacityInput;
this->byteCountOutput = byteCountOutput;
this->labels = labels;
}
constexpr void GlobalNamespace::__OVRPlugin__RoomLayout::__set_floorUuid(::System::Guid  value)  {
::cordl_internals::setInstanceField<::System::Guid, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::System::Guid>(value));
}
constexpr ::System::Guid& GlobalNamespace::__OVRPlugin__RoomLayout::__get_floorUuid()  {
return ::cordl_internals::getInstanceField<::System::Guid, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::System::Guid const& GlobalNamespace::__OVRPlugin__RoomLayout::__get_floorUuid() const {
return ::cordl_internals::getInstanceField<::System::Guid, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RoomLayout::__set_ceilingUuid(::System::Guid  value)  {
::cordl_internals::setInstanceField<::System::Guid, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::System::Guid>(value));
}
constexpr ::System::Guid& GlobalNamespace::__OVRPlugin__RoomLayout::__get_ceilingUuid()  {
return ::cordl_internals::getInstanceField<::System::Guid, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::System::Guid const& GlobalNamespace::__OVRPlugin__RoomLayout::__get_ceilingUuid() const {
return ::cordl_internals::getInstanceField<::System::Guid, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RoomLayout::__set_wallUuids(::ArrayW<::System::Guid,::Array<::System::Guid>*>  value)  {
::cordl_internals::setInstanceField<::ArrayW<::System::Guid,::Array<::System::Guid>*>, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::ArrayW<::System::Guid,::Array<::System::Guid>*>>(value));
}
constexpr ::ArrayW<::System::Guid,::Array<::System::Guid>*>& GlobalNamespace::__OVRPlugin__RoomLayout::__get_wallUuids()  {
return ::cordl_internals::getInstanceField<::ArrayW<::System::Guid,::Array<::System::Guid>*>, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::ArrayW<::System::Guid,::Array<::System::Guid>*> const& GlobalNamespace::__OVRPlugin__RoomLayout::__get_wallUuids() const {
return ::cordl_internals::getInstanceField<::ArrayW<::System::Guid,::Array<::System::Guid>*>, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "floorUuid", ty: "::System::Guid", modifiers: "", def_value: Some("{}") }, CppParam { name: "ceilingUuid", ty: "::System::Guid", modifiers: "", def_value: Some("{}") }, CppParam { name: "wallUuids", ty: "::ArrayW<::System::Guid,::Array<::System::Guid>*>", modifiers: "", def_value: Some("csnull") }]
constexpr ::GlobalNamespace::__OVRPlugin__RoomLayout::__OVRPlugin__RoomLayout(::System::Guid  floorUuid, ::System::Guid  ceilingUuid, ::ArrayW<::System::Guid,::Array<::System::Guid>*>  wallUuids) noexcept : ::bs_hook::ValueTypeWrapper<0x28>() {this->floorUuid = floorUuid;
this->ceilingUuid = ceilingUuid;
this->wallUuids = wallUuids;
}
constexpr void GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__set_floorUuid(::System::Guid  value)  {
::cordl_internals::setInstanceField<::System::Guid, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::System::Guid>(value));
}
constexpr ::System::Guid& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_floorUuid()  {
return ::cordl_internals::getInstanceField<::System::Guid, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::System::Guid const& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_floorUuid() const {
return ::cordl_internals::getInstanceField<::System::Guid, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__set_ceilingUuid(::System::Guid  value)  {
::cordl_internals::setInstanceField<::System::Guid, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::System::Guid>(value));
}
constexpr ::System::Guid& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_ceilingUuid()  {
return ::cordl_internals::getInstanceField<::System::Guid, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::System::Guid const& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_ceilingUuid() const {
return ::cordl_internals::getInstanceField<::System::Guid, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__set_wallUuidCapacityInput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_wallUuidCapacityInput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_wallUuidCapacityInput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x20>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__set_wallUuidCountOutput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_wallUuidCountOutput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_wallUuidCountOutput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x24>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__set_wallUuids(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_wallUuids()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__get_wallUuids() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x28>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "floorUuid", ty: "::System::Guid", modifiers: "", def_value: Some("{}") }, CppParam { name: "ceilingUuid", ty: "::System::Guid", modifiers: "", def_value: Some("{}") }, CppParam { name: "wallUuidCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "wallUuidCountOutput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "wallUuids", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__RoomLayoutInternal::__OVRPlugin__RoomLayoutInternal(::System::Guid  floorUuid, ::System::Guid  ceilingUuid, int32_t  wallUuidCapacityInput, int32_t  wallUuidCountOutput, ::cordl_internals::intptr_t  wallUuids) noexcept : ::bs_hook::ValueTypeWrapper<0x30>() {this->floorUuid = floorUuid;
this->ceilingUuid = ceilingUuid;
this->wallUuidCapacityInput = wallUuidCapacityInput;
this->wallUuidCountOutput = wallUuidCountOutput;
this->wallUuids = wallUuids;
}
constexpr void GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__set_vertexCapacityInput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__get_vertexCapacityInput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__get_vertexCapacityInput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__set_vertexCountOutput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__get_vertexCountOutput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__get_vertexCountOutput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__set_vertices(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__get_vertices()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__get_vertices() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "vertexCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "vertexCountOutput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "vertices", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal::__OVRPlugin__PolygonalBoundary2DInternal(int32_t  vertexCapacityInput, int32_t  vertexCountOutput, ::cordl_internals::intptr_t  vertices) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->vertexCapacityInput = vertexCapacityInput;
this->vertexCountOutput = vertexCountOutput;
this->vertices = vertices;
}
constexpr void GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal::__set_requestByteCount(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal::__get_requestByteCount()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal::__get_requestByteCount() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal::__set_request(::StringW  value)  {
::cordl_internals::setInstanceField<::StringW, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::StringW>(value));
}
constexpr ::StringW& GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal::__get_request()  {
return ::cordl_internals::getInstanceField<::StringW, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::StringW const& GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal::__get_request() const {
return ::cordl_internals::getInstanceField<::StringW, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "requestByteCount", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "request", ty: "::StringW", modifiers: "", def_value: Some("csnull") }]
constexpr ::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal::__OVRPlugin__SceneCaptureRequestInternal(int32_t  requestByteCount, ::StringW  request) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->requestByteCount = requestByteCount;
this->request = request;
}
constexpr void GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__set_vertexCapacityInput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_vertexCapacityInput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_vertexCapacityInput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__set_vertexCountOutput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_vertexCountOutput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_vertexCountOutput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x4>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__set_vertices(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_vertices()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_vertices() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__set_indexCapacityInput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_indexCapacityInput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_indexCapacityInput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x10>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__set_indexCountOutput(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_indexCountOutput()  {
return ::cordl_internals::getInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_indexCountOutput() const {
return ::cordl_internals::getInstanceField<int32_t, 0x14>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__set_indices(::cordl_internals::intptr_t  value)  {
::cordl_internals::setInstanceField<::cordl_internals::intptr_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::cordl_internals::intptr_t>(value));
}
constexpr ::cordl_internals::intptr_t& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_indices()  {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::cordl_internals::intptr_t const& GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__get_indices() const {
return ::cordl_internals::getInstanceField<::cordl_internals::intptr_t, 0x18>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "vertexCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "vertexCountOutput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "vertices", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "indexCapacityInput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "indexCountOutput", ty: "int32_t", modifiers: "", def_value: Some("{}") }, CppParam { name: "indices", ty: "::cordl_internals::intptr_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__TriangleMeshInternal::__OVRPlugin__TriangleMeshInternal(int32_t  vertexCapacityInput, int32_t  vertexCountOutput, ::cordl_internals::intptr_t  vertices, int32_t  indexCapacityInput, int32_t  indexCountOutput, ::cordl_internals::intptr_t  indices) noexcept : ::bs_hook::ValueTypeWrapper<0x20>() {this->vertexCapacityInput = vertexCapacityInput;
this->vertexCountOutput = vertexCountOutput;
this->vertices = vertices;
this->indexCapacityInput = indexCapacityInput;
this->indexCountOutput = indexCountOutput;
this->indices = indices;
}
constexpr void GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields::__set_value__(int32_t  value)  {
::cordl_internals::setInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int32_t>(value));
}
constexpr int32_t& GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields::__get_value__()  {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int32_t const& GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields::__get_value__() const {
return ::cordl_internals::getInstanceField<int32_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields::__OVRPlugin__PassthroughPreferenceFields(int32_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x4>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields  GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields::Flags{static_cast<int32_t>(0x1)};
constexpr void GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags::__set_value__(int64_t  value)  {
::cordl_internals::setInstanceField<int64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int64_t>(value));
}
constexpr int64_t& GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags::__get_value__()  {
return ::cordl_internals::getInstanceField<int64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int64_t const& GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags::__get_value__() const {
return ::cordl_internals::getInstanceField<int64_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int64_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags::__OVRPlugin__PassthroughPreferenceFlags(int64_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x8>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags  GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags::DefaultToActive{static_cast<int64_t>(0x1)};
constexpr void GlobalNamespace::__OVRPlugin__PassthroughPreferences::__set_Fields(::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields& GlobalNamespace::__OVRPlugin__PassthroughPreferences::__get_Fields()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields const& GlobalNamespace::__OVRPlugin__PassthroughPreferences::__get_Fields() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr void GlobalNamespace::__OVRPlugin__PassthroughPreferences::__set_Flags(::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags  value)  {
::cordl_internals::setInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags>(value));
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags& GlobalNamespace::__OVRPlugin__PassthroughPreferences::__get_Flags()  {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags const& GlobalNamespace::__OVRPlugin__PassthroughPreferences::__get_Flags() const {
return ::cordl_internals::getInstanceField<::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags, 0x8>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "Fields", ty: "::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields", modifiers: "", def_value: Some("{}") }, CppParam { name: "Flags", ty: "::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PassthroughPreferences::__OVRPlugin__PassthroughPreferences(::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFields  Fields, ::GlobalNamespace::__OVRPlugin__PassthroughPreferenceFlags  Flags) noexcept : ::bs_hook::ValueTypeWrapper<0x10>() {this->Fields = Fields;
this->Flags = Flags;
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.LoadKtxFromMemory
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)(::cordl_internals::intptr_t, uint32_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::LoadKtxFromMemory)> {
  constexpr static std::size_t size = 0x174;
  constexpr static std::size_t addrs = 0x277011c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "LoadKtxFromMemory",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.GetKtxTextureWidth
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint32_t (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureWidth)> {
  constexpr static std::size_t size = 0x13c;
  constexpr static std::size_t addrs = 0x2770324;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "GetKtxTextureWidth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.GetKtxTextureHeight
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint32_t (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureHeight)> {
  constexpr static std::size_t size = 0x13c;
  constexpr static std::size_t addrs = 0x27704e4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "GetKtxTextureHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.TranscodeKtxTexture
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::cordl_internals::intptr_t, uint32_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::TranscodeKtxTexture)> {
  constexpr static std::size_t size = 0x13c;
  constexpr static std::size_t addrs = 0x27706a4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "TranscodeKtxTexture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.GetKtxTextureSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint32_t (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureSize)> {
  constexpr static std::size_t size = 0x13c;
  constexpr static std::size_t addrs = 0x2770864;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "GetKtxTextureSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.GetKtxTextureData
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::cordl_internals::intptr_t, ::cordl_internals::intptr_t, uint32_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureData)> {
  constexpr static std::size_t size = 0x144;
  constexpr static std::size_t addrs = 0x2770a24;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "GetKtxTextureData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx.DestroyKtxTexture
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__Ktx::DestroyKtxTexture)> {
  constexpr static std::size_t size = 0x12c;
  constexpr static std::size_t addrs = 0x2770bfc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "DestroyKtxTexture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Ktx._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__Ktx::*)()>(&::GlobalNamespace::__OVRPlugin__Ktx::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2770da4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__Ktx::LoadKtxFromMemory(::cordl_internals::intptr_t  dataPtr, uint32_t  length)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "LoadKtxFromMemory",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method, dataPtr, length);
}
inline uint32_t GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureWidth(::cordl_internals::intptr_t  texture)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "GetKtxTextureWidth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<uint32_t, false>(nullptr, ___internal_method, texture);
}
inline uint32_t GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureHeight(::cordl_internals::intptr_t  texture)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "GetKtxTextureHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<uint32_t, false>(nullptr, ___internal_method, texture);
}
inline bool GlobalNamespace::__OVRPlugin__Ktx::TranscodeKtxTexture(::cordl_internals::intptr_t  texture, uint32_t  format)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "TranscodeKtxTexture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, texture, format);
}
inline uint32_t GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureSize(::cordl_internals::intptr_t  texture)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "GetKtxTextureSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<uint32_t, false>(nullptr, ___internal_method, texture);
}
inline bool GlobalNamespace::__OVRPlugin__Ktx::GetKtxTextureData(::cordl_internals::intptr_t  texture, ::cordl_internals::intptr_t  textureData, uint32_t  bufferSize)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "GetKtxTextureData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, texture, textureData, bufferSize);
}
inline bool GlobalNamespace::__OVRPlugin__Ktx::DestroyKtxTexture(::cordl_internals::intptr_t  texture)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            "DestroyKtxTexture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, texture);
}
inline ::GlobalNamespace::__OVRPlugin__Ktx* GlobalNamespace::__OVRPlugin__Ktx::New_ctor()  {
return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__Ktx*>());
}
inline void GlobalNamespace::__OVRPlugin__Ktx::_ctor()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Ktx*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.SetClientVersion
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::SetClientVersion)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2770dac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "SetClientVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.HookGetInstanceProcAddr
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::HookGetInstanceProcAddr)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x2770f30;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "HookGetInstanceProcAddr",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnInstanceCreate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnInstanceCreate)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2771070;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnInstanceCreate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnInstanceDestroy
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnInstanceDestroy)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27711b4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnInstanceDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionCreate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionCreate)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27712f0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionCreate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnAppSpaceChange
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnAppSpaceChange)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x277142c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnAppSpaceChange",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionStateChange
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionStateChange)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2771568;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionStateChange",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionBegin
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionBegin)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27716c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionBegin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionEnd
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionEnd)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27717fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionEnd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionExiting
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionExiting)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2771938;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionExiting",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR.OnSessionDestroy
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionDestroy)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2771a74;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__UnityOpenXR._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__UnityOpenXR::*)()>(&::GlobalNamespace::__OVRPlugin__UnityOpenXR::_ctor)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2771bb0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::setStaticF_Enabled(bool  value)  {
::cordl_internals::setStaticField<bool, "Enabled", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get>(std::forward<bool>(value));
}
inline bool GlobalNamespace::__OVRPlugin__UnityOpenXR::getStaticF_Enabled()  {
return ::cordl_internals::getStaticField<bool, "Enabled", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::SetClientVersion()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "SetClientVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method);
}
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__UnityOpenXR::HookGetInstanceProcAddr(::cordl_internals::intptr_t  func)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "HookGetInstanceProcAddr",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method, func);
}
inline bool GlobalNamespace::__OVRPlugin__UnityOpenXR::OnInstanceCreate(uint64_t  xrInstance)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnInstanceCreate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, xrInstance);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnInstanceDestroy(uint64_t  xrInstance)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnInstanceDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrInstance);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionCreate(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionCreate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnAppSpaceChange(uint64_t  xrSpace)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnAppSpaceChange",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSpace);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionStateChange(int32_t  oldState, int32_t  newState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionStateChange",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, oldState, newState);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionBegin(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionBegin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionEnd(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionEnd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionExiting(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionExiting",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::OnSessionDestroy(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            "OnSessionDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline ::GlobalNamespace::__OVRPlugin__UnityOpenXR* GlobalNamespace::__OVRPlugin__UnityOpenXR::New_ctor()  {
return THROW_UNLESS(::il2cpp_utils::New<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>());
}
inline void GlobalNamespace::__OVRPlugin__UnityOpenXR::_ctor()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__UnityOpenXR*>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method);
}
constexpr void GlobalNamespace::__OVRPlugin__Qpl__ResultType::__set_value__(int16_t  value)  {
::cordl_internals::setInstanceField<int16_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<int16_t>(value));
}
constexpr int16_t& GlobalNamespace::__OVRPlugin__Qpl__ResultType::__get_value__()  {
return ::cordl_internals::getInstanceField<int16_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr int16_t const& GlobalNamespace::__OVRPlugin__Qpl__ResultType::__get_value__() const {
return ::cordl_internals::getInstanceField<int16_t, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
// Ctor Parameters [CppParam { name: "value__", ty: "int16_t", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__Qpl__ResultType::__OVRPlugin__Qpl__ResultType(int16_t  value__) noexcept : ::bs_hook::EnumTypeWrapper<0x2>() {this->value__ = value__;
}
constexpr ::GlobalNamespace::__OVRPlugin__Qpl__ResultType  GlobalNamespace::__OVRPlugin__Qpl__ResultType::Success{static_cast<int16_t>(0x2)};
constexpr ::GlobalNamespace::__OVRPlugin__Qpl__ResultType  GlobalNamespace::__OVRPlugin__Qpl__ResultType::Fail{static_cast<int16_t>(0x3)};
constexpr ::GlobalNamespace::__OVRPlugin__Qpl__ResultType  GlobalNamespace::__OVRPlugin__Qpl__ResultType::Cancel{static_cast<int16_t>(0x4)};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.MarkerStart
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t, int64_t)>(&::GlobalNamespace::__OVRPlugin__Qpl::MarkerStart)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2771bb8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "MarkerStart",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.MarkerEnd
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Qpl__ResultType, int32_t, int64_t)>(&::GlobalNamespace::__OVRPlugin__Qpl::MarkerEnd)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2771d28;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "MarkerEnd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Qpl__ResultType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.MarkerPointCached
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t, int32_t, int64_t)>(&::GlobalNamespace::__OVRPlugin__Qpl::MarkerPointCached)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2771eb4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "MarkerPointCached",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.MarkerAnnotation
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, ::StringW, ::StringW, int32_t)>(&::GlobalNamespace::__OVRPlugin__Qpl::MarkerAnnotation)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2772040;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "MarkerAnnotation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.CreateMarkerHandle
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__Qpl::CreateMarkerHandle)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x27721f8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "CreateMarkerHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__Qpl.DestroyMarkerHandle
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__Qpl::DestroyMarkerHandle)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2772370;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "DestroyMarkerHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
/// @param instanceKey: int32_t (default: static_cast<int32_t>(0x0))
/// @param timestampMs: int64_t (default: static_cast<int64_t>(0xffffffffffffffff))
inline void GlobalNamespace::__OVRPlugin__Qpl::MarkerStart(int32_t  markerId, int32_t  instanceKey, int64_t  timestampMs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "MarkerStart",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, markerId, instanceKey, timestampMs);
}
/// @param resultTypeId: ::GlobalNamespace::__OVRPlugin__Qpl__ResultType (default: static_cast<int16_t>(0x2))
/// @param instanceKey: int32_t (default: static_cast<int32_t>(0x0))
/// @param timestampMs: int64_t (default: static_cast<int64_t>(0xffffffffffffffff))
inline void GlobalNamespace::__OVRPlugin__Qpl::MarkerEnd(int32_t  markerId, ::GlobalNamespace::__OVRPlugin__Qpl__ResultType  resultTypeId, int32_t  instanceKey, int64_t  timestampMs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "MarkerEnd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Qpl__ResultType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, markerId, resultTypeId, instanceKey, timestampMs);
}
/// @param instanceKey: int32_t (default: static_cast<int32_t>(0x0))
/// @param timestampMs: int64_t (default: static_cast<int64_t>(0xffffffffffffffff))
inline void GlobalNamespace::__OVRPlugin__Qpl::MarkerPointCached(int32_t  markerId, int32_t  nameHandle, int32_t  instanceKey, int64_t  timestampMs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "MarkerPointCached",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, markerId, nameHandle, instanceKey, timestampMs);
}
/// @param instanceKey: int32_t (default: static_cast<int32_t>(0x0))
inline void GlobalNamespace::__OVRPlugin__Qpl::MarkerAnnotation(int32_t  markerId, ::StringW  annotationKey, ::StringW  annotationValue, int32_t  instanceKey)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "MarkerAnnotation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, markerId, annotationKey, annotationValue, instanceKey);
}
inline bool GlobalNamespace::__OVRPlugin__Qpl::CreateMarkerHandle(::StringW  name, ByRef<int32_t>  nameHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "CreateMarkerHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, name, nameHandle);
}
inline bool GlobalNamespace::__OVRPlugin__Qpl::DestroyMarkerHandle(int32_t  nameHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__Qpl*>::get(),
                            "DestroyMarkerHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nameHandle);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_0.ovrp_GetEyeTextureSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Sizei (*)(::GlobalNamespace::__OVRPlugin__Eye)>(&::GlobalNamespace::__OVRPlugin__OVRP_0_1_0::ovrp_GetEyeTextureSize)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27724b4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_0*>::get(),
                            "ovrp_GetEyeTextureSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_0_1_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_1_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Sizei GlobalNamespace::__OVRPlugin__OVRP_0_1_0::ovrp_GetEyeTextureSize(::GlobalNamespace::__OVRPlugin__Eye  eyeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_0*>::get(),
                            "ovrp_GetEyeTextureSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Sizei, false>(nullptr, ___internal_method, eyeId);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_1.ovrp_SetOverlayQuad2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool, ::GlobalNamespace::__OVRPlugin__Bool, ::cordl_internals::intptr_t, ::cordl_internals::intptr_t, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Vector3f)>(&::GlobalNamespace::__OVRPlugin__OVRP_0_1_1::ovrp_SetOverlayQuad2)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x27725b4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_1*>::get(),
                            "ovrp_SetOverlayQuad2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_0_1_1::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_1*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_1_1::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_1*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_0_1_1::ovrp_SetOverlayQuad2(::GlobalNamespace::__OVRPlugin__Bool  onTop, ::GlobalNamespace::__OVRPlugin__Bool  headLocked, ::cordl_internals::intptr_t  texture, ::cordl_internals::intptr_t  device, ::GlobalNamespace::__OVRPlugin__Posef  pose, ::GlobalNamespace::__OVRPlugin__Vector3f  scale)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_1*>::get(),
                            "ovrp_SetOverlayQuad2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, onTop, headLocked, texture, device, pose, scale);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_2.ovrp_GetNodePose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_0_1_2::ovrp_GetNodePose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277271c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get(),
                            "ovrp_GetNodePose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_2.ovrp_SetControllerVibration
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(uint32_t, float_t, float_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_0_1_2::ovrp_SetControllerVibration)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27727a0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get(),
                            "ovrp_SetControllerVibration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_0_1_2::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_1_2::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_0_1_2::ovrp_GetNodePose(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get(),
                            "ovrp_GetNodePose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_0_1_2::ovrp_SetControllerVibration(uint32_t  controllerMask, float_t  frequency, float_t  amplitude)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_2*>::get(),
                            "ovrp_SetControllerVibration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, controllerMask, frequency, amplitude);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_3.ovrp_GetNodeVelocity
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_0_1_3::ovrp_GetNodeVelocity)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27728b8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get(),
                            "ovrp_GetNodeVelocity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_0_1_3.ovrp_GetNodeAcceleration
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_0_1_3::ovrp_GetNodeAcceleration)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277293c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get(),
                            "ovrp_GetNodeAcceleration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_0_1_3::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_1_3::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_0_1_3::ovrp_GetNodeVelocity(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get(),
                            "ovrp_GetNodeVelocity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_0_1_3::ovrp_GetNodeAcceleration(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_1_3*>::get(),
                            "ovrp_GetNodeAcceleration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, nodeId);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_0_5_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_5_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_0_5_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_0_5_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_0_0.ovrp_GetTrackingOriginType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__TrackingOrigin (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_GetTrackingOriginType)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772ac8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                            "ovrp_GetTrackingOriginType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_0_0.ovrp_SetTrackingOriginType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_SetTrackingOriginType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2772b30;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                            "ovrp_SetTrackingOriginType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_0_0.ovrp_GetTrackingCalibratedOrigin
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin)> {
  constexpr static std::size_t size = 0x74;
  constexpr static std::size_t addrs = 0x2772bac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                            "ovrp_GetTrackingCalibratedOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_0_0.ovrp_RecenterTrackingOrigin
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(uint32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_RecenterTrackingOrigin)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2772c20;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                            "ovrp_RecenterTrackingOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_0_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_0_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__TrackingOrigin GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_GetTrackingOriginType()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                            "ovrp_GetTrackingOriginType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__TrackingOrigin, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_SetTrackingOriginType(::GlobalNamespace::__OVRPlugin__TrackingOrigin  originType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                            "ovrp_SetTrackingOriginType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, originType);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                            "ovrp_GetTrackingCalibratedOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_0_0::ovrp_RecenterTrackingOrigin(uint32_t  flags)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_0_0*>::get(),
                            "ovrp_RecenterTrackingOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, flags);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetInitialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetInitialized)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772d20;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0._ovrp_GetVersion
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetVersion)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772d88;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "_ovrp_GetVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetVersion
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetVersion)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2772df0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0._ovrp_GetNativeSDKVersion
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetNativeSDKVersion)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772e74;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "_ovrp_GetNativeSDKVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNativeSDKVersion
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNativeSDKVersion)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2772edc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNativeSDKVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAudioOutId
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAudioOutId)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772f60;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAudioOutId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAudioInId
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAudioInId)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2772fc8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAudioInId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetEyeTextureScale
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetEyeTextureScale)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2773030;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetEyeTextureScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetEyeTextureScale
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(float_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetEyeTextureScale)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773094;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetEyeTextureScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetTrackingOrientationSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingOrientationSupported)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773110;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetTrackingOrientationSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetTrackingOrientationEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingOrientationEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773178;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetTrackingOrientationEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetTrackingOrientationEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetTrackingOrientationEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27731e0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetTrackingOrientationEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetTrackingPositionSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingPositionSupported)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277325c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetTrackingPositionSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetTrackingPositionEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingPositionEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27732c4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetTrackingPositionEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetTrackingPositionEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetTrackingPositionEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277332c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetTrackingPositionEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNodePresent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodePresent)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27733a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNodePresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNodeOrientationTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodeOrientationTracked)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773424;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNodeOrientationTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNodePositionTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodePositionTracked)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27734a0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNodePositionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetNodeFrustum
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Frustumf (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodeFrustum)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277351c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNodeFrustum",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetControllerState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState (*)(uint32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetControllerState)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2773598;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetControllerState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemCpuLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemCpuLevel)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277361c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemCpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetSystemCpuLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetSystemCpuLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773684;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetSystemCpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemGpuLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemGpuLevel)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773700;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemGpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetSystemGpuLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetSystemGpuLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773768;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetSystemGpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemPowerSavingMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemPowerSavingMode)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27737e4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemPowerSavingMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemDisplayFrequency
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemDisplayFrequency)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x277384c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemDisplayFrequency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemVSyncCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemVSyncCount)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27738b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemVSyncCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemVolume
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemVolume)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2773918;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemVolume",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemBatteryStatus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BatteryStatus (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryStatus)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277397c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemBatteryStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemBatteryLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryLevel)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27739e4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemBatteryLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemBatteryTemperature
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryTemperature)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2773a48;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemBatteryTemperature",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0._ovrp_GetSystemProductName
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetSystemProductName)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773aac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "_ovrp_GetSystemProductName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetSystemProductName
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemProductName)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2773b14;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemProductName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_ShowSystemUI
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__PlatformUI)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_ShowSystemUI)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773b98;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_ShowSystemUI",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PlatformUI>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppMonoscopic
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppMonoscopic)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773c14;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppMonoscopic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetAppMonoscopic
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetAppMonoscopic)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773c7c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetAppMonoscopic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppHasVrFocus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppHasVrFocus)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773cf8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppHasVrFocus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppShouldQuit
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppShouldQuit)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773d60;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppShouldQuit",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppShouldRecenter
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppShouldRecenter)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773dc8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppShouldRecenter",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0._ovrp_GetAppLatencyTimings
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetAppLatencyTimings)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773e30;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "_ovrp_GetAppLatencyTimings",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetAppLatencyTimings
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppLatencyTimings)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2773e98;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppLatencyTimings",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetUserPresent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserPresent)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2773f1c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetUserPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetUserIPD
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserIPD)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2773f84;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetUserIPD",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetUserIPD
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(float_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserIPD)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2773fe8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetUserIPD",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetUserEyeDepth
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserEyeDepth)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2774064;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetUserEyeDepth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetUserEyeDepth
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(float_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserEyeDepth)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27740c8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetUserEyeDepth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_GetUserEyeHeight
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserEyeHeight)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2774144;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetUserEyeHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_1_0.ovrp_SetUserEyeHeight
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(float_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserEyeHeight)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27741a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetUserEyeHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_1_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_1_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetInitialized()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetVersion()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "_ovrp_GetVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetVersion()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetNativeSDKVersion()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "_ovrp_GetNativeSDKVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNativeSDKVersion()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNativeSDKVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAudioOutId()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAudioOutId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method);
}
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAudioInId()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAudioInId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetEyeTextureScale()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetEyeTextureScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetEyeTextureScale(float_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetEyeTextureScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingOrientationSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetTrackingOrientationSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingOrientationEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetTrackingOrientationEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetTrackingOrientationEnabled(::GlobalNamespace::__OVRPlugin__Bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetTrackingOrientationEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingPositionSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetTrackingPositionSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetTrackingPositionEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetTrackingPositionEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetTrackingPositionEnabled(::GlobalNamespace::__OVRPlugin__Bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetTrackingPositionEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodePresent(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNodePresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodeOrientationTracked(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNodeOrientationTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodePositionTracked(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNodePositionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Frustumf GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetNodeFrustum(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetNodeFrustum",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Frustumf, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetControllerState(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetControllerState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState, false>(nullptr, ___internal_method, controllerMask);
}
inline int32_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemCpuLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemCpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetSystemCpuLevel(int32_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetSystemCpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline int32_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemGpuLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemGpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetSystemGpuLevel(int32_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetSystemGpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemPowerSavingMode()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemPowerSavingMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemDisplayFrequency()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemDisplayFrequency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemVSyncCount()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemVSyncCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemVolume()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemVolume",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__BatteryStatus GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryStatus()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemBatteryStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BatteryStatus, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemBatteryLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemBatteryTemperature()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemBatteryTemperature",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetSystemProductName()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "_ovrp_GetSystemProductName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetSystemProductName()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetSystemProductName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_ShowSystemUI(::GlobalNamespace::__OVRPlugin__PlatformUI  ui)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_ShowSystemUI",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PlatformUI>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, ui);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppMonoscopic()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppMonoscopic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetAppMonoscopic(::GlobalNamespace::__OVRPlugin__Bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetAppMonoscopic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppHasVrFocus()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppHasVrFocus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppShouldQuit()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppShouldQuit",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppShouldRecenter()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppShouldRecenter",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::_ovrp_GetAppLatencyTimings()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "_ovrp_GetAppLatencyTimings",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetAppLatencyTimings()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetAppLatencyTimings",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserPresent()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetUserPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserIPD()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetUserIPD",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserIPD(float_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetUserIPD",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserEyeDepth()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetUserEyeDepth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserEyeDepth(float_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetUserEyeDepth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_GetUserEyeHeight()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_GetUserEyeHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_1_0::ovrp_SetUserEyeHeight(float_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_1_0*>::get(),
                            "ovrp_SetUserEyeHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_2_0.ovrp_SetSystemVSyncCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_2_0::ovrp_SetSystemVSyncCount)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27742a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get(),
                            "ovrp_SetSystemVSyncCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_2_0.ovrpi_SetTrackingCalibratedOrigin
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_2_0::ovrpi_SetTrackingCalibratedOrigin)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774324;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get(),
                            "ovrpi_SetTrackingCalibratedOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_2_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_2_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_2_0::ovrp_SetSystemVSyncCount(int32_t  vsyncCount)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get(),
                            "ovrp_SetSystemVSyncCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, vsyncCount);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_2_0::ovrpi_SetTrackingCalibratedOrigin()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_2_0*>::get(),
                            "ovrpi_SetTrackingCalibratedOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_3_0.ovrp_GetEyeOcclusionMeshEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_GetEyeOcclusionMeshEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774410;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                            "ovrp_GetEyeOcclusionMeshEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_3_0.ovrp_SetEyeOcclusionMeshEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_SetEyeOcclusionMeshEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774478;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                            "ovrp_SetEyeOcclusionMeshEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_3_0.ovrp_GetSystemHeadphonesPresent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_GetSystemHeadphonesPresent)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27744f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                            "ovrp_GetSystemHeadphonesPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_3_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_3_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_GetEyeOcclusionMeshEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                            "ovrp_GetEyeOcclusionMeshEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_SetEyeOcclusionMeshEnabled(::GlobalNamespace::__OVRPlugin__Bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                            "ovrp_SetEyeOcclusionMeshEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_3_0::ovrp_GetSystemHeadphonesPresent()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_3_0*>::get(),
                            "ovrp_GetSystemHeadphonesPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_5_0.ovrp_GetSystemRegion
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__SystemRegion (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_5_0::ovrp_GetSystemRegion)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27745e0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_5_0*>::get(),
                            "ovrp_GetSystemRegion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_5_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_5_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_5_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_5_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__SystemRegion GlobalNamespace::__OVRPlugin__OVRP_1_5_0::ovrp_GetSystemRegion()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_5_0*>::get(),
                            "ovrp_GetSystemRegion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__SystemRegion, false>(nullptr, ___internal_method);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetTrackingIPDEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetTrackingIPDEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27746cc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetTrackingIPDEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_SetTrackingIPDEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetTrackingIPDEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774734;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_SetTrackingIPDEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetControllerHapticsDesc
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__HapticsDesc (*)(uint32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetControllerHapticsDesc)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27747b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetControllerHapticsDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetControllerHapticsState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__HapticsState (*)(uint32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetControllerHapticsState)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774834;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetControllerHapticsState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_SetControllerHaptics
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(uint32_t, ::GlobalNamespace::__OVRPlugin__HapticsBuffer)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetControllerHaptics)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27748b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_SetControllerHaptics",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsBuffer>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_SetOverlayQuad3
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(uint32_t, ::cordl_internals::intptr_t, ::cordl_internals::intptr_t, ::cordl_internals::intptr_t, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Vector3f, int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetOverlayQuad3)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x2774944;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_SetOverlayQuad3",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetEyeRecommendedResolutionScale
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetEyeRecommendedResolutionScale)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2774a30;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetEyeRecommendedResolutionScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetAppCpuStartToGpuEndTime
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetAppCpuStartToGpuEndTime)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2774a94;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetAppCpuStartToGpuEndTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_6_0.ovrp_GetSystemRecommendedMSAALevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetSystemRecommendedMSAALevel)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774af8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetSystemRecommendedMSAALevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_6_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_6_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetTrackingIPDEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetTrackingIPDEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetTrackingIPDEnabled(::GlobalNamespace::__OVRPlugin__Bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_SetTrackingIPDEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__HapticsDesc GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetControllerHapticsDesc(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetControllerHapticsDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__HapticsDesc, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__HapticsState GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetControllerHapticsState(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetControllerHapticsState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__HapticsState, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetControllerHaptics(uint32_t  controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsBuffer  hapticsBuffer)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_SetControllerHaptics",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsBuffer>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, controllerMask, hapticsBuffer);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_SetOverlayQuad3(uint32_t  flags, ::cordl_internals::intptr_t  textureLeft, ::cordl_internals::intptr_t  textureRight, ::cordl_internals::intptr_t  device, ::GlobalNamespace::__OVRPlugin__Posef  pose, ::GlobalNamespace::__OVRPlugin__Vector3f  scale, int32_t  layerIndex)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_SetOverlayQuad3",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, flags, textureLeft, textureRight, device, pose, scale, layerIndex);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetEyeRecommendedResolutionScale()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetEyeRecommendedResolutionScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetAppCpuStartToGpuEndTime()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetAppCpuStartToGpuEndTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::__OVRPlugin__OVRP_1_6_0::ovrp_GetSystemRecommendedMSAALevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_6_0*>::get(),
                            "ovrp_GetSystemRecommendedMSAALevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_7_0.ovrp_GetAppChromaticCorrection
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_7_0::ovrp_GetAppChromaticCorrection)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774be4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get(),
                            "ovrp_GetAppChromaticCorrection",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_7_0.ovrp_SetAppChromaticCorrection
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_7_0::ovrp_SetAppChromaticCorrection)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774c4c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get(),
                            "ovrp_SetAppChromaticCorrection",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_7_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_7_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_7_0::ovrp_GetAppChromaticCorrection()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get(),
                            "ovrp_GetAppChromaticCorrection",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_7_0::ovrp_SetAppChromaticCorrection(::GlobalNamespace::__OVRPlugin__Bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_7_0*>::get(),
                            "ovrp_SetAppChromaticCorrection",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetBoundaryConfigured
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryConfigured)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2774d4c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetBoundaryConfigured",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_TestBoundaryNode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryTestResult (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_TestBoundaryNode)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2774db4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_TestBoundaryNode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_TestBoundaryPoint
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryTestResult (*)(::GlobalNamespace::__OVRPlugin__Vector3f, ::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_TestBoundaryPoint)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x2774e48;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_TestBoundaryPoint",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetBoundaryGeometry
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryGeometry (*)(::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryGeometry)> {
  constexpr static std::size_t size = 0xa0;
  constexpr static std::size_t addrs = 0x2774ef4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetBoundaryGeometry",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetBoundaryDimensions
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryDimensions)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2774f94;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetBoundaryDimensions",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetBoundaryVisible
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryVisible)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775010;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetBoundaryVisible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_SetBoundaryVisible
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_SetBoundaryVisible)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2775078;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_SetBoundaryVisible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_Update2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(int32_t, int32_t, double_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_Update2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27750f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_Update2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetNodePose2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodePose2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2775188;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetNodePose2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetNodeVelocity2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodeVelocity2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277521c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetNodeVelocity2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_8_0.ovrp_GetNodeAcceleration2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodeAcceleration2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27752b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetNodeAcceleration2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_8_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_8_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryConfigured()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetBoundaryConfigured",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryTestResult GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_TestBoundaryNode(::GlobalNamespace::__OVRPlugin__Node  nodeId, ::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_TestBoundaryNode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryTestResult, false>(nullptr, ___internal_method, nodeId, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryTestResult GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_TestBoundaryPoint(::GlobalNamespace::__OVRPlugin__Vector3f  point, ::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_TestBoundaryPoint",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryTestResult, false>(nullptr, ___internal_method, point, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryGeometry GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryGeometry(::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetBoundaryGeometry",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryGeometry, false>(nullptr, ___internal_method, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryDimensions(::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetBoundaryDimensions",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetBoundaryVisible()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetBoundaryVisible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_SetBoundaryVisible(::GlobalNamespace::__OVRPlugin__Bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_SetBoundaryVisible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_Update2(int32_t  stateId, int32_t  frameIndex, double_t  predictionSeconds)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_Update2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, stateId, frameIndex, predictionSeconds);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodePose2(int32_t  stateId, ::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetNodePose2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, stateId, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodeVelocity2(int32_t  stateId, ::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetNodeVelocity2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, stateId, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::__OVRPlugin__OVRP_1_8_0::ovrp_GetNodeAcceleration2(int32_t  stateId, ::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_8_0*>::get(),
                            "ovrp_GetNodeAcceleration2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, stateId, nodeId);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetSystemHeadsetType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__SystemHeadset (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetSystemHeadsetType)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x27753c8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetSystemHeadsetType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetActiveController
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Controller (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetActiveController)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775430;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetActiveController",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetConnectedControllers
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Controller (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetConnectedControllers)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775498;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetConnectedControllers",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetBoundaryGeometry2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__BoundaryType, ::cordl_internals::intptr_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetBoundaryGeometry2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2775500;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetBoundaryGeometry2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_GetAppPerfStats
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__AppPerfStats (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetAppPerfStats)> {
  constexpr static std::size_t size = 0x88;
  constexpr static std::size_t addrs = 0x2775594;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetAppPerfStats",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_9_0.ovrp_ResetAppPerfStats
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_ResetAppPerfStats)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277561c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_ResetAppPerfStats",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_9_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_9_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetSystemHeadsetType()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetSystemHeadsetType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__SystemHeadset, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetActiveController()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetActiveController",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Controller, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetConnectedControllers()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetConnectedControllers",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Controller, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetBoundaryGeometry2(::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType, ::cordl_internals::intptr_t  points, ByRef<int32_t>  pointsCount)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetBoundaryGeometry2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, boundaryType, points, pointsCount);
}
inline ::GlobalNamespace::__OVRPlugin__AppPerfStats GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_GetAppPerfStats()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_GetAppPerfStats",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__AppPerfStats, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_9_0::ovrp_ResetAppPerfStats()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_9_0*>::get(),
                            "ovrp_ResetAppPerfStats",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_10_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_10_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_10_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_10_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_11_0.ovrp_SetDesiredEyeTextureFormat
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__EyeTextureFormat)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_11_0::ovrp_SetDesiredEyeTextureFormat)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277578c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get(),
                            "ovrp_SetDesiredEyeTextureFormat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_11_0.ovrp_GetDesiredEyeTextureFormat
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__EyeTextureFormat (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_11_0::ovrp_GetDesiredEyeTextureFormat)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775808;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get(),
                            "ovrp_GetDesiredEyeTextureFormat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_11_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_11_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_11_0::ovrp_SetDesiredEyeTextureFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get(),
                            "ovrp_SetDesiredEyeTextureFormat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::__OVRPlugin__OVRP_1_11_0::ovrp_GetDesiredEyeTextureFormat()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_11_0*>::get(),
                            "ovrp_GetDesiredEyeTextureFormat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, false>(nullptr, ___internal_method);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_12_0.ovrp_GetAppFramerate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetAppFramerate)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27758f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(),
                            "ovrp_GetAppFramerate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_12_0.ovrp_GetNodePoseState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__PoseStatef (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetNodePoseState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2775958;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(),
                            "ovrp_GetNodePoseState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_12_0.ovrp_GetControllerState2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState2 (*)(uint32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetControllerState2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27759ec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(),
                            "ovrp_GetControllerState2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_12_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_12_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get>();
}
inline float_t GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetAppFramerate()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(),
                            "ovrp_GetAppFramerate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetNodePoseState(::GlobalNamespace::__OVRPlugin__Step  stepId, ::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(),
                            "ovrp_GetNodePoseState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PoseStatef, false>(nullptr, ___internal_method, stepId, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState2 GlobalNamespace::__OVRPlugin__OVRP_1_12_0::ovrp_GetControllerState2(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_12_0*>::get(),
                            "ovrp_GetControllerState2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState2, false>(nullptr, ___internal_method, controllerMask);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_InitializeMixedReality
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_InitializeMixedReality)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775af4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_InitializeMixedReality",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_ShutdownMixedReality
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_ShutdownMixedReality)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775b5c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_ShutdownMixedReality",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetMixedRealityInitialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetMixedRealityInitialized)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775bc4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetMixedRealityInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_UpdateExternalCamera
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_UpdateExternalCamera)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2775c2c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_UpdateExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetExternalCameraCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraCount)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2775c94;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetExternalCameraCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetExternalCameraName
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::ArrayW<char16_t,::Array<char16_t>*>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraName)> {
  constexpr static std::size_t size = 0x110;
  constexpr static std::size_t addrs = 0x2775d10;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetExternalCameraName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<char16_t,::Array<char16_t>*>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetExternalCameraIntrinsics
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2775e20;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetExternalCameraIntrinsics",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetExternalCameraExtrinsics
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2775ea4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetExternalCameraExtrinsics",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_CalculateLayerDesc
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__OverlayShape, ::GlobalNamespace::__OVRPlugin__LayerLayout, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>, int32_t, int32_t, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_CalculateLayerDesc)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x2775f28;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_CalculateLayerDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerLayout>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_EnqueueSetupLayer
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>, ::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueSetupLayer)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2775ff4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_EnqueueSetupLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_EnqueueDestroyLayer
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueDestroyLayer)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776078;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_EnqueueDestroyLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetLayerTextureStageCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetLayerTextureStageCount)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27760f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetLayerTextureStageCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetLayerTexturePtr
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, int32_t, ::GlobalNamespace::__OVRPlugin__Eye, ByRef<::cordl_internals::intptr_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetLayerTexturePtr)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x2776178;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetLayerTexturePtr",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_EnqueueSubmitLayer
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, ::cordl_internals::intptr_t, ::cordl_internals::intptr_t, int32_t, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Posef>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>, int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueSubmitLayer)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x2776214;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_EnqueueSubmitLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetNodeFrustum2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetNodeFrustum2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27762e0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetNodeFrustum2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_15_0.ovrp_GetEyeTextureArrayEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2776364;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetEyeTextureArrayEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_15_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_15_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_InitializeMixedReality()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_InitializeMixedReality",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_ShutdownMixedReality()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_ShutdownMixedReality",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetMixedRealityInitialized()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetMixedRealityInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_UpdateExternalCamera()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_UpdateExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraCount(ByRef<int32_t>  cameraCount)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetExternalCameraCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraCount);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraName(int32_t  cameraId, ::ArrayW<char16_t,::Array<char16_t>*>  cameraName)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetExternalCameraName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<char16_t,::Array<char16_t>*>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, cameraName);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics(int32_t  cameraId, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>  cameraIntrinsics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetExternalCameraIntrinsics",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, cameraIntrinsics);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics(int32_t  cameraId, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>  cameraExtrinsics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetExternalCameraExtrinsics",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, cameraExtrinsics);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_CalculateLayerDesc(::GlobalNamespace::__OVRPlugin__OverlayShape  shape, ::GlobalNamespace::__OVRPlugin__LayerLayout  layout, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>  textureSize, int32_t  mipLevels, int32_t  sampleCount, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  format, int32_t  layerFlags, ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>  layerDesc)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_CalculateLayerDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerLayout>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags, layerDesc);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueSetupLayer(ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>  desc, ::cordl_internals::intptr_t  layerId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_EnqueueSetupLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, desc, layerId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueDestroyLayer(::cordl_internals::intptr_t  layerId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_EnqueueDestroyLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetLayerTextureStageCount(int32_t  layerId, ByRef<int32_t>  layerTextureStageCount)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetLayerTextureStageCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, layerTextureStageCount);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetLayerTexturePtr(int32_t  layerId, int32_t  stage, ::GlobalNamespace::__OVRPlugin__Eye  eyeId, ByRef<::cordl_internals::intptr_t>  textureHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetLayerTexturePtr",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, stage, eyeId, textureHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_EnqueueSubmitLayer(uint32_t  flags, ::cordl_internals::intptr_t  textureLeft, ::cordl_internals::intptr_t  textureRight, int32_t  layerId, int32_t  frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__Posef>  pose, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>  scale, int32_t  layerIndex)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_EnqueueSubmitLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetNodeFrustum2(::GlobalNamespace::__OVRPlugin__Node  nodeId, ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>  nodeFrustum)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetNodeFrustum2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nodeId, nodeFrustum);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_15_0*>::get(),
                            "ovrp_GetEyeTextureArrayEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_UpdateCameraDevices
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_UpdateCameraDevices)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2776450;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_UpdateCameraDevices",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_IsCameraDeviceAvailable
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_IsCameraDeviceAvailable)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27764b8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_IsCameraDeviceAvailable",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_SetCameraDevicePreferredColorFrameSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__CameraDevice, ::GlobalNamespace::__OVRPlugin__Sizei)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_SetCameraDevicePreferredColorFrameSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2776534;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_SetCameraDevicePreferredColorFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_OpenCameraDevice
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_OpenCameraDevice)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27765b8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_OpenCameraDevice",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_CloseCameraDevice
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_CloseCameraDevice)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776634;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_CloseCameraDevice",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_HasCameraDeviceOpened
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_HasCameraDeviceOpened)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27766b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_HasCameraDeviceOpened",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_IsCameraDeviceColorFrameAvailable
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(::GlobalNamespace::__OVRPlugin__CameraDevice)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_IsCameraDeviceColorFrameAvailable)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277672c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_IsCameraDeviceColorFrameAvailable",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_GetCameraDeviceColorFrameSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__CameraDevice, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27767a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_GetCameraDeviceColorFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_GetCameraDeviceColorFrameBgraPixels
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__CameraDevice, ByRef<::cordl_internals::intptr_t>, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameBgraPixels)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277682c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_GetCameraDeviceColorFrameBgraPixels",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_16_0.ovrp_GetControllerState4
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, ByRef<::GlobalNamespace::__OVRPlugin__ControllerState4>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetControllerState4)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27768c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_GetControllerState4",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState4>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_16_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_16_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_UpdateCameraDevices()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_UpdateCameraDevices",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_IsCameraDeviceAvailable(::GlobalNamespace::__OVRPlugin__CameraDevice  cameraDevice)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_IsCameraDeviceAvailable",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_SetCameraDevicePreferredColorFrameSize(::GlobalNamespace::__OVRPlugin__CameraDevice  cameraDevice, ::GlobalNamespace::__OVRPlugin__Sizei  preferredColorFrameSize)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_SetCameraDevicePreferredColorFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice, preferredColorFrameSize);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_OpenCameraDevice(::GlobalNamespace::__OVRPlugin__CameraDevice  cameraDevice)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_OpenCameraDevice",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_CloseCameraDevice(::GlobalNamespace::__OVRPlugin__CameraDevice  cameraDevice)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_CloseCameraDevice",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_HasCameraDeviceOpened(::GlobalNamespace::__OVRPlugin__CameraDevice  cameraDevice)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_HasCameraDeviceOpened",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_IsCameraDeviceColorFrameAvailable(::GlobalNamespace::__OVRPlugin__CameraDevice  cameraDevice)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_IsCameraDeviceColorFrameAvailable",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, cameraDevice);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameSize(::GlobalNamespace::__OVRPlugin__CameraDevice  cameraDevice, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>  colorFrameSize)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_GetCameraDeviceColorFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice, colorFrameSize);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameBgraPixels(::GlobalNamespace::__OVRPlugin__CameraDevice  cameraDevice, ByRef<::cordl_internals::intptr_t>  colorFrameBgraPixels, ByRef<int32_t>  colorFrameRowPitch)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_GetCameraDeviceColorFrameBgraPixels",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__CameraDevice>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraDevice, colorFrameBgraPixels, colorFrameRowPitch);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_16_0::ovrp_GetControllerState4(uint32_t  controllerMask, ByRef<::GlobalNamespace::__OVRPlugin__ControllerState4>  controllerState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_16_0*>::get(),
                            "ovrp_GetControllerState4",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState4>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, controllerState);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_17_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_17_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_17_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_17_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_18_0.ovrp_SetHandNodePoseStateLatency
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(double_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_SetHandNodePoseStateLatency)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776a4c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(),
                            "ovrp_SetHandNodePoseStateLatency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_18_0.ovrp_GetHandNodePoseStateLatency
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<double_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_GetHandNodePoseStateLatency)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776ac8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(),
                            "ovrp_GetHandNodePoseStateLatency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_18_0.ovrp_GetAppHasInputFocus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_GetAppHasInputFocus)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776b44;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(),
                            "ovrp_GetAppHasInputFocus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_18_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_18_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_SetHandNodePoseStateLatency(double_t  latencyInSeconds)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(),
                            "ovrp_SetHandNodePoseStateLatency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, latencyInSeconds);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_GetHandNodePoseStateLatency(ByRef<double_t>  latencyInSeconds)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(),
                            "ovrp_GetHandNodePoseStateLatency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, latencyInSeconds);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_18_0::ovrp_GetAppHasInputFocus(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  appHasInputFocus)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_18_0*>::get(),
                            "ovrp_GetAppHasInputFocus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, appHasInputFocus);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_19_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_19_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_19_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_19_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetTiledMultiResSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetTiledMultiResSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776cc8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetTiledMultiResSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetTiledMultiResLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetTiledMultiResLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776d44;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetTiledMultiResLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_SetTiledMultiResLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_SetTiledMultiResLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776dc0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_SetTiledMultiResLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetGPUUtilSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetGPUUtilSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776e3c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetGPUUtilSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetGPUUtilLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetGPUUtilLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776eb8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetGPUUtilLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetSystemDisplayFrequency2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetSystemDisplayFrequency2)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2776f34;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetSystemDisplayFrequency2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetSystemDisplayAvailableFrequencies
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetSystemDisplayAvailableFrequencies)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2776fb0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetSystemDisplayAvailableFrequencies",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_SetSystemDisplayFrequency
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(float_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_SetSystemDisplayFrequency)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2777034;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_SetSystemDisplayFrequency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_21_0.ovrp_GetAppAsymmetricFov
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetAppAsymmetricFov)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27770b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetAppAsymmetricFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_21_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_21_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetTiledMultiResSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  foveationSupported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetTiledMultiResSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, foveationSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetTiledMultiResLevel(ByRef<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>  level)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetTiledMultiResLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, level);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_SetTiledMultiResLevel(::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel  level)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_SetTiledMultiResLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, level);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetGPUUtilSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  gpuUtilSupported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetGPUUtilSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, gpuUtilSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetGPUUtilLevel(ByRef<float_t>  gpuUtil)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetGPUUtilLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, gpuUtil);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetSystemDisplayFrequency2(ByRef<float_t>  systemDisplayFrequency)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetSystemDisplayFrequency2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, systemDisplayFrequency);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetSystemDisplayAvailableFrequencies(::cordl_internals::intptr_t  systemDisplayAvailableFrequencies, ByRef<int32_t>  numFrequencies)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetSystemDisplayAvailableFrequencies",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, systemDisplayAvailableFrequencies, numFrequencies);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_SetSystemDisplayFrequency(float_t  requestedFrequency)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_SetSystemDisplayFrequency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, requestedFrequency);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_21_0::ovrp_GetAppAsymmetricFov(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  useAsymmetricFov)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_21_0*>::get(),
                            "ovrp_GetAppAsymmetricFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, useAsymmetricFov);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_28_0.ovrp_GetDominantHand
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Handedness>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_GetDominantHand)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27771b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(),
                            "ovrp_GetDominantHand",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Handedness>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_28_0.ovrp_SendEvent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ::StringW)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_SendEvent)> {
  constexpr static std::size_t size = 0xb4;
  constexpr static std::size_t addrs = 0x277722c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(),
                            "ovrp_SendEvent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_28_0.ovrp_EnqueueSetupLayer2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>, int32_t, ::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_EnqueueSetupLayer2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27772e0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(),
                            "ovrp_EnqueueSetupLayer2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_28_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_28_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_GetDominantHand(ByRef<::GlobalNamespace::__OVRPlugin__Handedness>  dominantHand)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(),
                            "ovrp_GetDominantHand",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Handedness>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, dominantHand);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_SendEvent(::StringW  name, ::StringW  param)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(),
                            "ovrp_SendEvent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, name, param);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_28_0::ovrp_EnqueueSetupLayer2(ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>  desc, int32_t  compositionDepth, ::cordl_internals::intptr_t  layerId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_28_0*>::get(),
                            "ovrp_EnqueueSetupLayer2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__LayerDescInternal>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, desc, compositionDepth, layerId);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_29_0.ovrp_GetLayerAndroidSurfaceObject
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::cordl_internals::intptr_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27773f8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(),
                            "ovrp_GetLayerAndroidSurfaceObject",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_29_0.ovrp_SetHeadPoseModifier
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_SetHeadPoseModifier)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277747c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(),
                            "ovrp_SetHeadPoseModifier",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_29_0.ovrp_GetHeadPoseModifier
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetHeadPoseModifier)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2777500;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(),
                            "ovrp_GetHeadPoseModifier",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_29_0.ovrp_GetNodePoseStateRaw
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetNodePoseStateRaw)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x2777584;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(),
                            "ovrp_GetNodePoseStateRaw",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_29_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_29_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject(int32_t  layerId, ByRef<::cordl_internals::intptr_t>  surfaceObject)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(),
                            "ovrp_GetLayerAndroidSurfaceObject",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, surfaceObject);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_SetHeadPoseModifier(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>  relativeRotation, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>  relativeTranslation)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(),
                            "ovrp_SetHeadPoseModifier",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, relativeRotation, relativeTranslation);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetHeadPoseModifier(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>  relativeRotation, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>  relativeTranslation)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(),
                            "ovrp_GetHeadPoseModifier",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, relativeRotation, relativeTranslation);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_29_0::ovrp_GetNodePoseStateRaw(::GlobalNamespace::__OVRPlugin__Step  stepId, int32_t  frameIndex, ::GlobalNamespace::__OVRPlugin__Node  nodeId, ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>  nodePoseState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_29_0*>::get(),
                            "ovrp_GetNodePoseStateRaw",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, nodeId, nodePoseState);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_GetCurrentTrackingTransformPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27776a4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_GetCurrentTrackingTransformPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_GetTrackingTransformRawPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetTrackingTransformRawPose)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2777720;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_GetTrackingTransformRawPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_SendEvent2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ::StringW, ::StringW)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_SendEvent2)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x277779c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_SendEvent2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_IsPerfMetricsSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_IsPerfMetricsSupported)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2777874;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_IsPerfMetricsSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_GetPerfMetricsFloat
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics, ByRef<float_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetPerfMetricsFloat)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27778f8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_GetPerfMetricsFloat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_30_0.ovrp_GetPerfMetricsInt
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetPerfMetricsInt)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277797c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_GetPerfMetricsInt",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_30_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_30_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose(ByRef<::GlobalNamespace::__OVRPlugin__Posef>  trackingTransformPose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_GetCurrentTrackingTransformPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, trackingTransformPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetTrackingTransformRawPose(ByRef<::GlobalNamespace::__OVRPlugin__Posef>  trackingTransformRawPose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_GetTrackingTransformRawPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, trackingTransformRawPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_SendEvent2(::StringW  name, ::StringW  param, ::StringW  source)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_SendEvent2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, name, param, source);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_IsPerfMetricsSupported(::GlobalNamespace::__OVRPlugin__PerfMetrics  perfMetrics, ByRef<::GlobalNamespace::__OVRPlugin__Bool>  isSupported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_IsPerfMetricsSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfMetrics, isSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetPerfMetricsFloat(::GlobalNamespace::__OVRPlugin__PerfMetrics  perfMetrics, ByRef<float_t>  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_GetPerfMetricsFloat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfMetrics, value);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_30_0::ovrp_GetPerfMetricsInt(::GlobalNamespace::__OVRPlugin__PerfMetrics  perfMetrics, ByRef<int32_t>  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_30_0*>::get(),
                            "ovrp_GetPerfMetricsInt",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfMetrics, value);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_31_0.ovrp_GetTimeInSeconds
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<double_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_31_0::ovrp_GetTimeInSeconds)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2777a84;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get(),
                            "ovrp_GetTimeInSeconds",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_31_0.ovrp_SetColorScaleAndOffset
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::UnityEngine::Vector4, ::UnityEngine::Vector4, ::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_31_0::ovrp_SetColorScaleAndOffset)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2777b00;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get(),
                            "ovrp_SetColorScaleAndOffset",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_31_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_31_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_31_0::ovrp_GetTimeInSeconds(ByRef<double_t>  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get(),
                            "ovrp_GetTimeInSeconds",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_31_0::ovrp_SetColorScaleAndOffset(::UnityEngine::Vector4  colorScale, ::UnityEngine::Vector4  colorOffset, ::GlobalNamespace::__OVRPlugin__Bool  applyToAllLayers)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_31_0*>::get(),
                            "ovrp_SetColorScaleAndOffset",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorScale, colorOffset, applyToAllLayers);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_32_0.ovrp_AddCustomMetadata
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ::StringW)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_32_0::ovrp_AddCustomMetadata)> {
  constexpr static std::size_t size = 0xb4;
  constexpr static std::size_t addrs = 0x2777c60;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_32_0*>::get(),
                            "ovrp_AddCustomMetadata",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_32_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_32_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_32_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_32_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_32_0::ovrp_AddCustomMetadata(::StringW  name, ::StringW  param)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_32_0*>::get(),
                            "ovrp_AddCustomMetadata",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, name, param);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_34_0.ovrp_EnqueueSubmitLayer2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, ::cordl_internals::intptr_t, ::cordl_internals::intptr_t, int32_t, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Posef>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>, int32_t, ::GlobalNamespace::__OVRPlugin__Bool, ByRef<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>, ::GlobalNamespace::__OVRPlugin__Bool, ByRef<::UnityEngine::Vector4>, ByRef<::UnityEngine::Vector4>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_34_0::ovrp_EnqueueSubmitLayer2)> {
  constexpr static std::size_t size = 0xfc;
  constexpr static std::size_t addrs = 0x2777d98;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_34_0*>::get(),
                            "ovrp_EnqueueSubmitLayer2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::UnityEngine::Vector4>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::UnityEngine::Vector4>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_34_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_34_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_34_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_34_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_34_0::ovrp_EnqueueSubmitLayer2(uint32_t  flags, ::cordl_internals::intptr_t  textureLeft, ::cordl_internals::intptr_t  textureRight, int32_t  layerId, int32_t  frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__Posef>  pose, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>  scale, int32_t  layerIndex, ::GlobalNamespace::__OVRPlugin__Bool  overrideTextureRectMatrix, ByRef<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>  textureRectMatrix, ::GlobalNamespace::__OVRPlugin__Bool  overridePerLayerColorScaleAndOffset, ByRef<::UnityEngine::Vector4>  colorScale, ByRef<::UnityEngine::Vector4>  colorOffset)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_34_0*>::get(),
                            "ovrp_EnqueueSubmitLayer2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::UnityEngine::Vector4>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::UnityEngine::Vector4>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex, overrideTextureRectMatrix, textureRectMatrix, overridePerLayerColorScaleAndOffset, colorScale, colorOffset);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_35_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_35_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_35_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_35_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_36_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_36_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_36_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_36_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_37_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_37_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_37_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_37_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_GetTrackingTransformRelativePose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Posef>, ::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27780a4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_GetTrackingTransformRelativePose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_Initialize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Initialize)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x276d758;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_Initialize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_Shutdown
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Shutdown)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x276d880;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_Shutdown",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetInitialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetInitialized)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276d9bc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_Update
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Update)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x276daf8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_Update",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcActivationMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcActivationMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276dc2c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcActivationMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcActivationMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcActivationMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276dd70;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcActivationMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_IsMrcEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_IsMrcEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e270;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_IsMrcEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_IsMrcActivated
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_IsMrcActivated)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e3bc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_IsMrcActivated",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_UseMrcDebugCamera
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e508;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_UseMrcDebugCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcInputVideoBufferType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e64c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcInputVideoBufferType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcInputVideoBufferType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e790;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcInputVideoBufferType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcFrameSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcFrameSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x276e8e4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcFrameSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcFrameSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x276ea48;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcAudioSampleRate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276eb94;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcAudioSampleRate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcAudioSampleRate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276ecd4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcAudioSampleRate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SetMrcFrameImageFlipped
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276ee1c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcFrameImageFlipped",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_GetMrcFrameImageFlipped
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276ef64;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcFrameImageFlipped",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_EncodeMrcFrame
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ::cordl_internals::intptr_t, int32_t, int32_t, double_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_EncodeMrcFrame)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x276f3f8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_EncodeMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_EncodeMrcFrameWithDualTextures
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ::cordl_internals::intptr_t, ::cordl_internals::intptr_t, int32_t, int32_t, double_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276f580;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_EncodeMrcFrameWithDualTextures",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_Media_SyncMrcFrame
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SyncMrcFrame)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276fbf4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SyncMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_SetDeveloperMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_SetDeveloperMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778128;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_SetDeveloperMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_GetNodeOrientationValid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetNodeOrientationValid)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27781a4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_GetNodeOrientationValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_38_0.ovrp_GetNodePositionValid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetNodePositionValid)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2778228;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_GetNodePositionValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_38_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_38_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose(ByRef<::GlobalNamespace::__OVRPlugin__Posef>  trackingTransformRelativePose, ::GlobalNamespace::__OVRPlugin__TrackingOrigin  trackingOrigin)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_GetTrackingTransformRelativePose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, trackingTransformRelativePose, trackingOrigin);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Initialize()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_Initialize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Shutdown()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_Shutdown",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetInitialized(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  initialized)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, initialized);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_Update()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_Update",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcActivationMode(ByRef<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>  activationMode)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcActivationMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, activationMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcActivationMode(::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode  activationMode)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcActivationMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__MrcActivationMode>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, activationMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_IsMrcEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  mrcEnabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_IsMrcEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, mrcEnabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_IsMrcActivated(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  mrcActivated)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_IsMrcActivated",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, mrcActivated);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  useMrcDebugCamera)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_UseMrcDebugCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, useMrcDebugCamera);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType(::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType  inputVideoBufferType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcInputVideoBufferType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, inputVideoBufferType);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType(ByRef<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>  inputVideoBufferType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcInputVideoBufferType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__InputVideoBufferType>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, inputVideoBufferType);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcFrameSize(int32_t  frameWidth, int32_t  frameHeight)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, frameWidth, frameHeight);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcFrameSize(ByRef<int32_t>  frameWidth, ByRef<int32_t>  frameHeight)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcFrameSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, frameWidth, frameHeight);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate(int32_t  sampleRate)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcAudioSampleRate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, sampleRate);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate(ByRef<int32_t>  sampleRate)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcAudioSampleRate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, sampleRate);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped(::GlobalNamespace::__OVRPlugin__Bool  flipped)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SetMrcFrameImageFlipped",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, flipped);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  flipped)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_GetMrcFrameImageFlipped",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, flipped);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_EncodeMrcFrame(::cordl_internals::intptr_t  rawBuffer, ::cordl_internals::intptr_t  audioDataPtr, int32_t  audioDataLen, int32_t  audioChannels, double_t  timestamp, ByRef<int32_t>  outSyncId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_EncodeMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, outSyncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures(::cordl_internals::intptr_t  backgroundTextureHandle, ::cordl_internals::intptr_t  foregroundTextureHandle, ::cordl_internals::intptr_t  audioData, int32_t  audioDataLen, int32_t  audioChannels, double_t  timestamp, ByRef<int32_t>  outSyncId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_EncodeMrcFrameWithDualTextures",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen, audioChannels, timestamp, outSyncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_Media_SyncMrcFrame(int32_t  syncId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_Media_SyncMrcFrame",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, syncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_SetDeveloperMode(::GlobalNamespace::__OVRPlugin__Bool  active)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_SetDeveloperMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, active);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetNodeOrientationValid(::GlobalNamespace::__OVRPlugin__Node  nodeId, ByRef<::GlobalNamespace::__OVRPlugin__Bool>  nodeOrientationValid)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_GetNodeOrientationValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nodeId, nodeOrientationValid);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_38_0::ovrp_GetNodePositionValid(::GlobalNamespace::__OVRPlugin__Node  nodeId, ByRef<::GlobalNamespace::__OVRPlugin__Bool>  nodePositionValid)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_38_0*>::get(),
                            "ovrp_GetNodePositionValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nodeId, nodePositionValid);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_39_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_39_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_39_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_39_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_40_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_40_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_40_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_40_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_41_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_41_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_41_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_41_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_42_0.ovrp_GetAdaptiveGpuPerformanceScale2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27784bc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_42_0*>::get(),
                            "ovrp_GetAdaptiveGpuPerformanceScale2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_42_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_42_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_42_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_42_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2(ByRef<float_t>  adaptiveGpuPerformanceScale)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_42_0*>::get(),
                            "ovrp_GetAdaptiveGpuPerformanceScale2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, adaptiveGpuPerformanceScale);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_43_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_43_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_43_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_43_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetHandTrackingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetHandTrackingEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778640;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetHandTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetHandState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Hand, ByRef<::GlobalNamespace::__OVRPlugin__HandStateInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetHandState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27786bc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetHandState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__HandStateInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetSkeleton
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__SkeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetSkeleton)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2778750;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetSkeleton",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__MeshType, ::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetMesh)> {
  constexpr static std::size_t size = 0x80;
  constexpr static std::size_t addrs = 0x2778810;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__MeshType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_OverrideExternalCameraFov
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Bool, ByRef<::GlobalNamespace::__OVRPlugin__Fovf>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_OverrideExternalCameraFov)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2778890;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_OverrideExternalCameraFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Fovf>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraFov
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2778924;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetUseOverriddenExternalCameraFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_OverrideExternalCameraStaticPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Bool, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27789a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_OverrideExternalCameraStaticPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraStaticPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2778a3c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetUseOverriddenExternalCameraStaticPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_ResetDefaultExternalCamera
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_ResetDefaultExternalCamera)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x2778ac0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_ResetDefaultExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_SetDefaultExternalCamera
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_SetDefaultExternalCamera)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x2778b28;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_SetDefaultExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_44_0.ovrp_GetLocalTrackingSpaceRecenterCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetLocalTrackingSpaceRecenterCount)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778bd4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetLocalTrackingSpaceRecenterCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_44_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_44_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetHandTrackingEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  handTrackingEnabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetHandTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, handTrackingEnabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetHandState(::GlobalNamespace::__OVRPlugin__Step  stepId, ::GlobalNamespace::__OVRPlugin__Hand  hand, ByRef<::GlobalNamespace::__OVRPlugin__HandStateInternal>  handState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetHandState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__HandStateInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, hand, handState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetSkeleton(::GlobalNamespace::__OVRPlugin__SkeletonType  skeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>  skeleton)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetSkeleton",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, skeletonType, skeleton);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetMesh(::GlobalNamespace::__OVRPlugin__MeshType  meshType, ::cordl_internals::intptr_t  meshPtr)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__MeshType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, meshType, meshPtr);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_OverrideExternalCameraFov(int32_t  cameraId, ::GlobalNamespace::__OVRPlugin__Bool  useOverriddenFov, ByRef<::GlobalNamespace::__OVRPlugin__Fovf>  fov)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_OverrideExternalCameraFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Fovf>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, useOverriddenFov, fov);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov(int32_t  cameraId, ByRef<::GlobalNamespace::__OVRPlugin__Bool>  useOverriddenFov)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetUseOverriddenExternalCameraFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, useOverriddenFov);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose(int32_t  cameraId, ::GlobalNamespace::__OVRPlugin__Bool  useOverriddenPose, ByRef<::GlobalNamespace::__OVRPlugin__Posef>  poseInStageOrigin)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_OverrideExternalCameraStaticPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, useOverriddenPose, poseInStageOrigin);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose(int32_t  cameraId, ByRef<::GlobalNamespace::__OVRPlugin__Bool>  useOverriddenStaticPose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetUseOverriddenExternalCameraStaticPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraId, useOverriddenStaticPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_ResetDefaultExternalCamera()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_ResetDefaultExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_SetDefaultExternalCamera(::StringW  cameraName, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>  cameraIntrinsics, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>  cameraExtrinsics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_SetDefaultExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_44_0::ovrp_GetLocalTrackingSpaceRecenterCount(ByRef<int32_t>  recenterCount)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_44_0*>::get(),
                            "ovrp_GetLocalTrackingSpaceRecenterCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, recenterCount);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_45_0.ovrp_GetSystemHmd3DofModeEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778cd4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get(),
                            "ovrp_GetSystemHmd3DofModeEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_45_0.ovrp_Media_SetAvailableQueueIndexVulkan
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_45_0::ovrp_Media_SetAvailableQueueIndexVulkan)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276fd38;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get(),
                            "ovrp_Media_SetAvailableQueueIndexVulkan",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_45_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_45_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  enabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get(),
                            "ovrp_GetSystemHmd3DofModeEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_45_0::ovrp_Media_SetAvailableQueueIndexVulkan(uint32_t  queueIndexVk)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_45_0*>::get(),
                            "ovrp_Media_SetAvailableQueueIndexVulkan",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, queueIndexVk);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_46_0.ovrp_GetTiledMultiResDynamic
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_46_0::ovrp_GetTiledMultiResDynamic)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778dd4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get(),
                            "ovrp_GetTiledMultiResDynamic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_46_0.ovrp_SetTiledMultiResDynamic
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_46_0::ovrp_SetTiledMultiResDynamic)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2778e50;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get(),
                            "ovrp_SetTiledMultiResDynamic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_46_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_46_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_46_0::ovrp_GetTiledMultiResDynamic(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  isDynamic)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get(),
                            "ovrp_GetTiledMultiResDynamic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isDynamic);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_46_0::ovrp_SetTiledMultiResDynamic(::GlobalNamespace::__OVRPlugin__Bool  isDynamic)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_46_0*>::get(),
                            "ovrp_SetTiledMultiResDynamic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isDynamic);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_47_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_47_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_47_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_47_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_48_0.ovrp_SetExternalCameraProperties
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_48_0::ovrp_SetExternalCameraProperties)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x2778fd4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_48_0*>::get(),
                            "ovrp_SetExternalCameraProperties",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_48_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_48_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_48_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_48_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_48_0::ovrp_SetExternalCameraProperties(::StringW  cameraName, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>  cameraIntrinsics, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>  cameraExtrinsics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_48_0*>::get(),
                            "ovrp_SetExternalCameraProperties",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_SetClientColorDesc
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__ColorSpace)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_SetClientColorDesc)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779104;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_SetClientColorDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ColorSpace>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_GetHmdColorDesc
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__ColorSpace>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_GetHmdColorDesc)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779180;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_GetHmdColorDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ColorSpace>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_EncodeMrcFrameWithPoseTime
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ::cordl_internals::intptr_t, int32_t, int32_t, double_t, double_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EncodeMrcFrameWithPoseTime)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276f334;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_EncodeMrcFrameWithPoseTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ::cordl_internals::intptr_t, ::cordl_internals::intptr_t, int32_t, int32_t, double_t, double_t, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276f4b4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_SetHeadsetControllerPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Posef)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetHeadsetControllerPose)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x276ff00;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_SetHeadsetControllerPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_EnumerateCameraAnchorHandles
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<int32_t>, ByRef<::cordl_internals::intptr_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EnumerateCameraAnchorHandles)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27791fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_EnumerateCameraAnchorHandles",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCurrentCameraAnchorHandle
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::cordl_internals::intptr_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCurrentCameraAnchorHandle)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779280;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCurrentCameraAnchorHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCameraAnchorName
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ::ArrayW<char16_t,::Array<char16_t>*>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorName)> {
  constexpr static std::size_t size = 0x110;
  constexpr static std::size_t addrs = 0x27792fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCameraAnchorName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<char16_t,::Array<char16_t>*>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCameraAnchorHandle
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ByRef<::cordl_internals::intptr_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorHandle)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277940c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCameraAnchorHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCameraAnchorType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ByRef<::GlobalNamespace::__OVRPlugin__CameraAnchorType>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorType)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779490;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCameraAnchorType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraAnchorType>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_CreateCustomCameraAnchor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ByRef<::cordl_internals::intptr_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_CreateCustomCameraAnchor)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779514;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_CreateCustomCameraAnchor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_DestroyCustomCameraAnchor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_DestroyCustomCameraAnchor)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779598;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_DestroyCustomCameraAnchor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCustomCameraAnchorPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCustomCameraAnchorPose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779614;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCustomCameraAnchorPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_SetCustomCameraAnchorPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ::GlobalNamespace::__OVRPlugin__Posef)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetCustomCameraAnchorPose)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2779698;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_SetCustomCameraAnchorPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_GetCameraMinMaxDistance
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ByRef<double_t>, ByRef<double_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraMinMaxDistance)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2779728;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCameraMinMaxDistance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_49_0.ovrp_Media_SetCameraMinMaxDistance
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, double_t, double_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetCameraMinMaxDistance)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27797bc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_SetCameraMinMaxDistance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_49_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_49_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_SetClientColorDesc(::GlobalNamespace::__OVRPlugin__ColorSpace  colorSpace)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_SetClientColorDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ColorSpace>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorSpace);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_GetHmdColorDesc(ByRef<::GlobalNamespace::__OVRPlugin__ColorSpace>  colorSpace)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_GetHmdColorDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ColorSpace>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorSpace);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EncodeMrcFrameWithPoseTime(::cordl_internals::intptr_t  rawBuffer, ::cordl_internals::intptr_t  audioDataPtr, int32_t  audioDataLen, int32_t  audioChannels, double_t  timestamp, double_t  poseTime, ByRef<int32_t>  outSyncId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_EncodeMrcFrameWithPoseTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, poseTime, outSyncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime(::cordl_internals::intptr_t  backgroundTextureHandle, ::cordl_internals::intptr_t  foregroundTextureHandle, ::cordl_internals::intptr_t  audioData, int32_t  audioDataLen, int32_t  audioChannels, double_t  timestamp, double_t  poseTime, ByRef<int32_t>  outSyncId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_EncodeMrcFrameDualTexturesWithPoseTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen, audioChannels, timestamp, poseTime, outSyncId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetHeadsetControllerPose(::GlobalNamespace::__OVRPlugin__Posef  headsetPose, ::GlobalNamespace::__OVRPlugin__Posef  leftControllerPose, ::GlobalNamespace::__OVRPlugin__Posef  rightControllerPose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_SetHeadsetControllerPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, headsetPose, leftControllerPose, rightControllerPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_EnumerateCameraAnchorHandles(ByRef<int32_t>  anchorCount, ByRef<::cordl_internals::intptr_t>  CameraAnchorHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_EnumerateCameraAnchorHandles",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorCount, CameraAnchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCurrentCameraAnchorHandle(ByRef<::cordl_internals::intptr_t>  anchorHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCurrentCameraAnchorHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorName(::cordl_internals::intptr_t  anchorHandle, ::ArrayW<char16_t,::Array<char16_t>*>  cameraName)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCameraAnchorName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<char16_t,::Array<char16_t>*>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, cameraName);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorHandle(::cordl_internals::intptr_t  anchorName, ByRef<::cordl_internals::intptr_t>  anchorHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCameraAnchorHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorName, anchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraAnchorType(::cordl_internals::intptr_t  anchorHandle, ByRef<::GlobalNamespace::__OVRPlugin__CameraAnchorType>  anchorType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCameraAnchorType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraAnchorType>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, anchorType);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_CreateCustomCameraAnchor(::cordl_internals::intptr_t  anchorName, ByRef<::cordl_internals::intptr_t>  anchorHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_CreateCustomCameraAnchor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorName, anchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_DestroyCustomCameraAnchor(::cordl_internals::intptr_t  anchorHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_DestroyCustomCameraAnchor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCustomCameraAnchorPose(::cordl_internals::intptr_t  anchorHandle, ByRef<::GlobalNamespace::__OVRPlugin__Posef>  pose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCustomCameraAnchorPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, pose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetCustomCameraAnchorPose(::cordl_internals::intptr_t  anchorHandle, ::GlobalNamespace::__OVRPlugin__Posef  pose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_SetCustomCameraAnchorPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, pose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_GetCameraMinMaxDistance(::cordl_internals::intptr_t  anchorHandle, ByRef<double_t>  minDistance, ByRef<double_t>  maxDistance)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_GetCameraMinMaxDistance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<double_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, minDistance, maxDistance);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_49_0::ovrp_Media_SetCameraMinMaxDistance(::cordl_internals::intptr_t  anchorHandle, double_t  minDistance, double_t  maxDistance)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_49_0*>::get(),
                            "ovrp_Media_SetCameraMinMaxDistance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, anchorHandle, minDistance, maxDistance);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_50_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_50_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_50_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_50_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_51_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_51_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_51_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_51_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_52_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_52_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_52_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_52_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_53_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_53_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_53_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_53_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_54_0.ovrp_Media_SetPlatformInitialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_54_0::ovrp_Media_SetPlatformInitialized)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x276deac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_54_0*>::get(),
                            "ovrp_Media_SetPlatformInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_54_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_54_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_54_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_54_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_54_0::ovrp_Media_SetPlatformInitialized()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_54_0*>::get(),
                            "ovrp_Media_SetPlatformInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_0.ovrp_GetSkeleton2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__SkeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2Internal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetSkeleton2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779b68;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                            "ovrp_GetSkeleton2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2Internal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_0.ovrp_PollEvent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_PollEvent)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x2779bec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                            "ovrp_PollEvent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_0.ovrp_GetNativeXrApiType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__XrApi>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetNativeXrApiType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779ccc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                            "ovrp_GetNativeXrApiType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__XrApi>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_0.ovrp_GetNativeOpenXRHandles
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetNativeOpenXRHandles)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779d48;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                            "ovrp_GetNativeOpenXRHandles",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_55_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_55_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetSkeleton2(::GlobalNamespace::__OVRPlugin__SkeletonType  skeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2Internal>  skeleton)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                            "ovrp_GetSkeleton2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2Internal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, skeletonType, skeleton);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_PollEvent(ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>  eventDataBuffer)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                            "ovrp_PollEvent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, eventDataBuffer);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetNativeXrApiType(ByRef<::GlobalNamespace::__OVRPlugin__XrApi>  xrApi)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                            "ovrp_GetNativeXrApiType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__XrApi>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, xrApi);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_0::ovrp_GetNativeOpenXRHandles(ByRef<uint64_t>  xrInstance, ByRef<uint64_t>  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_0*>::get(),
                            "ovrp_GetNativeOpenXRHandles",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, xrInstance, xrSession);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_55_1.ovrp_PollEvent2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__EventType>, ByRef<::cordl_internals::intptr_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_55_1::ovrp_PollEvent2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2779e50;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_1*>::get(),
                            "ovrp_PollEvent2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventType>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_55_1::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_1*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_55_1::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_1*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_55_1::ovrp_PollEvent2(ByRef<::GlobalNamespace::__OVRPlugin__EventType>  eventType, ByRef<::cordl_internals::intptr_t>  eventData)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_55_1*>::get(),
                            "ovrp_PollEvent2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventType>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, eventType, eventData);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_56_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_56_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_56_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_56_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_Media_GetPlatformCameraMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_Media_GetPlatformCameraMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276dfe0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_Media_GetPlatformCameraMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_Media_SetPlatformCameraMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_Media_SetPlatformCameraMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x276e124;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_Media_SetPlatformCameraMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_SetEyeFovPremultipliedAlphaMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_SetEyeFovPremultipliedAlphaMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2779fdc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_SetEyeFovPremultipliedAlphaMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_GetEyeFovPremultipliedAlphaMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_GetEyeFovPremultipliedAlphaMode)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277a058;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_GetEyeFovPremultipliedAlphaMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_57_0.ovrp_SetKeyboardOverlayUV
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Vector2f)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_SetKeyboardOverlayUV)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277a0d4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_SetKeyboardOverlayUV",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector2f>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_57_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_57_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_Media_GetPlatformCameraMode(ByRef<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>  platformCameraMode)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_Media_GetPlatformCameraMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, platformCameraMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_Media_SetPlatformCameraMode(::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode  platformCameraMode)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_Media_SetPlatformCameraMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Media__PlatformCameraMode>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, platformCameraMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_SetEyeFovPremultipliedAlphaMode(::GlobalNamespace::__OVRPlugin__Bool  enabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_SetEyeFovPremultipliedAlphaMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_GetEyeFovPremultipliedAlphaMode(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  enabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_GetEyeFovPremultipliedAlphaMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_57_0::ovrp_SetKeyboardOverlayUV(::GlobalNamespace::__OVRPlugin__Vector2f  uv)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_57_0*>::get(),
                            "ovrp_SetKeyboardOverlayUV",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector2f>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, uv);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_58_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_58_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_58_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_58_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_59_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_59_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_59_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_59_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_60_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_60_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_60_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_60_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_61_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_61_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_61_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_61_0*>::get>();
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_62_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_62_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_62_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_62_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_InitializeInsightPassthrough
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_InitializeInsightPassthrough)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277a470;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_InitializeInsightPassthrough",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_ShutdownInsightPassthrough
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_ShutdownInsightPassthrough)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277a4d8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_ShutdownInsightPassthrough",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_GetInsightPassthroughInitialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_GetInsightPassthroughInitialized)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277a540;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_GetInsightPassthroughInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_SetInsightPassthroughStyle
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_SetInsightPassthroughStyle)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277a5a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_SetInsightPassthroughStyle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_CreateInsightTriangleMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::cordl_internals::intptr_t, int32_t, ::cordl_internals::intptr_t, int32_t, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_CreateInsightTriangleMesh)> {
  constexpr static std::size_t size = 0xb4;
  constexpr static std::size_t addrs = 0x277a63c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_CreateInsightTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_DestroyInsightTriangleMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_DestroyInsightTriangleMesh)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277a6f0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_DestroyInsightTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_AddInsightPassthroughSurfaceGeometry
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, uint64_t, ::UnityEngine::Matrix4x4, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_AddInsightPassthroughSurfaceGeometry)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x277a76c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_AddInsightPassthroughSurfaceGeometry",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_DestroyInsightPassthroughGeometryInstance
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_DestroyInsightPassthroughGeometryInstance)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277a818;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_DestroyInsightPassthroughGeometryInstance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_63_0.ovrp_UpdateInsightPassthroughGeometryTransform
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t, ::UnityEngine::Matrix4x4)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_UpdateInsightPassthroughGeometryTransform)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277a894;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_UpdateInsightPassthroughGeometryTransform",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_63_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_63_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_InitializeInsightPassthrough()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_InitializeInsightPassthrough",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_ShutdownInsightPassthrough()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_ShutdownInsightPassthrough",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_GetInsightPassthroughInitialized()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_GetInsightPassthroughInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_SetInsightPassthroughStyle(int32_t  layerId, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle  style)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_SetInsightPassthroughStyle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, style);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_CreateInsightTriangleMesh(int32_t  layerId, ::cordl_internals::intptr_t  vertices, int32_t  vertexCount, ::cordl_internals::intptr_t  triangles, int32_t  triangleCount, ByRef<uint64_t>  meshHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_CreateInsightTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, vertices, vertexCount, triangles, triangleCount, meshHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_DestroyInsightTriangleMesh(uint64_t  meshHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_DestroyInsightTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, meshHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_AddInsightPassthroughSurfaceGeometry(int32_t  layerId, uint64_t  meshHandle, ::UnityEngine::Matrix4x4  T_world_model, ByRef<uint64_t>  geometryInstanceHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_AddInsightPassthroughSurfaceGeometry",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, meshHandle, T_world_model, geometryInstanceHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_DestroyInsightPassthroughGeometryInstance(uint64_t  geometryInstanceHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_DestroyInsightPassthroughGeometryInstance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, geometryInstanceHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_63_0::ovrp_UpdateInsightPassthroughGeometryTransform(uint64_t  geometryInstanceHandle, ::UnityEngine::Matrix4x4  T_world_model)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_63_0*>::get(),
                            "ovrp_UpdateInsightPassthroughGeometryTransform",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, geometryInstanceHandle, T_world_model);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_64_0.ovrp_LocateSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Posef>, ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_64_0::ovrp_LocateSpace)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277a9ac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_64_0*>::get(),
                            "ovrp_LocateSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_64_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_64_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_64_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_64_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_64_0::ovrp_LocateSpace(ByRef<::GlobalNamespace::__OVRPlugin__Posef>  location, ByRef<uint64_t>  space, ::GlobalNamespace::__OVRPlugin__TrackingOrigin  trackingOrigin)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_64_0*>::get(),
                            "ovrp_LocateSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, location, space, trackingOrigin);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxLoadFromMemory
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::cordl_internals::intptr_t>, uint32_t, ByRef<::cordl_internals::intptr_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxLoadFromMemory)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2770290;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxLoadFromMemory",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxTextureWidth
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ByRef<uint32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureWidth)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2770460;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxTextureWidth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxTextureHeight
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ByRef<uint32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureHeight)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2770620;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxTextureHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxTranscode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, uint32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTranscode)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27707e0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxTranscode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxGetTextureData
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ::cordl_internals::intptr_t, uint32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxGetTextureData)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2770b68;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxGetTextureData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxTextureSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t, ByRef<uint32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureSize)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x27709a0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxTextureSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_KtxDestroy
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxDestroy)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2770d28;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_65_0.ovrp_DestroySpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_DestroySpace)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277aac4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_DestroySpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_65_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_65_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxLoadFromMemory(ByRef<::cordl_internals::intptr_t>  data, uint32_t  length, ByRef<::cordl_internals::intptr_t>  texture)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxLoadFromMemory",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::cordl_internals::intptr_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, data, length, texture);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureWidth(::cordl_internals::intptr_t  texture, ByRef<uint32_t>  width)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxTextureWidth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, width);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureHeight(::cordl_internals::intptr_t  texture, ByRef<uint32_t>  height)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxTextureHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, height);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTranscode(::cordl_internals::intptr_t  texture, uint32_t  format)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxTranscode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, format);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxGetTextureData(::cordl_internals::intptr_t  texture, ::cordl_internals::intptr_t  data, uint32_t  bufferSize)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxGetTextureData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, data, bufferSize);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxTextureSize(::cordl_internals::intptr_t  texture, ByRef<uint32_t>  size)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxTextureSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture, size);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_KtxDestroy(::cordl_internals::intptr_t  texture)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_KtxDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, texture);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_65_0::ovrp_DestroySpace(ByRef<uint64_t>  space)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_65_0*>::get(),
                            "ovrp_DestroySpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_66_0.ovrp_GetInsightPassthroughInitializationState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_66_0::ovrp_GetInsightPassthroughInitializationState)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277abc4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get(),
                            "ovrp_GetInsightPassthroughInitializationState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_66_0.ovrp_Media_IsCastingToRemoteClient
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_66_0::ovrp_Media_IsCastingToRemoteClient)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2770098;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get(),
                            "ovrp_Media_IsCastingToRemoteClient",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_66_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_66_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_66_0::ovrp_GetInsightPassthroughInitializationState()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get(),
                            "ovrp_GetInsightPassthroughInitializationState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_66_0::ovrp_Media_IsCastingToRemoteClient(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  isCasting)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_66_0*>::get(),
                            "ovrp_Media_IsCastingToRemoteClient",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isCasting);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_67_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_67_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_67_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_67_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_LoadRenderModel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t, uint32_t, ByRef<uint32_t>, ::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_LoadRenderModel)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277ad34;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_LoadRenderModel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_GetRenderModelPaths
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, ::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetRenderModelPaths)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277add0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_GetRenderModelPaths",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_GetRenderModelProperties
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetRenderModelProperties)> {
  constexpr static std::size_t size = 0xf8;
  constexpr static std::size_t addrs = 0x277ae54;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_GetRenderModelProperties",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_SetInsightPassthroughKeyboardHandsIntensity
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_SetInsightPassthroughKeyboardHandsIntensity)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277af4c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_SetInsightPassthroughKeyboardHandsIntensity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_StartKeyboardTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_StartKeyboardTracking)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277afe0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_StartKeyboardTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_StopKeyboardTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_StopKeyboardTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277b05c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_StopKeyboardTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_GetSystemKeyboardDescription
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetSystemKeyboardDescription)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x277b0c4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_GetSystemKeyboardDescription",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_68_0.ovrp_GetKeyboardState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetKeyboardState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277b1b8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_GetKeyboardState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_68_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_68_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_LoadRenderModel(uint64_t  modelKey, uint32_t  bufferInputCapacity, ByRef<uint32_t>  bufferCountOutput, ::cordl_internals::intptr_t  buffer)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_LoadRenderModel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, modelKey, bufferInputCapacity, bufferCountOutput, buffer);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetRenderModelPaths(uint32_t  index, ::cordl_internals::intptr_t  path)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_GetRenderModelPaths",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, index, path);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetRenderModelProperties(::StringW  path, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>  properties)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_GetRenderModelProperties",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, path, properties);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_SetInsightPassthroughKeyboardHandsIntensity(int32_t  layerId, ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity  intensity)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_SetInsightPassthroughKeyboardHandsIntensity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, intensity);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_StartKeyboardTracking(uint64_t  trackedKeyboardId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_StartKeyboardTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, trackedKeyboardId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_StopKeyboardTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_StopKeyboardTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetSystemKeyboardDescription(::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags  keyboardQueryFlags, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>  keyboardDescription)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_GetSystemKeyboardDescription",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, keyboardQueryFlags, keyboardDescription);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_68_0::ovrp_GetKeyboardState(::GlobalNamespace::__OVRPlugin__Step  stepId, int32_t  frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>  keyboardState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_68_0*>::get(),
                            "ovrp_GetKeyboardState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, keyboardState);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_69_0.ovrp_GetNodePoseStateImmediate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_69_0::ovrp_GetNodePoseStateImmediate)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277b2d0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_69_0*>::get(),
                            "ovrp_GetNodePoseStateImmediate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_69_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_69_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_69_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_69_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_69_0::ovrp_GetNodePoseStateImmediate(::GlobalNamespace::__OVRPlugin__Node  nodeId, ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>  nodePoseState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_69_0*>::get(),
                            "ovrp_GetNodePoseStateImmediate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nodeId, nodePoseState);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_70_0.ovrp_SetLogCallback2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_70_0::ovrp_SetLogCallback2)> {
  constexpr static std::size_t size = 0x80;
  constexpr static std::size_t addrs = 0x277b3d8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_70_0*>::get(),
                            "ovrp_SetLogCallback2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_70_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_70_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_70_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_70_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_70_0::ovrp_SetLogCallback2(::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*  logCallback)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_70_0*>::get(),
                            "ovrp_SetLogCallback2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, logCallback);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_IsInsightPassthroughSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_IsInsightPassthroughSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b4dc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_IsInsightPassthroughSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_SetClientVersion
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t, int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_SetClientVersion)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2770e9c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_SetClientVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_HookGetInstanceProcAddr
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_HookGetInstanceProcAddr)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2770ff4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_HookGetInstanceProcAddr",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnInstanceCreate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceCreate)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2771138;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnInstanceCreate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnInstanceDestroy
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceDestroy)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2771274;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnInstanceDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionCreate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionCreate)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27713b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionCreate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnAppSpaceChange
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnAppSpaceChange)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27714ec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnAppSpaceChange",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionStateChange
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t, int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionStateChange)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277163c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionStateChange",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionBegin
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionBegin)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2771780;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionBegin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionEnd
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionEnd)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27718bc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionEnd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionExiting
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionExiting)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x27719f8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionExiting",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_UnityOpenXR_OnSessionDestroy
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionDestroy)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2771b34;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_SetSuggestedCpuPerformanceLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_SetSuggestedCpuPerformanceLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b558;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_SetSuggestedCpuPerformanceLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_GetSuggestedCpuPerformanceLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_GetSuggestedCpuPerformanceLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b5d4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_GetSuggestedCpuPerformanceLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_SetSuggestedGpuPerformanceLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_SetSuggestedGpuPerformanceLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b650;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_SetSuggestedGpuPerformanceLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_71_0.ovrp_GetSuggestedGpuPerformanceLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_GetSuggestedGpuPerformanceLevel)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277b6cc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_GetSuggestedGpuPerformanceLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_71_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_IsInsightPassthroughSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  supported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_IsInsightPassthroughSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, supported);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_SetClientVersion(int32_t  majorVersion, int32_t  minorVersion, int32_t  patchVersion)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_SetClientVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, majorVersion, minorVersion, patchVersion);
}
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_HookGetInstanceProcAddr(::cordl_internals::intptr_t  func)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_HookGetInstanceProcAddr",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method, func);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceCreate(uint64_t  xrInstance)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnInstanceCreate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, xrInstance);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnInstanceDestroy(uint64_t  xrInstance)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnInstanceDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrInstance);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionCreate(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionCreate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnAppSpaceChange(uint64_t  xrSpace)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnAppSpaceChange",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSpace);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionStateChange(int32_t  oldState, int32_t  newState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionStateChange",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, oldState, newState);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionBegin(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionBegin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionEnd(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionEnd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionExiting(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionExiting",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_UnityOpenXR_OnSessionDestroy(uint64_t  xrSession)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_UnityOpenXR_OnSessionDestroy",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, xrSession);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_SetSuggestedCpuPerformanceLevel(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel  perfLevel)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_SetSuggestedCpuPerformanceLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfLevel);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_GetSuggestedCpuPerformanceLevel(ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>  perfLevel)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_GetSuggestedCpuPerformanceLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfLevel);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_SetSuggestedGpuPerformanceLevel(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel  perfLevel)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_SetSuggestedGpuPerformanceLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfLevel);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_71_0::ovrp_GetSuggestedGpuPerformanceLevel(ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>  perfLevel)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_71_0*>::get(),
                            "ovrp_GetSuggestedGpuPerformanceLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, perfLevel);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_CreateSpatialAnchor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_CreateSpatialAnchor)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277b7cc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_CreateSpatialAnchor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_SetSpaceComponentStatus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, ::GlobalNamespace::__OVRPlugin__Bool, double_t, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_SetSpaceComponentStatus)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x277b850;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_SetSpaceComponentStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceComponentStatus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, ByRef<::GlobalNamespace::__OVRPlugin__Bool>, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceComponentStatus)> {
  constexpr static std::size_t size = 0x98;
  constexpr static std::size_t addrs = 0x277b8fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceComponentStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_EnumerateSpaceSupportedComponents
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, uint32_t, ByRef<uint32_t>, ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_EnumerateSpaceSupportedComponents)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x277b994;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_EnumerateSpaceSupportedComponents",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_SaveSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_SaveSpace)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277ba38;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_SaveSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_QuerySpaces
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_QuerySpaces)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x277bad4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_QuerySpaces",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_RetrieveSpaceQueryResults
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, uint32_t, ByRef<uint32_t>, ::cordl_internals::intptr_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_RetrieveSpaceQueryResults)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277bbb0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_RetrieveSpaceQueryResults",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_EraseSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_EraseSpace)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277bc4c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_EraseSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceContainer
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__SpaceContainerInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceContainer)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bce0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceContainer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceContainerInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceBoundingBox2D
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__Rectf>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundingBox2D)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bd64;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceBoundingBox2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Rectf>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceBoundingBox3D
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundingBox3D)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bde8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceBoundingBox3D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceSemanticLabels
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceSemanticLabels)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277be6c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceSemanticLabels",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceRoomLayout
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__RoomLayoutInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceRoomLayout)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bef0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceRoomLayout",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RoomLayoutInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_GetSpaceBoundary2D
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277bf74;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_72_0.ovrp_RequestSceneCapture
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal>, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_RequestSceneCapture)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x277bff8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_RequestSceneCapture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_72_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_72_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_CreateSpatialAnchor(ByRef<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>  createInfo, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_CreateSpatialAnchor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_SetSpaceComponentStatus(ByRef<uint64_t>  space, ::GlobalNamespace::__OVRPlugin__SpaceComponentType  componentType, ::GlobalNamespace::__OVRPlugin__Bool  enable, double_t  timeout, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_SetSpaceComponentStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, componentType, enable, timeout, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceComponentStatus(ByRef<uint64_t>  space, ::GlobalNamespace::__OVRPlugin__SpaceComponentType  componentType, ByRef<::GlobalNamespace::__OVRPlugin__Bool>  enabled, ByRef<::GlobalNamespace::__OVRPlugin__Bool>  changePending)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceComponentStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, componentType, enabled, changePending);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_EnumerateSpaceSupportedComponents(ByRef<uint64_t>  space, uint32_t  componentTypesCapacityInput, ByRef<uint32_t>  componentTypesCountOutput, ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>  componentTypes)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_EnumerateSpaceSupportedComponents",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, componentTypesCapacityInput, componentTypesCountOutput, componentTypes);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_SaveSpace(ByRef<uint64_t>  space, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  location, ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode  mode, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_SaveSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, location, mode, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_QuerySpaces(ByRef<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>  queryInfo, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_QuerySpaces",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, queryInfo, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_RetrieveSpaceQueryResults(ByRef<uint64_t>  requestId, uint32_t  resultCapacityInput, ByRef<uint32_t>  resultCountOutput, ::cordl_internals::intptr_t  results)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_RetrieveSpaceQueryResults",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, requestId, resultCapacityInput, resultCountOutput, results);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_EraseSpace(ByRef<uint64_t>  space, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  location, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_EraseSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, location, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceContainer(ByRef<uint64_t>  space, ByRef<::GlobalNamespace::__OVRPlugin__SpaceContainerInternal>  containerInternal)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceContainer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceContainerInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, containerInternal);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundingBox2D(ByRef<uint64_t>  space, ByRef<::GlobalNamespace::__OVRPlugin__Rectf>  rect)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceBoundingBox2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Rectf>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, rect);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundingBox3D(ByRef<uint64_t>  space, ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>  bounds)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceBoundingBox3D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, bounds);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceSemanticLabels(ByRef<uint64_t>  space, ByRef<::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal>  labelsInternal)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceSemanticLabels",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceSemanticLabelInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, labelsInternal);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceRoomLayout(ByRef<uint64_t>  space, ByRef<::GlobalNamespace::__OVRPlugin__RoomLayoutInternal>  roomLayoutInternal)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceRoomLayout",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RoomLayoutInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, roomLayoutInternal);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_GetSpaceBoundary2D(ByRef<uint64_t>  space, ByRef<::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal>  boundaryInternal)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PolygonalBoundary2DInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, boundaryInternal);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_72_0::ovrp_RequestSceneCapture(ByRef<::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal>  request, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_72_0*>::get(),
                            "ovrp_RequestSceneCapture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SceneCaptureRequestInternal>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, request, requestId);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_73_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_73_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_73_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_73_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_GetSpaceUuid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::System::Guid>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetSpaceUuid)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277c1dc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_GetSpaceUuid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::System::Guid>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_CreateVirtualKeyboard
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_CreateVirtualKeyboard)> {
  constexpr static std::size_t size = 0x6c;
  constexpr static std::size_t addrs = 0x277c260;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_CreateVirtualKeyboard",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_DestroyVirtualKeyboard
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_DestroyVirtualKeyboard)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277c2cc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_DestroyVirtualKeyboard",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_SendVirtualKeyboardInput
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_SendVirtualKeyboardInput)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277c334;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_SendVirtualKeyboardInput",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_ChangeVirtualKeyboardTextContext
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_ChangeVirtualKeyboardTextContext)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277c3c8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_ChangeVirtualKeyboardTextContext",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_CreateVirtualKeyboardSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_CreateVirtualKeyboardSpace)> {
  constexpr static std::size_t size = 0x8c;
  constexpr static std::size_t addrs = 0x277c45c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_CreateVirtualKeyboardSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_SuggestVirtualKeyboardLocation
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_SuggestVirtualKeyboardLocation)> {
  constexpr static std::size_t size = 0x8c;
  constexpr static std::size_t addrs = 0x277c4e8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_SuggestVirtualKeyboardLocation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_GetVirtualKeyboardScale
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetVirtualKeyboardScale)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277c574;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_GetVirtualKeyboardScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_74_0.ovrp_GetRenderModelProperties2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ::GlobalNamespace::__OVRPlugin__RenderModelFlags, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetRenderModelProperties2)> {
  constexpr static std::size_t size = 0x100;
  constexpr static std::size_t addrs = 0x277c5f0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_GetRenderModelProperties2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__RenderModelFlags>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_74_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_74_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetSpaceUuid(ByRef<uint64_t>  space, ByRef<::System::Guid>  uuid)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_GetSpaceUuid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::System::Guid>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, uuid);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_CreateVirtualKeyboard(::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo  createInfo)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_CreateVirtualKeyboard",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_DestroyVirtualKeyboard()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_DestroyVirtualKeyboard",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_SendVirtualKeyboardInput(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo  inputInfo, ByRef<::GlobalNamespace::__OVRPlugin__Posef>  interactorRootPose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_SendVirtualKeyboardInput",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, inputInfo, interactorRootPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_ChangeVirtualKeyboardTextContext(::StringW  textContext)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_ChangeVirtualKeyboardTextContext",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textContext);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_CreateVirtualKeyboardSpace(::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo  createInfo, ByRef<uint64_t>  keyboardSpace)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_CreateVirtualKeyboardSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo, keyboardSpace);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_SuggestVirtualKeyboardLocation(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo  locationInfo)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_SuggestVirtualKeyboardLocation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, locationInfo);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetVirtualKeyboardScale(ByRef<float_t>  location)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_GetVirtualKeyboardScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, location);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_74_0::ovrp_GetRenderModelProperties2(::StringW  path, ::GlobalNamespace::__OVRPlugin__RenderModelFlags  flags, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>  properties)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_74_0*>::get(),
                            "ovrp_GetRenderModelProperties2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__RenderModelFlags>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelPropertiesInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, path, flags, properties);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_75_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_75_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_75_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_75_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_76_0.ovrp_GetNodePoseStateAtTime
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(double_t, ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_76_0::ovrp_GetNodePoseStateAtTime)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277c7f8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_76_0*>::get(),
                            "ovrp_GetNodePoseStateAtTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_76_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_76_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_76_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_76_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_76_0::ovrp_GetNodePoseStateAtTime(double_t  time, ::GlobalNamespace::__OVRPlugin__Node  nodeId, ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>  nodePoseState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_76_0*>::get(),
                            "ovrp_GetNodePoseStateAtTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PoseStatef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, time, nodeId, nodePoseState);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetPassthroughCapabilityFlags
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetPassthroughCapabilityFlags)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277c910;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetPassthroughCapabilityFlags",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFoveationEyeTrackedSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFoveationEyeTrackedSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277c98c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFoveationEyeTrackedSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFoveationEyeTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFoveationEyeTracked)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ca08;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFoveationEyeTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetFoveationEyeTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetFoveationEyeTracked)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ca84;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetFoveationEyeTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StartFaceTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartFaceTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cb00;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StartFaceTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StopFaceTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopFaceTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cb68;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StopFaceTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StartBodyTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartBodyTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cbd0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StartBodyTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StopBodyTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopBodyTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cc38;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StopBodyTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StartEyeTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartEyeTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cca0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StartEyeTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_StopEyeTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopEyeTracking)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277cd08;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StopEyeTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetEyeTrackingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeTrackingSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277cd70;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetEyeTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFaceTrackingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceTrackingSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277cdec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFaceTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetBodyTrackingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyTrackingEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ce68;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetBodyTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetBodyTrackingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyTrackingSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277cee4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetBodyTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetBodyState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__BodyStateInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277cf60;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetBodyState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__BodyStateInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFaceTrackingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceTrackingEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277cff4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFaceTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetFaceState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__FaceStateInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277d070;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFaceState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceStateInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetEyeTrackingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeTrackingEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d104;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetEyeTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetEyeGazesState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeGazesState)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277d180;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetEyeGazesState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetControllerState5
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, ByRef<::GlobalNamespace::__OVRPlugin__ControllerState5>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetControllerState5)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d214;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetControllerState5",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState5>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetControllerLocalizedVibration
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsLocation, float_t, float_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerLocalizedVibration)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277d298;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetControllerLocalizedVibration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetLocalDimmingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetLocalDimmingSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d334;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetLocalDimmingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetLocalDimming
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetLocalDimming)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d3b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetLocalDimming",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetLocalDimming
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetLocalDimming)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d42c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetLocalDimming",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetCurrentInteractionProfile
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Hand, ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetCurrentInteractionProfile)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d4a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetCurrentInteractionProfile",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetControllerHapticsAmplitudeEnvelope
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerHapticsAmplitudeEnvelope)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277d52c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetControllerHapticsAmplitudeEnvelope",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_SetControllerHapticsPcm
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerHapticsPcm)> {
  constexpr static std::size_t size = 0x8c;
  constexpr static std::size_t addrs = 0x277d5c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetControllerHapticsPcm",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsPcmVibration>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_78_0.ovrp_GetControllerSampleRateHz
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Controller, ByRef<float_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetControllerSampleRateHz)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d64c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetControllerSampleRateHz",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_78_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_78_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetPassthroughCapabilityFlags(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags>  capabilityFlags)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetPassthroughCapabilityFlags",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, capabilityFlags);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFoveationEyeTrackedSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  foveationSupported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFoveationEyeTrackedSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, foveationSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFoveationEyeTracked(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  isEyeTrackedFoveation)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFoveationEyeTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isEyeTrackedFoveation);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetFoveationEyeTracked(::GlobalNamespace::__OVRPlugin__Bool  isEyeTrackedFoveation)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetFoveationEyeTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, isEyeTrackedFoveation);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartFaceTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StartFaceTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopFaceTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StopFaceTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartBodyTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StartBodyTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopBodyTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StopBodyTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StartEyeTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StartEyeTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_StopEyeTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_StopEyeTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeTrackingSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  eyeTrackingSupported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetEyeTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, eyeTrackingSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceTrackingSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  faceTrackingSupported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFaceTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, faceTrackingSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyTrackingEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetBodyTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyTrackingSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetBodyTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetBodyState(::GlobalNamespace::__OVRPlugin__Step  stepId, int32_t  frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__BodyStateInternal>  bodyState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetBodyState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__BodyStateInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, bodyState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceTrackingEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  faceTrackingEnabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFaceTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, faceTrackingEnabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetFaceState(::GlobalNamespace::__OVRPlugin__Step  stepId, int32_t  frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__FaceStateInternal>  faceState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetFaceState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceStateInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, faceState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeTrackingEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  eyeTrackingEnabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetEyeTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, eyeTrackingEnabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetEyeGazesState(::GlobalNamespace::__OVRPlugin__Step  stepId, int32_t  frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal>  eyeGazesState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetEyeGazesState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, frameIndex, eyeGazesState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetControllerState5(uint32_t  controllerMask, ByRef<::GlobalNamespace::__OVRPlugin__ControllerState5>  controllerState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetControllerState5",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState5>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, controllerState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerLocalizedVibration(::GlobalNamespace::__OVRPlugin__Controller  controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsLocation  hapticsLocationMask, float_t  frequency, float_t  amplitude)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetControllerLocalizedVibration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, hapticsLocationMask, frequency, amplitude);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetLocalDimmingSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  localDimmingSupported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetLocalDimmingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, localDimmingSupported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetLocalDimming(::GlobalNamespace::__OVRPlugin__Bool  localDimmingMode)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetLocalDimming",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, localDimmingMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetLocalDimming(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  localDimmingMode)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetLocalDimming",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, localDimmingMode);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetCurrentInteractionProfile(::GlobalNamespace::__OVRPlugin__Hand  hand, ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>  interactionProfile)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetCurrentInteractionProfile",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, hand, interactionProfile);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerHapticsAmplitudeEnvelope(::GlobalNamespace::__OVRPlugin__Controller  controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration  hapticsVibration)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetControllerHapticsAmplitudeEnvelope",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, hapticsVibration);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_SetControllerHapticsPcm(::GlobalNamespace::__OVRPlugin__Controller  controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration  hapticsVibration)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_SetControllerHapticsPcm",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsPcmVibration>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, hapticsVibration);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_78_0::ovrp_GetControllerSampleRateHz(::GlobalNamespace::__OVRPlugin__Controller  controller, ByRef<float_t>  sampleRateHz)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_78_0*>::get(),
                            "ovrp_GetControllerSampleRateHz",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controller, sampleRateHz);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_ShareSpaces
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::Ptr<uint64_t>, uint32_t, ::cordl_internals::Ptr<uint64_t>, uint32_t, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_ShareSpaces)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x277d754;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_ShareSpaces",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_SaveSpaceList
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::cordl_internals::Ptr<uint64_t>, uint32_t, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_SaveSpaceList)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x277d800;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_SaveSpaceList",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_GetSpaceUserId
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_GetSpaceUserId)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d89c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_GetSpaceUserId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_CreateSpaceUser
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_CreateSpaceUser)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277d920;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_CreateSpaceUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_DestroySpaceUser
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_DestroySpaceUser)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277d9a4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_DestroySpaceUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_LocateSpace2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationf>, ByRef<uint64_t>, ::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_LocateSpace2)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277da20;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_LocateSpace2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_DeclareUser
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_DeclareUser)> {
  constexpr static std::size_t size = 0x80;
  constexpr static std::size_t addrs = 0x277dab4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_DeclareUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplMarkerStart
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, int32_t, int64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerStart)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x2771c94;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplMarkerStart",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplMarkerEnd
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::GlobalNamespace::__OVRPlugin__Qpl__ResultType, int32_t, int64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerEnd)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x2771e18;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplMarkerEnd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Qpl__ResultType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplMarkerPointCached
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, int32_t, int32_t, int64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerPointCached)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x2771fa4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplMarkerPointCached",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplMarkerAnnotation
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ::StringW, ::StringW, int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerAnnotation)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2772130;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplMarkerAnnotation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplCreateMarkerHandle
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW, ByRef<int32_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplCreateMarkerHandle)> {
  constexpr static std::size_t size = 0x9c;
  constexpr static std::size_t addrs = 0x27722d4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplCreateMarkerHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_79_0.ovrp_QplDestroyMarkerHandle
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplDestroyMarkerHandle)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2772438;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplDestroyMarkerHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_79_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_79_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_ShareSpaces(::cordl_internals::Ptr<uint64_t>  spaces, uint32_t  numSpaces, ::cordl_internals::Ptr<uint64_t>  userHandles, uint32_t  numUsers, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_ShareSpaces",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaces, numSpaces, userHandles, numUsers, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_SaveSpaceList(::cordl_internals::Ptr<uint64_t>  spaces, uint32_t  numSpaces, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  location, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_SaveSpaceList",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::Ptr<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaces, numSpaces, location, requestId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_GetSpaceUserId(ByRef<uint64_t>  spaceUserHandle, ByRef<uint64_t>  spaceUserId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_GetSpaceUserId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaceUserHandle, spaceUserId);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_CreateSpaceUser(ByRef<uint64_t>  spaceUserId, ByRef<uint64_t>  spaceUserHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_CreateSpaceUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaceUserId, spaceUserHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_DestroySpaceUser(ByRef<uint64_t>  userHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_DestroySpaceUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, userHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_LocateSpace2(ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationf>  location, ByRef<uint64_t>  space, ::GlobalNamespace::__OVRPlugin__TrackingOrigin  trackingOrigin)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_LocateSpace2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, location, space, trackingOrigin);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_DeclareUser(ByRef<uint64_t>  userId, ByRef<uint64_t>  userHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_DeclareUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, userId, userHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerStart(int32_t  markerId, int32_t  instanceKey, int64_t  timestampMs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplMarkerStart",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, markerId, instanceKey, timestampMs);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerEnd(int32_t  markerId, ::GlobalNamespace::__OVRPlugin__Qpl__ResultType  resultTypeId, int32_t  instanceKey, int64_t  timestampMs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplMarkerEnd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Qpl__ResultType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, markerId, resultTypeId, instanceKey, timestampMs);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerPointCached(int32_t  markerId, int32_t  nameHandle, int32_t  instanceKey, int64_t  timestampMs)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplMarkerPointCached",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, markerId, nameHandle, instanceKey, timestampMs);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplMarkerAnnotation(int32_t  markerId, ::StringW  annotationKey, ::StringW  annotationValue, int32_t  instanceKey)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplMarkerAnnotation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, markerId, annotationKey, annotationValue, instanceKey);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplCreateMarkerHandle(::StringW  name, ByRef<int32_t>  nameHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplCreateMarkerHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, name, nameHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_79_0::ovrp_QplDestroyMarkerHandle(int32_t  nameHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_79_0*>::get(),
                            "ovrp_QplDestroyMarkerHandle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, nameHandle);
}
inline void GlobalNamespace::__OVRPlugin__OVRP_1_81_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_81_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_81_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_81_0*>::get>();
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_82_0.ovrp_GetSpaceTriangleMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<uint64_t>, ByRef<::GlobalNamespace::__OVRPlugin__TriangleMeshInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_82_0::ovrp_GetSpaceTriangleMesh)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277dc3c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_82_0*>::get(),
                            "ovrp_GetSpaceTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__TriangleMeshInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_82_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_82_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_82_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_82_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_82_0::ovrp_GetSpaceTriangleMesh(ByRef<uint64_t>  space, ByRef<::GlobalNamespace::__OVRPlugin__TriangleMeshInternal>  triangleMeshInternal)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_82_0*>::get(),
                            "ovrp_GetSpaceTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__TriangleMeshInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, triangleMeshInternal);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_GetControllerState6
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint32_t, ByRef<::GlobalNamespace::__OVRPlugin__ControllerState6>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetControllerState6)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277dd44;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_GetControllerState6",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState6>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_GetVirtualKeyboardModelAnimationStates
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardModelAnimationStates)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ddc8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_GetVirtualKeyboardModelAnimationStates",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_GetVirtualKeyboardDirtyTextures
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardDirtyTextures)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277de44;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_GetVirtualKeyboardDirtyTextures",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_GetVirtualKeyboardTextureData
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardTextureData)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277dec0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_GetVirtualKeyboardTextureData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_83_0.ovrp_SetVirtualKeyboardModelVisibility
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_SetVirtualKeyboardModelVisibility)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277df44;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_SetVirtualKeyboardModelVisibility",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_83_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_83_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetControllerState6(uint32_t  controllerMask, ByRef<::GlobalNamespace::__OVRPlugin__ControllerState6>  controllerState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_GetControllerState6",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__ControllerState6>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerMask, controllerState);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardModelAnimationStates(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal>  animationStates)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_GetVirtualKeyboardModelAnimationStates",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStatesInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, animationStates);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardDirtyTextures(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal>  textureIds)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_GetVirtualKeyboardDirtyTextures",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIdsInternal>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textureIds);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_GetVirtualKeyboardTextureData(uint64_t  textureId, ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>  textureData)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_GetVirtualKeyboardTextureData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textureId, textureData);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_83_0::ovrp_SetVirtualKeyboardModelVisibility(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>  visibility)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_83_0*>::get(),
                            "ovrp_SetVirtualKeyboardModelVisibility",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, visibility);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_CreatePassthroughColorLut
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels, uint32_t, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData, ByRef<uint64_t>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_CreatePassthroughColorLut)> {
  constexpr static std::size_t size = 0xac;
  constexpr static std::size_t addrs = 0x277e044;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_CreatePassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_DestroyPassthroughColorLut
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_DestroyPassthroughColorLut)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e0f0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_DestroyPassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_UpdatePassthroughColorLut
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_UpdatePassthroughColorLut)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277e16c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_UpdatePassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_SetInsightPassthroughStyle2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_SetInsightPassthroughStyle2)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277e200;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_SetInsightPassthroughStyle2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_GetLayerRecommendedResolution
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_GetLayerRecommendedResolution)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277e284;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_GetLayerRecommendedResolution",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_84_0.ovrp_GetEyeLayerRecommendedResolution
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_GetEyeLayerRecommendedResolution)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e308;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_GetEyeLayerRecommendedResolution",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_84_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_84_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_CreatePassthroughColorLut(::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels  channels, uint32_t  resolution, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData  data, ByRef<uint64_t>  colorLut)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_CreatePassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, channels, resolution, data, colorLut);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_DestroyPassthroughColorLut(uint64_t  colorLut)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_DestroyPassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorLut);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_UpdatePassthroughColorLut(uint64_t  colorLut, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData  data)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_UpdatePassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, colorLut, data);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_SetInsightPassthroughStyle2(int32_t  layerId, ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>  style)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_SetInsightPassthroughStyle2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, style);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_GetLayerRecommendedResolution(int32_t  layerId, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>  recommendedDimensions)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_GetLayerRecommendedResolution",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, layerId, recommendedDimensions);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_84_0::ovrp_GetEyeLayerRecommendedResolution(ByRef<::GlobalNamespace::__OVRPlugin__Sizei>  recommendedDimensions)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_84_0*>::get(),
                            "ovrp_GetEyeLayerRecommendedResolution",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, recommendedDimensions);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_85_0.ovrp_OnEditorShutdown
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::__OVRPlugin__OVRP_1_85_0::ovrp_OnEditorShutdown)> {
  constexpr static std::size_t size = 0x68;
  constexpr static std::size_t addrs = 0x277e408;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get(),
                            "ovrp_OnEditorShutdown",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_85_0.ovrp_GetPassthroughCapabilities
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_85_0::ovrp_GetPassthroughCapabilities)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e470;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get(),
                            "ovrp_GetPassthroughCapabilities",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_85_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_85_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_85_0::ovrp_OnEditorShutdown()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get(),
                            "ovrp_OnEditorShutdown",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_85_0::ovrp_GetPassthroughCapabilities(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>  capabilityFlags)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_85_0*>::get(),
                            "ovrp_GetPassthroughCapabilities",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, capabilityFlags);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_SetControllerDrivenHandPoses
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_SetControllerDrivenHandPoses)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e570;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_SetControllerDrivenHandPoses",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_IsControllerDrivenHandPosesEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_IsControllerDrivenHandPosesEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e5ec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_IsControllerDrivenHandPosesEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_AreHandPosesGeneratedByControllerData
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_AreHandPosesGeneratedByControllerData)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277e668;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_AreHandPosesGeneratedByControllerData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_SetMultimodalHandsControllersSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_SetMultimodalHandsControllersSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e6fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_SetMultimodalHandsControllersSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_IsMultimodalHandsControllersSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_IsMultimodalHandsControllersSupported)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e778;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_IsMultimodalHandsControllersSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_GetCurrentDetachedInteractionProfile
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Hand, ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_GetCurrentDetachedInteractionProfile)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x277e7f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_GetCurrentDetachedInteractionProfile",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_86_0.ovrp_GetControllerIsInHand
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_GetControllerIsInHand)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x277e878;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_GetControllerIsInHand",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_86_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_86_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_SetControllerDrivenHandPoses(::GlobalNamespace::__OVRPlugin__Bool  controllerDrivenHandPoses)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_SetControllerDrivenHandPoses",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerDrivenHandPoses);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_IsControllerDrivenHandPosesEnabled(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  enabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_IsControllerDrivenHandPosesEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_AreHandPosesGeneratedByControllerData(::GlobalNamespace::__OVRPlugin__Step  stepId, ::GlobalNamespace::__OVRPlugin__Node  nodeId, ByRef<::GlobalNamespace::__OVRPlugin__Bool>  isGeneratedByControllerData)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_AreHandPosesGeneratedByControllerData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, nodeId, isGeneratedByControllerData);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_SetMultimodalHandsControllersSupported(::GlobalNamespace::__OVRPlugin__Bool  supported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_SetMultimodalHandsControllersSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, supported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_IsMultimodalHandsControllersSupported(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  supported)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_IsMultimodalHandsControllersSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, supported);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_GetCurrentDetachedInteractionProfile(::GlobalNamespace::__OVRPlugin__Hand  hand, ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>  interactionProfile)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_GetCurrentDetachedInteractionProfile",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__InteractionProfile>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, hand, interactionProfile);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_86_0::ovrp_GetControllerIsInHand(::GlobalNamespace::__OVRPlugin__Step  stepId, ::GlobalNamespace::__OVRPlugin__Node  nodeId, ByRef<::GlobalNamespace::__OVRPlugin__Bool>  isInHand)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_86_0*>::get(),
                            "ovrp_GetControllerIsInHand",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, stepId, nodeId, isInHand);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_87_0.ovrp_GetPassthroughPreferences
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_GetPassthroughPreferences)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277e990;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(),
                            "ovrp_GetPassthroughPreferences",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_87_0.ovrp_SetEyeBufferSharpenType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__LayerSharpenType)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_SetEyeBufferSharpenType)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ea0c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(),
                            "ovrp_SetEyeBufferSharpenType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerSharpenType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_87_0.ovrp_SetControllerDrivenHandPosesAreNatural
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_SetControllerDrivenHandPosesAreNatural)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ea88;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(),
                            "ovrp_SetControllerDrivenHandPosesAreNatural",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_87_0.ovrp_AreControllerDrivenHandPosesNatural
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__Bool>)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_AreControllerDrivenHandPosesNatural)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277eb04;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(),
                            "ovrp_AreControllerDrivenHandPosesNatural",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_87_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_87_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_GetPassthroughPreferences(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>  preferences)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(),
                            "ovrp_GetPassthroughPreferences",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, preferences);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_SetEyeBufferSharpenType(::GlobalNamespace::__OVRPlugin__LayerSharpenType  sharpenType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(),
                            "ovrp_SetEyeBufferSharpenType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerSharpenType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, sharpenType);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_SetControllerDrivenHandPosesAreNatural(::GlobalNamespace::__OVRPlugin__Bool  controllerDrivenHandPosesAreNatural)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(),
                            "ovrp_SetControllerDrivenHandPosesAreNatural",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, controllerDrivenHandPosesAreNatural);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_87_0::ovrp_AreControllerDrivenHandPosesNatural(ByRef<::GlobalNamespace::__OVRPlugin__Bool>  natural)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_87_0*>::get(),
                            "ovrp_AreControllerDrivenHandPosesNatural",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, natural);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__OVRP_1_88_0.ovrp_SetSimultaneousHandsAndControllersEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::__OVRPlugin__OVRP_1_88_0::ovrp_SetSimultaneousHandsAndControllersEnabled)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x277ec04;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_88_0*>::get(),
                            "ovrp_SetSimultaneousHandsAndControllersEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::__OVRPlugin__OVRP_1_88_0::setStaticF_version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_88_0*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::__OVRPlugin__OVRP_1_88_0::getStaticF_version()  {
return ::cordl_internals::getStaticField<::System::Version*, "version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_88_0*>::get>();
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::__OVRPlugin__OVRP_1_88_0::ovrp_SetSimultaneousHandsAndControllersEnabled(::GlobalNamespace::__OVRPlugin__Bool  enabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__OVRP_1_88_0*>::get(),
                            "ovrp_SetSimultaneousHandsAndControllersEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, enabled);
}
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_version
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Version* (*)()>(&::GlobalNamespace::OVRPlugin::get_version)> {
  constexpr static std::size_t size = 0x560;
  constexpr static std::size_t addrs = 0x27542f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_version",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_nativeSDKVersion
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Version* (*)()>(&::GlobalNamespace::OVRPlugin::get_nativeSDKVersion)> {
  constexpr static std::size_t size = 0x2bc;
  constexpr static std::size_t addrs = 0x2754854;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_nativeSDKVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsSuccess
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Result)>(&::GlobalNamespace::OVRPlugin::IsSuccess)> {
  constexpr static std::size_t size = 0xc;
  constexpr static std::size_t addrs = 0x2754b10;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsSuccess",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Result>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetLogCallback2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*)>(&::GlobalNamespace::OVRPlugin::SetLogCallback2)> {
  constexpr static std::size_t size = 0x108;
  constexpr static std::size_t addrs = 0x2754b1c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetLogCallback2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsPassthroughShape
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__OverlayShape)>(&::GlobalNamespace::OVRPlugin::IsPassthroughShape)> {
  constexpr static std::size_t size = 0x30;
  constexpr static std::size_t addrs = 0x2754c24;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsPassthroughShape",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsPositionValid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags)>(&::GlobalNamespace::OVRPlugin::IsPositionValid)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2754c54;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsPositionValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsOrientationValid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags)>(&::GlobalNamespace::OVRPlugin::IsOrientationValid)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2754c5c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsOrientationValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsPositionTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags)>(&::GlobalNamespace::OVRPlugin::IsPositionTracked)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2754c64;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsPositionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsOrientationTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags)>(&::GlobalNamespace::OVRPlugin::IsOrientationTracked)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x2754c6c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsOrientationTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GuidToUuidString
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Guid)>(&::GlobalNamespace::OVRPlugin::GuidToUuidString)> {
  constexpr static std::size_t size = 0x17c;
  constexpr static std::size_t addrs = 0x2754c74;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GuidToUuidString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Guid>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_initialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_initialized)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x2754df0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_initialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_nativeXrApi
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__XrApi (*)()>(&::GlobalNamespace::OVRPlugin::get_nativeXrApi)> {
  constexpr static std::size_t size = 0x19c;
  constexpr static std::size_t addrs = 0x2754e4c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_nativeXrApi",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_chromatic
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_chromatic)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x2754fe8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_chromatic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_chromatic
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_chromatic)> {
  constexpr static std::size_t size = 0xf8;
  constexpr static std::size_t addrs = 0x27550c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_chromatic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_monoscopic
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_monoscopic)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x27551c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_monoscopic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_monoscopic
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_monoscopic)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x2755250;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_monoscopic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_rotation
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_rotation)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x27552f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_rotation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_rotation
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_rotation)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x2755384;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_rotation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_position
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_position)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2755428;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_position",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_position
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_position)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x27554b8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_position",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_useIPDInPositionTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_useIPDInPositionTracking)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x275555c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_useIPDInPositionTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_useIPDInPositionTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_useIPDInPositionTracking)> {
  constexpr static std::size_t size = 0xf8;
  constexpr static std::size_t addrs = 0x2755634;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_useIPDInPositionTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_positionSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_positionSupported)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x275572c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_positionSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_positionTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_positionTracked)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27557bc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_positionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_powerSaving
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_powerSaving)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2755850;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_powerSaving",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_hmdPresent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_hmdPresent)> {
  constexpr static std::size_t size = 0x94;
  constexpr static std::size_t addrs = 0x27558e0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_hmdPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_userPresent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_userPresent)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2755974;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_userPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_headphonesPresent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_headphonesPresent)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2755a04;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_headphonesPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_recommendedMSAALevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::get_recommendedMSAALevel)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2755a94;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_recommendedMSAALevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_systemRegion
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__SystemRegion (*)()>(&::GlobalNamespace::OVRPlugin::get_systemRegion)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2755b68;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_systemRegion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_audioOutId
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::OVRPlugin::get_audioOutId)> {
  constexpr static std::size_t size = 0x314;
  constexpr static std::size_t addrs = 0x2755c3c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_audioOutId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_audioInId
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::OVRPlugin::get_audioInId)> {
  constexpr static std::size_t size = 0x314;
  constexpr static std::size_t addrs = 0x2755f58;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_audioInId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_hasVrFocus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_hasVrFocus)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x275626c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_hasVrFocus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_hasInputFocus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_hasInputFocus)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x27562c8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_hasInputFocus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_shouldQuit
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_shouldQuit)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x27563a4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_shouldQuit",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_shouldRecenter
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_shouldRecenter)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x2756400;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_shouldRecenter",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_productName
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::OVRPlugin::get_productName)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x275645c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_productName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_latency
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&::GlobalNamespace::OVRPlugin::get_latency)> {
  constexpr static std::size_t size = 0xa8;
  constexpr static std::size_t addrs = 0x27564ac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_latency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeDepth
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeDepth)> {
  constexpr static std::size_t size = 0x8c;
  constexpr static std::size_t addrs = 0x2756554;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeDepth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_eyeDepth
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float_t)>(&::GlobalNamespace::OVRPlugin::set_eyeDepth)> {
  constexpr static std::size_t size = 0x60;
  constexpr static std::size_t addrs = 0x27565e0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_eyeDepth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeHeight
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeHeight)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756640;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_eyeHeight
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float_t)>(&::GlobalNamespace::OVRPlugin::set_eyeHeight)> {
  constexpr static std::size_t size = 0x60;
  constexpr static std::size_t addrs = 0x2756690;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_eyeHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_batteryLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_batteryLevel)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x27566f0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_batteryLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_batteryTemperature
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_batteryTemperature)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756740;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_batteryTemperature",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_suggestedCpuPerfLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel (*)()>(&::GlobalNamespace::OVRPlugin::get_suggestedCpuPerfLevel)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2756790;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_suggestedCpuPerfLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_suggestedCpuPerfLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel)>(&::GlobalNamespace::OVRPlugin::set_suggestedCpuPerfLevel)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2756860;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_suggestedCpuPerfLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_suggestedGpuPerfLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel (*)()>(&::GlobalNamespace::OVRPlugin::get_suggestedGpuPerfLevel)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2756920;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_suggestedGpuPerfLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_suggestedGpuPerfLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel)>(&::GlobalNamespace::OVRPlugin::set_suggestedGpuPerfLevel)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27569f0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_suggestedGpuPerfLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_cpuLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::get_cpuLevel)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756ab0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_cpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_cpuLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::set_cpuLevel)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756b00;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_cpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_gpuLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::get_gpuLevel)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756b58;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_gpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_gpuLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::set_gpuLevel)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756ba8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_gpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_vsyncCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::get_vsyncCount)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756c00;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_vsyncCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_vsyncCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::set_vsyncCount)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756c50;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_vsyncCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_systemVolume
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_systemVolume)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756ca8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_systemVolume",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_ipd
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_ipd)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756cf8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_ipd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_ipd
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float_t)>(&::GlobalNamespace::OVRPlugin::set_ipd)> {
  constexpr static std::size_t size = 0x60;
  constexpr static std::size_t addrs = 0x2756d48;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_ipd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_occlusionMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_occlusionMesh)> {
  constexpr static std::size_t size = 0x90;
  constexpr static std::size_t addrs = 0x2756da8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_occlusionMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_occlusionMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_occlusionMesh)> {
  constexpr static std::size_t size = 0xa4;
  constexpr static std::size_t addrs = 0x2756e38;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_occlusionMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_batteryStatus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BatteryStatus (*)()>(&::GlobalNamespace::OVRPlugin::get_batteryStatus)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x2756edc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_batteryStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeFrustum
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Frustumf (*)(::GlobalNamespace::__OVRPlugin__Eye)>(&::GlobalNamespace::OVRPlugin::GetEyeFrustum)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756f2c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeFrustum",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeTextureSize
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Sizei (*)(::GlobalNamespace::__OVRPlugin__Eye)>(&::GlobalNamespace::OVRPlugin::GetEyeTextureSize)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2756f84;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeTextureSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackerPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Tracker)>(&::GlobalNamespace::OVRPlugin::GetTrackerPose)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2756fdc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackerPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Tracker>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackerFrustum
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Frustumf (*)(::GlobalNamespace::__OVRPlugin__Tracker)>(&::GlobalNamespace::OVRPlugin::GetTrackerFrustum)> {
  constexpr static std::size_t size = 0x58;
  constexpr static std::size_t addrs = 0x2757288;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackerFrustum",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Tracker>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ShowUI
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__PlatformUI)>(&::GlobalNamespace::OVRPlugin::ShowUI)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27572e0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ShowUI",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PlatformUI>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EnqueueSubmitLayer
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool, bool, bool, ::cordl_internals::intptr_t, ::cordl_internals::intptr_t, int32_t, int32_t, ::GlobalNamespace::__OVRPlugin__Posef, ::GlobalNamespace::__OVRPlugin__Vector3f, int32_t, ::GlobalNamespace::__OVRPlugin__OverlayShape, bool, ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf, bool, ::UnityEngine::Vector4, ::UnityEngine::Vector4, bool, bool, bool, bool, bool, bool, bool, bool)>(&::GlobalNamespace::OVRPlugin::EnqueueSubmitLayer)> {
  constexpr static std::size_t size = 0x568;
  constexpr static std::size_t addrs = 0x2757344;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EnqueueSubmitLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CalculateLayerDesc
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__LayerDesc (*)(::GlobalNamespace::__OVRPlugin__OverlayShape, ::GlobalNamespace::__OVRPlugin__LayerLayout, ::GlobalNamespace::__OVRPlugin__Sizei, int32_t, int32_t, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat, int32_t)>(&::GlobalNamespace::OVRPlugin::CalculateLayerDesc)> {
  constexpr static std::size_t size = 0x198;
  constexpr static std::size_t addrs = 0x27578ac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CalculateLayerDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerLayout>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EnqueueSetupLayer
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__LayerDesc, int32_t, ::cordl_internals::intptr_t)>(&::GlobalNamespace::OVRPlugin::EnqueueSetupLayer)> {
  constexpr static std::size_t size = 0x208;
  constexpr static std::size_t addrs = 0x2757a44;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EnqueueSetupLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EnqueueDestroyLayer
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::cordl_internals::intptr_t)>(&::GlobalNamespace::OVRPlugin::EnqueueDestroyLayer)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x2757c4c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EnqueueDestroyLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLayerTexture
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)(int32_t, int32_t, ::GlobalNamespace::__OVRPlugin__Eye)>(&::GlobalNamespace::OVRPlugin::GetLayerTexture)> {
  constexpr static std::size_t size = 0x124;
  constexpr static std::size_t addrs = 0x2757d2c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLayerTexture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLayerTextureStageCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::GetLayerTextureStageCount)> {
  constexpr static std::size_t size = 0xfc;
  constexpr static std::size_t addrs = 0x2757e50;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLayerTextureStageCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLayerAndroidSurfaceObject
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::GetLayerAndroidSurfaceObject)> {
  constexpr static std::size_t size = 0x10c;
  constexpr static std::size_t addrs = 0x2757f4c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLayerAndroidSurfaceObject",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.UpdateNodePhysicsPoses
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, double_t)>(&::GlobalNamespace::OVRPlugin::UpdateNodePhysicsPoses)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2758058;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "UpdateNodePhysicsPoses",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodePose)> {
  constexpr static std::size_t size = 0x228;
  constexpr static std::size_t addrs = 0x2757060;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeVelocity
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodeVelocity)> {
  constexpr static std::size_t size = 0x20c;
  constexpr static std::size_t addrs = 0x2758134;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeVelocity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeAngularVelocity
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodeAngularVelocity)> {
  constexpr static std::size_t size = 0x150;
  constexpr static std::size_t addrs = 0x2758340;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeAngularVelocity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeAcceleration
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodeAcceleration)> {
  constexpr static std::size_t size = 0x20c;
  constexpr static std::size_t addrs = 0x2758490;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeAcceleration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeAngularAcceleration
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodeAngularAcceleration)> {
  constexpr static std::size_t size = 0x150;
  constexpr static std::size_t addrs = 0x275869c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeAngularAcceleration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePresent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodePresent)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27587ec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeOrientationTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodeOrientationTracked)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x2758850;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeOrientationTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeOrientationValid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodeOrientationValid)> {
  constexpr static std::size_t size = 0x104;
  constexpr static std::size_t addrs = 0x27588b4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeOrientationValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePositionTracked
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodePositionTracked)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x27589b8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePositionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePositionValid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodePositionValid)> {
  constexpr static std::size_t size = 0x104;
  constexpr static std::size_t addrs = 0x2758a1c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePositionValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePoseStateRaw
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__PoseStatef (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__Step)>(&::GlobalNamespace::OVRPlugin::GetNodePoseStateRaw)> {
  constexpr static std::size_t size = 0x238;
  constexpr static std::size_t addrs = 0x2758b20;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePoseStateRaw",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePoseStateAtTime
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__PoseStatef (*)(double_t, ::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodePoseStateAtTime)> {
  constexpr static std::size_t size = 0x138;
  constexpr static std::size_t addrs = 0x2758d58;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePoseStateAtTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodePoseStateImmediate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__PoseStatef (*)(::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetNodePoseStateImmediate)> {
  constexpr static std::size_t size = 0x128;
  constexpr static std::size_t addrs = 0x2758e90;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePoseStateImmediate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.AreHandPosesGeneratedByControllerData
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::AreHandPosesGeneratedByControllerData)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x2758fb8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "AreHandPosesGeneratedByControllerData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetSimultaneousHandsAndControllersEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetSimultaneousHandsAndControllersEnabled)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x27590ac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetSimultaneousHandsAndControllersEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerIsInHand
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Node)>(&::GlobalNamespace::OVRPlugin::GetControllerIsInHand)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2759178;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerIsInHand",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetCurrentTrackingTransformPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)()>(&::GlobalNamespace::OVRPlugin::GetCurrentTrackingTransformPose)> {
  constexpr static std::size_t size = 0x120;
  constexpr static std::size_t addrs = 0x2759268;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetCurrentTrackingTransformPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackingTransformRawPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)()>(&::GlobalNamespace::OVRPlugin::GetTrackingTransformRawPose)> {
  constexpr static std::size_t size = 0x120;
  constexpr static std::size_t addrs = 0x2759388;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackingTransformRawPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackingTransformRelativePose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::OVRPlugin::GetTrackingTransformRelativePose)> {
  constexpr static std::size_t size = 0x160;
  constexpr static std::size_t addrs = 0x27594a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackingTransformRelativePose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2759608;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState2 (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState2)> {
  constexpr static std::size_t size = 0x144;
  constexpr static std::size_t addrs = 0x275968c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState4
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState4 (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState4)> {
  constexpr static std::size_t size = 0x15c;
  constexpr static std::size_t addrs = 0x27597d0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState4",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState5
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState5 (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState5)> {
  constexpr static std::size_t size = 0x164;
  constexpr static std::size_t addrs = 0x275992c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState5",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerState6
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ControllerState6 (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerState6)> {
  constexpr static std::size_t size = 0x168;
  constexpr static std::size_t addrs = 0x2759a90;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState6",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetCurrentInteractionProfile
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__InteractionProfile (*)(::GlobalNamespace::__OVRPlugin__Hand)>(&::GlobalNamespace::OVRPlugin::GetCurrentInteractionProfile)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2759bf8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetCurrentInteractionProfile",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetCurrentDetachedInteractionProfile
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__InteractionProfile (*)(::GlobalNamespace::__OVRPlugin__Hand)>(&::GlobalNamespace::OVRPlugin::GetCurrentDetachedInteractionProfile)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x2759ccc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetCurrentDetachedInteractionProfile",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerVibration
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint32_t, float_t, float_t)>(&::GlobalNamespace::OVRPlugin::SetControllerVibration)> {
  constexpr static std::size_t size = 0x7c;
  constexpr static std::size_t addrs = 0x2759da0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerVibration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerLocalizedVibration
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsLocation, float_t, float_t)>(&::GlobalNamespace::OVRPlugin::SetControllerLocalizedVibration)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2759e1c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerLocalizedVibration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerHapticsAmplitudeEnvelope
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration)>(&::GlobalNamespace::OVRPlugin::SetControllerHapticsAmplitudeEnvelope)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x2759f0c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerHapticsAmplitudeEnvelope",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerHapticsPcm
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Controller, ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration)>(&::GlobalNamespace::OVRPlugin::SetControllerHapticsPcm)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x2759fec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerHapticsPcm",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsPcmVibration>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerSampleRateHz
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Controller, ByRef<float_t>)>(&::GlobalNamespace::OVRPlugin::GetControllerSampleRateHz)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x275a0dc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerSampleRateHz",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerHapticsDesc
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__HapticsDesc (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerHapticsDesc)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275a1b8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerHapticsDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetControllerHapticsState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__HapticsState (*)(uint32_t)>(&::GlobalNamespace::OVRPlugin::GetControllerHapticsState)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x275a2a4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerHapticsState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerHaptics
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint32_t, ::GlobalNamespace::__OVRPlugin__HapticsBuffer)>(&::GlobalNamespace::OVRPlugin::SetControllerHaptics)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275a368;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerHaptics",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsBuffer>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeRecommendedResolutionScale
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::GetEyeRecommendedResolutionScale)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275a448;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeRecommendedResolutionScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetAppCpuStartToGpuEndTime
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::GetAppCpuStartToGpuEndTime)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275a504;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetAppCpuStartToGpuEndTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryConfigured
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::GetBoundaryConfigured)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275a5c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryConfigured",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.TestBoundaryNode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryTestResult (*)(::GlobalNamespace::__OVRPlugin__Node, ::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::OVRPlugin::TestBoundaryNode)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275a680;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "TestBoundaryNode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.TestBoundaryPoint
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryTestResult (*)(::GlobalNamespace::__OVRPlugin__Vector3f, ::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::OVRPlugin::TestBoundaryPoint)> {
  constexpr static std::size_t size = 0x10c;
  constexpr static std::size_t addrs = 0x275a76c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "TestBoundaryPoint",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryGeometry
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__BoundaryGeometry (*)(::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::OVRPlugin::GetBoundaryGeometry)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275a878;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryGeometry",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryGeometry2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__BoundaryType, ::cordl_internals::intptr_t, ByRef<int32_t>)>(&::GlobalNamespace::OVRPlugin::GetBoundaryGeometry2)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275a964;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryGeometry2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetAppPerfStats
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__AppPerfStats (*)()>(&::GlobalNamespace::OVRPlugin::GetAppPerfStats)> {
  constexpr static std::size_t size = 0x178;
  constexpr static std::size_t addrs = 0x275aa48;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetAppPerfStats",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ResetAppPerfStats
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::ResetAppPerfStats)> {
  constexpr static std::size_t size = 0x164;
  constexpr static std::size_t addrs = 0x275abc0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ResetAppPerfStats",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetAppFramerate
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::GetAppFramerate)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275ad24;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetAppFramerate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetHandNodePoseStateLatency
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(double_t)>(&::GlobalNamespace::OVRPlugin::SetHandNodePoseStateLatency)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275ade0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetHandNodePoseStateLatency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHandNodePoseStateLatency
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double_t (*)()>(&::GlobalNamespace::OVRPlugin::GetHandNodePoseStateLatency)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275aeb0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHandNodePoseStateLatency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerDrivenHandPoses
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetControllerDrivenHandPoses)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275af80;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerDrivenHandPoses",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetControllerDrivenHandPosesAreNatural
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetControllerDrivenHandPosesAreNatural)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275b04c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerDrivenHandPosesAreNatural",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsControllerDrivenHandPosesEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsControllerDrivenHandPosesEnabled)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b118;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsControllerDrivenHandPosesEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.AreControllerDrivenHandPosesNatural
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::AreControllerDrivenHandPosesNatural)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b1ec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "AreControllerDrivenHandPosesNatural",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetDesiredEyeTextureFormat
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__EyeTextureFormat (*)()>(&::GlobalNamespace::OVRPlugin::GetDesiredEyeTextureFormat)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275b2c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetDesiredEyeTextureFormat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetDesiredEyeTextureFormat
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__EyeTextureFormat)>(&::GlobalNamespace::OVRPlugin::SetDesiredEyeTextureFormat)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x275b380;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetDesiredEyeTextureFormat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.InitializeMixedReality
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::InitializeMixedReality)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b448;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "InitializeMixedReality",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ShutdownMixedReality
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::ShutdownMixedReality)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b51c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ShutdownMixedReality",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsMixedRealityInitialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsMixedRealityInitialized)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b5f0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsMixedRealityInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetExternalCameraCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::GetExternalCameraCount)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275b6c4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetExternalCameraCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.UpdateExternalCamera
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::UpdateExternalCamera)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275b7a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "UpdateExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetMixedRealityCameraInfo
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>)>(&::GlobalNamespace::OVRPlugin::GetMixedRealityCameraInfo)> {
  constexpr static std::size_t size = 0x134;
  constexpr static std::size_t addrs = 0x275b87c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetMixedRealityCameraInfo",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.OverrideExternalCameraFov
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, bool, ::GlobalNamespace::__OVRPlugin__Fovf)>(&::GlobalNamespace::OVRPlugin::OverrideExternalCameraFov)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x275b9b0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "OverrideExternalCameraFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Fovf>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetUseOverriddenExternalCameraFov
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraFov)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275baa0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetUseOverriddenExternalCameraFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.OverrideExternalCameraStaticPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, bool, ::GlobalNamespace::__OVRPlugin__Posef)>(&::GlobalNamespace::OVRPlugin::OverrideExternalCameraStaticPose)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275bb8c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "OverrideExternalCameraStaticPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetUseOverriddenExternalCameraStaticPose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t)>(&::GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraStaticPose)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275bc70;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetUseOverriddenExternalCameraStaticPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ResetDefaultExternalCamera
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::ResetDefaultExternalCamera)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275bd5c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ResetDefaultExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetDefaultExternalCamera
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(&::GlobalNamespace::OVRPlugin::SetDefaultExternalCamera)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275be1c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetDefaultExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetExternalCameraProperties
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>)>(&::GlobalNamespace::OVRPlugin::SetExternalCameraProperties)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275befc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetExternalCameraProperties",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetMultimodalHandsControllersSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetMultimodalHandsControllersSupported)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275bfdc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetMultimodalHandsControllersSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsMultimodalHandsControllersSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsMultimodalHandsControllersSupported)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275c0c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsMultimodalHandsControllersSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsInsightPassthroughSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsInsightPassthroughSupported)> {
  constexpr static std::size_t size = 0x16c;
  constexpr static std::size_t addrs = 0x275c194;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsInsightPassthroughSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.InitializeInsightPassthrough
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::InitializeInsightPassthrough)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275c300;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "InitializeInsightPassthrough",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ShutdownInsightPassthrough
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::ShutdownInsightPassthrough)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275c3c0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ShutdownInsightPassthrough",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsInsightPassthroughInitialized
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::IsInsightPassthroughInitialized)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275c480;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsInsightPassthroughInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetInsightPassthroughInitializationState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::OVRPlugin::GetInsightPassthroughInitializationState)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275c540;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetInsightPassthroughInitializationState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateInsightTriangleMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>, ::ArrayW<int32_t,::Array<int32_t>*>, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::CreateInsightTriangleMesh)> {
  constexpr static std::size_t size = 0x1a8;
  constexpr static std::size_t addrs = 0x27504d8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateInsightTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<int32_t,::Array<int32_t>*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroyInsightTriangleMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroyInsightTriangleMesh)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x274eca8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroyInsightTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.AddInsightPassthroughSurfaceGeometry
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, uint64_t, ::UnityEngine::Matrix4x4, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::AddInsightPassthroughSurfaceGeometry)> {
  constexpr static std::size_t size = 0x124;
  constexpr static std::size_t addrs = 0x2750680;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "AddInsightPassthroughSurfaceGeometry",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroyInsightPassthroughGeometryInstance
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroyInsightPassthroughGeometryInstance)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x274ebe0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroyInsightPassthroughGeometryInstance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.UpdateInsightPassthroughGeometryTransform
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::UnityEngine::Matrix4x4)>(&::GlobalNamespace::OVRPlugin::UpdateInsightPassthroughGeometryTransform)> {
  constexpr static std::size_t size = 0x108;
  constexpr static std::size_t addrs = 0x2750ef8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "UpdateInsightPassthroughGeometryTransform",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetInsightPassthroughStyle
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2)>(&::GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle)> {
  constexpr static std::size_t size = 0x214;
  constexpr static std::size_t addrs = 0x27517a8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetInsightPassthroughStyle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetInsightPassthroughStyle
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle)>(&::GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle)> {
  constexpr static std::size_t size = 0x118;
  constexpr static std::size_t addrs = 0x275c5fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetInsightPassthroughStyle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreatePassthroughColorLut
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels, uint32_t, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::CreatePassthroughColorLut)> {
  constexpr static std::size_t size = 0x120;
  constexpr static std::size_t addrs = 0x275c714;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreatePassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroyPassthroughColorLut
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroyPassthroughColorLut)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x275c834;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroyPassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.UpdatePassthroughColorLut
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData)>(&::GlobalNamespace::OVRPlugin::UpdatePassthroughColorLut)> {
  constexpr static std::size_t size = 0x100;
  constexpr static std::size_t addrs = 0x275c91c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "UpdatePassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetInsightPassthroughKeyboardHandsIntensity
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity)>(&::GlobalNamespace::OVRPlugin::SetInsightPassthroughKeyboardHandsIntensity)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275ca1c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetInsightPassthroughKeyboardHandsIntensity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPassthroughCapabilityFlags
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags (*)()>(&::GlobalNamespace::OVRPlugin::GetPassthroughCapabilityFlags)> {
  constexpr static std::size_t size = 0x1b4;
  constexpr static std::size_t addrs = 0x275cafc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPassthroughCapabilityFlags",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPassthroughCapabilities
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>)>(&::GlobalNamespace::OVRPlugin::GetPassthroughCapabilities)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275ccb0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPassthroughCapabilities",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryDimensions
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Vector3f (*)(::GlobalNamespace::__OVRPlugin__BoundaryType)>(&::GlobalNamespace::OVRPlugin::GetBoundaryDimensions)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x275cd7c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryDimensions",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBoundaryVisible
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::GetBoundaryVisible)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275ce40;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryVisible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetBoundaryVisible
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::SetBoundaryVisible)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275cf00;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetBoundaryVisible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSystemHeadsetType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__SystemHeadset (*)()>(&::GlobalNamespace::OVRPlugin::GetSystemHeadsetType)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275cfe4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSystemHeadsetType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetActiveController
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Controller (*)()>(&::GlobalNamespace::OVRPlugin::GetActiveController)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275d0a0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetActiveController",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetConnectedControllers
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Controller (*)()>(&::GlobalNamespace::OVRPlugin::GetConnectedControllers)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x275d15c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetConnectedControllers",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ToBool
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Bool (*)(bool)>(&::GlobalNamespace::OVRPlugin::ToBool)> {
  constexpr static std::size_t size = 0x8;
  constexpr static std::size_t addrs = 0x27551b8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ToBool",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackingOriginType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__TrackingOrigin (*)()>(&::GlobalNamespace::OVRPlugin::GetTrackingOriginType)> {
  constexpr static std::size_t size = 0x50;
  constexpr static std::size_t addrs = 0x275d218;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackingOriginType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetTrackingOriginType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::OVRPlugin::SetTrackingOriginType)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x275d268;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetTrackingOriginType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTrackingCalibratedOrigin
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)()>(&::GlobalNamespace::OVRPlugin::GetTrackingCalibratedOrigin)> {
  constexpr static std::size_t size = 0x74;
  constexpr static std::size_t addrs = 0x275d2cc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackingCalibratedOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetTrackingCalibratedOrigin
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::SetTrackingCalibratedOrigin)> {
  constexpr static std::size_t size = 0x5c;
  constexpr static std::size_t addrs = 0x275d340;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetTrackingCalibratedOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.RecenterTrackingOrigin
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__RecenterFlags)>(&::GlobalNamespace::OVRPlugin::RecenterTrackingOrigin)> {
  constexpr static std::size_t size = 0x64;
  constexpr static std::size_t addrs = 0x275d39c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "RecenterTrackingOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__RecenterFlags>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_foveatedRenderingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_foveatedRenderingSupported)> {
  constexpr static std::size_t size = 0x74;
  constexpr static std::size_t addrs = 0x275d400;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_foveatedRenderingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeTrackedFoveatedRenderingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingSupported)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275d544;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeTrackedFoveatedRenderingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeTrackedFoveatedRenderingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingEnabled)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x275d610;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeTrackedFoveatedRenderingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_eyeTrackedFoveatedRenderingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_eyeTrackedFoveatedRenderingEnabled)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x275d6fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_eyeTrackedFoveatedRenderingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_fixedFoveatedRenderingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275d474;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_fixedFoveatedRenderingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_foveatedRenderingLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel (*)()>(&::GlobalNamespace::OVRPlugin::get_foveatedRenderingLevel)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275d7e4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_foveatedRenderingLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_foveatedRenderingLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel)>(&::GlobalNamespace::OVRPlugin::set_foveatedRenderingLevel)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x275d8c8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_foveatedRenderingLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_fixedFoveatedRenderingLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel (*)()>(&::GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingLevel)> {
  constexpr static std::size_t size = 0x4c;
  constexpr static std::size_t addrs = 0x275d9ac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_fixedFoveatedRenderingLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_fixedFoveatedRenderingLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel)>(&::GlobalNamespace::OVRPlugin::set_fixedFoveatedRenderingLevel)> {
  constexpr static std::size_t size = 0x54;
  constexpr static std::size_t addrs = 0x275d9f8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_fixedFoveatedRenderingLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_useDynamicFoveatedRendering
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_useDynamicFoveatedRendering)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x275da4c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_useDynamicFoveatedRendering",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_useDynamicFoveatedRendering
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_useDynamicFoveatedRendering)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x275db3c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_useDynamicFoveatedRendering",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_useDynamicFixedFoveatedRendering
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_useDynamicFixedFoveatedRendering)> {
  constexpr static std::size_t size = 0x4c;
  constexpr static std::size_t addrs = 0x275dc24;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_useDynamicFixedFoveatedRendering",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_useDynamicFixedFoveatedRendering
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_useDynamicFixedFoveatedRendering)> {
  constexpr static std::size_t size = 0x54;
  constexpr static std::size_t addrs = 0x275dc70;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_useDynamicFixedFoveatedRendering",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_tiledMultiResSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_tiledMultiResSupported)> {
  constexpr static std::size_t size = 0x4c;
  constexpr static std::size_t addrs = 0x275dcc4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_tiledMultiResSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_tiledMultiResLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__TiledMultiResLevel (*)()>(&::GlobalNamespace::OVRPlugin::get_tiledMultiResLevel)> {
  constexpr static std::size_t size = 0x4c;
  constexpr static std::size_t addrs = 0x275dd10;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_tiledMultiResLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_tiledMultiResLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::__OVRPlugin__TiledMultiResLevel)>(&::GlobalNamespace::OVRPlugin::set_tiledMultiResLevel)> {
  constexpr static std::size_t size = 0x54;
  constexpr static std::size_t addrs = 0x275dd5c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_tiledMultiResLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TiledMultiResLevel>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_gpuUtilSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_gpuUtilSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275ddb0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_gpuUtilSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_gpuUtilLevel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_gpuUtilLevel)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x275de80;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_gpuUtilLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_systemDisplayFrequenciesAvailable
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float_t,::Array<float_t>*> (*)()>(&::GlobalNamespace::OVRPlugin::get_systemDisplayFrequenciesAvailable)> {
  constexpr static std::size_t size = 0x2a4;
  constexpr static std::size_t addrs = 0x275df70;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_systemDisplayFrequenciesAvailable",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_systemDisplayFrequency
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::get_systemDisplayFrequency)> {
  constexpr static std::size_t size = 0x14c;
  constexpr static std::size_t addrs = 0x275e214;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_systemDisplayFrequency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_systemDisplayFrequency
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float_t)>(&::GlobalNamespace::OVRPlugin::set_systemDisplayFrequency)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275e360;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_systemDisplayFrequency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeFovPremultipliedAlphaModeEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeFovPremultipliedAlphaModeEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x275e42c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeFovPremultipliedAlphaModeEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_eyeFovPremultipliedAlphaModeEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_eyeFovPremultipliedAlphaModeEnabled)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275e4fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_eyeFovPremultipliedAlphaModeEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNodeFrustum2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Node, ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>)>(&::GlobalNamespace::OVRPlugin::GetNodeFrustum2)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275e5dc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeFrustum2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_AsymmetricFovEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_AsymmetricFovEnabled)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275e6bc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_AsymmetricFovEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_EyeTextureArrayEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_EyeTextureArrayEnabled)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x275e790;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_EyeTextureArrayEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_localDimmingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_localDimmingSupported)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275e850;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_localDimmingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_localDimming
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_localDimming)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x275e924;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_localDimming",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.set_localDimming
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&::GlobalNamespace::OVRPlugin::set_localDimming)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x275ea18;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_localDimming",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetDominantHand
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Handedness (*)()>(&::GlobalNamespace::OVRPlugin::GetDominantHand)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275eb00;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetDominantHand",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SendEvent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::StringW)>(&::GlobalNamespace::OVRPlugin::SendEvent)> {
  constexpr static std::size_t size = 0x194;
  constexpr static std::size_t addrs = 0x275ebcc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SendEvent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetHeadPoseModifier
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>)>(&::GlobalNamespace::OVRPlugin::SetHeadPoseModifier)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x275ed60;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetHeadPoseModifier",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHeadPoseModifier
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>)>(&::GlobalNamespace::OVRPlugin::GetHeadPoseModifier)> {
  constexpr static std::size_t size = 0x14c;
  constexpr static std::size_t addrs = 0x275ee38;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHeadPoseModifier",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsPerfMetricsSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics)>(&::GlobalNamespace::OVRPlugin::IsPerfMetricsSupported)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275ef84;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsPerfMetricsSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPerfMetricsFloat
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<float_t> (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics)>(&::GlobalNamespace::OVRPlugin::GetPerfMetricsFloat)> {
  constexpr static std::size_t size = 0x104;
  constexpr static std::size_t addrs = 0x275f064;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPerfMetricsFloat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPerfMetricsInt
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<int32_t> (*)(::GlobalNamespace::__OVRPlugin__PerfMetrics)>(&::GlobalNamespace::OVRPlugin::GetPerfMetricsInt)> {
  constexpr static std::size_t size = 0x104;
  constexpr static std::size_t addrs = 0x275f168;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPerfMetricsInt",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetTimeInSeconds
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double_t (*)()>(&::GlobalNamespace::OVRPlugin::GetTimeInSeconds)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x275f26c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTimeInSeconds",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetColorScaleAndOffset
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Vector4, ::UnityEngine::Vector4, bool)>(&::GlobalNamespace::OVRPlugin::SetColorScaleAndOffset)> {
  constexpr static std::size_t size = 0x164;
  constexpr static std::size_t addrs = 0x275f338;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetColorScaleAndOffset",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.AddCustomMetadata
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW)>(&::GlobalNamespace::OVRPlugin::AddCustomMetadata)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x275f49c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "AddCustomMetadata",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetDeveloperMode
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Bool)>(&::GlobalNamespace::OVRPlugin::SetDeveloperMode)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x275f574;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetDeveloperMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetAdaptiveGPUPerformanceScale
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float_t (*)()>(&::GlobalNamespace::OVRPlugin::GetAdaptiveGPUPerformanceScale)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x275f63c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetAdaptiveGPUPerformanceScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHandTrackingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::GetHandTrackingEnabled)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x275f714;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHandTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHandState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ::GlobalNamespace::__OVRPlugin__Hand, ByRef<::GlobalNamespace::__OVRPlugin__HandState>)>(&::GlobalNamespace::OVRPlugin::GetHandState)> {
  constexpr static std::size_t size = 0x6a4;
  constexpr static std::size_t addrs = 0x275f7e8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHandState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__HandState>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.IsValidBone
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__BoneId, ::GlobalNamespace::__OVRPlugin__SkeletonType)>(&::GlobalNamespace::OVRPlugin::IsValidBone)> {
  constexpr static std::size_t size = 0x28;
  constexpr static std::size_t addrs = 0x275fe8c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsValidBone",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoneId>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSkeleton
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SkeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>)>(&::GlobalNamespace::OVRPlugin::GetSkeleton)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x275feb4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSkeleton",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSkeleton2
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SkeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2>)>(&::GlobalNamespace::OVRPlugin::GetSkeleton2)> {
  constexpr static std::size_t size = 0x2310;
  constexpr static std::size_t addrs = 0x275ff94;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSkeleton2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_bodyTrackingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_bodyTrackingSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2753308;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_bodyTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_bodyTrackingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_bodyTrackingEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x27622a4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_bodyTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetBodyState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ByRef<::GlobalNamespace::__OVRPlugin__BodyState>)>(&::GlobalNamespace::OVRPlugin::GetBodyState)> {
  constexpr static std::size_t size = 0x221c;
  constexpr static std::size_t addrs = 0x2762374;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBodyState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__BodyState>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__MeshType, ByRef<::GlobalNamespace::__OVRPlugin__Mesh*>)>(&::GlobalNamespace::OVRPlugin::GetMesh)> {
  constexpr static std::size_t size = 0x1cc;
  constexpr static std::size_t addrs = 0x2764590;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__MeshType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Mesh*>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StartKeyboardTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::StartKeyboardTracking)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276475c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StartKeyboardTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StopKeyboardTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StopKeyboardTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2764824;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StopKeyboardTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetKeyboardState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>)>(&::GlobalNamespace::OVRPlugin::GetKeyboardState)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x27648e4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetKeyboardState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSystemKeyboardDescription
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>)>(&::GlobalNamespace::OVRPlugin::GetSystemKeyboardDescription)> {
  constexpr static std::size_t size = 0xe4;
  constexpr static std::size_t addrs = 0x27649d4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSystemKeyboardDescription",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateVirtualKeyboard
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo)>(&::GlobalNamespace::OVRPlugin::CreateVirtualKeyboard)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x2764ab8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateVirtualKeyboard",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroyVirtualKeyboard
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)()>(&::GlobalNamespace::OVRPlugin::DestroyVirtualKeyboard)> {
  constexpr static std::size_t size = 0xbc;
  constexpr static std::size_t addrs = 0x2764b74;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroyVirtualKeyboard",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SendVirtualKeyboardInput
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::OVRPlugin::SendVirtualKeyboardInput)> {
  constexpr static std::size_t size = 0xf8;
  constexpr static std::size_t addrs = 0x2764c30;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SendVirtualKeyboardInput",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ChangeVirtualKeyboardTextContext
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::StringW)>(&::GlobalNamespace::OVRPlugin::ChangeVirtualKeyboardTextContext)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x2764d28;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ChangeVirtualKeyboardTextContext",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateVirtualKeyboardSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::CreateVirtualKeyboardSpace)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x2764dec;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateVirtualKeyboardSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SuggestVirtualKeyboardLocation
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo)>(&::GlobalNamespace::OVRPlugin::SuggestVirtualKeyboardLocation)> {
  constexpr static std::size_t size = 0xe8;
  constexpr static std::size_t addrs = 0x2764ed8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SuggestVirtualKeyboardLocation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetVirtualKeyboardScale
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<float_t>)>(&::GlobalNamespace::OVRPlugin::GetVirtualKeyboardScale)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2764fc0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetVirtualKeyboardScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetVirtualKeyboardModelAnimationStates
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates>)>(&::GlobalNamespace::OVRPlugin::GetVirtualKeyboardModelAnimationStates)> {
  constexpr static std::size_t size = 0x494;
  constexpr static std::size_t addrs = 0x2765088;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetVirtualKeyboardModelAnimationStates",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetVirtualKeyboardDirtyTextures
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds>)>(&::GlobalNamespace::OVRPlugin::GetVirtualKeyboardDirtyTextures)> {
  constexpr static std::size_t size = 0x2dc;
  constexpr static std::size_t addrs = 0x276551c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetVirtualKeyboardDirtyTextures",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetVirtualKeyboardTextureData
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>)>(&::GlobalNamespace::OVRPlugin::GetVirtualKeyboardTextureData)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x27657f8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetVirtualKeyboardTextureData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetVirtualKeyboardModelVisibility
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>)>(&::GlobalNamespace::OVRPlugin::SetVirtualKeyboardModelVisibility)> {
  constexpr static std::size_t size = 0xc4;
  constexpr static std::size_t addrs = 0x27658d0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetVirtualKeyboardModelVisibility",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_faceTrackingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_faceTrackingEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2765994;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_faceTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_faceTrackingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_faceTrackingSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2753238;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_faceTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetFaceStateInternal
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__FaceState>)>(&::GlobalNamespace::OVRPlugin::GetFaceStateInternal)> {
  constexpr static std::size_t size = 0x57c;
  constexpr static std::size_t addrs = 0x2765a64;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetFaceStateInternal",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceState>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetFaceState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__FaceState>)>(&::GlobalNamespace::OVRPlugin::GetFaceState)> {
  constexpr static std::size_t size = 0x150;
  constexpr static std::size_t addrs = 0x2765fe0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetFaceState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceState>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeTrackingEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeTrackingEnabled)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2766130;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.get_eyeTrackingSupported
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::get_eyeTrackingSupported)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x27533d8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeGazesState
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Step, int32_t, ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesState>)>(&::GlobalNamespace::OVRPlugin::GetEyeGazesState)> {
  constexpr static std::size_t size = 0x274;
  constexpr static std::size_t addrs = 0x2766200;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeGazesState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesState>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StartEyeTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StartEyeTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2766474;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StartEyeTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StopEyeTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StopEyeTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2766534;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StopEyeTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StartFaceTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StartFaceTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27665f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StartFaceTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StopFaceTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StopFaceTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x27666b4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StopFaceTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StartBodyTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StartBodyTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2766774;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StartBodyTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.StopBodyTracking
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::StopBodyTracking)> {
  constexpr static std::size_t size = 0xc0;
  constexpr static std::size_t addrs = 0x2766834;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StopBodyTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLocalTrackingSpaceRecenterCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int32_t (*)()>(&::GlobalNamespace::OVRPlugin::GetLocalTrackingSpaceRecenterCount)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x27668f4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLocalTrackingSpaceRecenterCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSystemHmd3DofModeEnabled
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&::GlobalNamespace::OVRPlugin::GetSystemHmd3DofModeEnabled)> {
  constexpr static std::size_t size = 0xd4;
  constexpr static std::size_t addrs = 0x27669c4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSystemHmd3DofModeEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetClientColorDesc
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__ColorSpace)>(&::GlobalNamespace::OVRPlugin::SetClientColorDesc)> {
  constexpr static std::size_t size = 0x114;
  constexpr static std::size_t addrs = 0x2766a98;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetClientColorDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ColorSpace>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetHmdColorDesc
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__ColorSpace (*)()>(&::GlobalNamespace::OVRPlugin::GetHmdColorDesc)> {
  constexpr static std::size_t size = 0x130;
  constexpr static std::size_t addrs = 0x2766bac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHmdColorDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.PollEvent
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>)>(&::GlobalNamespace::OVRPlugin::PollEvent)> {
  constexpr static std::size_t size = 0x218;
  constexpr static std::size_t addrs = 0x2766cdc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "PollEvent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNativeOpenXRInstance
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&::GlobalNamespace::OVRPlugin::GetNativeOpenXRInstance)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2766ef4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNativeOpenXRInstance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetNativeOpenXRSession
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&::GlobalNamespace::OVRPlugin::GetNativeOpenXRSession)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2766fd0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNativeOpenXRSession",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetKeyboardOverlayUV
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__Vector2f)>(&::GlobalNamespace::OVRPlugin::SetKeyboardOverlayUV)> {
  constexpr static std::size_t size = 0xd8;
  constexpr static std::size_t addrs = 0x27670ac;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetKeyboardOverlayUV",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector2f>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateSpatialAnchor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::CreateSpatialAnchor)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2767184;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateSpatialAnchor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetSpaceComponentStatus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, bool, double_t, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::SetSpaceComponentStatus)> {
  constexpr static std::size_t size = 0x1e4;
  constexpr static std::size_t addrs = 0x2767260;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetSpaceComponentStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceComponentStatus
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, ByRef<bool>, ByRef<bool>)>(&::GlobalNamespace::OVRPlugin::GetSpaceComponentStatus)> {
  constexpr static std::size_t size = 0x88;
  constexpr static std::size_t addrs = 0x2767444;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceComponentStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceComponentStatusInternal
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceComponentType, ByRef<bool>, ByRef<bool>)>(&::GlobalNamespace::OVRPlugin::GetSpaceComponentStatusInternal)> {
  constexpr static std::size_t size = 0x114;
  constexpr static std::size_t addrs = 0x27674cc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceComponentStatusInternal",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EnumerateSpaceSupportedComponents
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<uint32_t>, ::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>)>(&::GlobalNamespace::OVRPlugin::EnumerateSpaceSupportedComponents)> {
  constexpr static std::size_t size = 0xf0;
  constexpr static std::size_t addrs = 0x27675e0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EnumerateSpaceSupportedComponents",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SaveSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::SaveSpace)> {
  constexpr static std::size_t size = 0xf4;
  constexpr static std::size_t addrs = 0x27676d0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SaveSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.EraseSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::EraseSpace)> {
  constexpr static std::size_t size = 0x194;
  constexpr static std::size_t addrs = 0x27677c4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EraseSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceUuid
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::System::Guid>)>(&::GlobalNamespace::OVRPlugin::GetSpaceUuid)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2767958;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceUuid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::System::Guid>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.QuerySpaces
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__SpaceQueryInfo, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::QuerySpaces)> {
  constexpr static std::size_t size = 0x21c;
  constexpr static std::size_t addrs = 0x2767a34;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "QuerySpaces",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.RetrieveSpaceQueryResults
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::Unity::Collections::NativeArray_1<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>>, ::Unity::Collections::Allocator)>(&::GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults)> {
  constexpr static std::size_t size = 0x1b4;
  constexpr static std::size_t addrs = 0x2767c50;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "RetrieveSpaceQueryResults",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::Unity::Collections::NativeArray_1<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::Allocator>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.RetrieveSpaceQueryResults
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceQueryResult,::Array<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>*>>)>(&::GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults)> {
  constexpr static std::size_t size = 0x38c;
  constexpr static std::size_t addrs = 0x2767e04;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "RetrieveSpaceQueryResults",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceQueryResult,::Array<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>*>>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SaveSpaceList
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::Unity::Collections::NativeArray_1<uint64_t>, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::SaveSpaceList)> {
  constexpr static std::size_t size = 0x124;
  constexpr static std::size_t addrs = 0x2768190;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SaveSpaceList",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceUserId
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::GetSpaceUserId)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x27682b4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceUserId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.CreateSpaceUser
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::CreateSpaceUser)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2768390;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateSpaceUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroySpaceUser
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroySpaceUser)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276846c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroySpaceUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.ShareSpaces
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(::Unity::Collections::NativeArray_1<uint64_t>, ::Unity::Collections::NativeArray_1<uint64_t>, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::ShareSpaces)> {
  constexpr static std::size_t size = 0x140;
  constexpr static std::size_t addrs = 0x2768534;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ShareSpaces",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.TryLocateSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__TrackingOrigin, ByRef<::GlobalNamespace::__OVRPlugin__Posef>)>(&::GlobalNamespace::OVRPlugin::TryLocateSpace)> {
  constexpr static std::size_t size = 0x1e0;
  constexpr static std::size_t addrs = 0x2768674;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "TryLocateSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.LocateSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Posef (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__TrackingOrigin)>(&::GlobalNamespace::OVRPlugin::LocateSpace)> {
  constexpr static std::size_t size = 0xd0;
  constexpr static std::size_t addrs = 0x2768854;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "LocateSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.TryLocateSpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::GlobalNamespace::__OVRPlugin__TrackingOrigin, ByRef<::GlobalNamespace::__OVRPlugin__Posef>, ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>)>(&::GlobalNamespace::OVRPlugin::TryLocateSpace)> {
  constexpr static std::size_t size = 0x168;
  constexpr static std::size_t addrs = 0x2768924;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "TryLocateSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.DestroySpace
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::DestroySpace)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x2768a8c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroySpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceContainer
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::ArrayW<::System::Guid,::Array<::System::Guid>*>>)>(&::GlobalNamespace::OVRPlugin::GetSpaceContainer)> {
  constexpr static std::size_t size = 0x274;
  constexpr static std::size_t addrs = 0x2768b54;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceContainer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::System::Guid,::Array<::System::Guid>*>>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundingBox2D
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__Rectf>)>(&::GlobalNamespace::OVRPlugin::GetSpaceBoundingBox2D)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2768dc8;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundingBox2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Rectf>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundingBox3D
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>)>(&::GlobalNamespace::OVRPlugin::GetSpaceBoundingBox3D)> {
  constexpr static std::size_t size = 0xe0;
  constexpr static std::size_t addrs = 0x2768ea4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundingBox3D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceSemanticLabels
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::StringW>)>(&::GlobalNamespace::OVRPlugin::GetSpaceSemanticLabels)> {
  constexpr static std::size_t size = 0x190;
  constexpr static std::size_t addrs = 0x2768f84;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceSemanticLabels",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::StringW>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceRoomLayout
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::GlobalNamespace::__OVRPlugin__RoomLayout>)>(&::GlobalNamespace::OVRPlugin::GetSpaceRoomLayout)> {
  constexpr static std::size_t size = 0x250;
  constexpr static std::size_t addrs = 0x2769114;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceRoomLayout",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RoomLayout>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2DCount
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<int32_t>)>(&::GlobalNamespace::OVRPlugin::GetSpaceBoundary2DCount)> {
  constexpr static std::size_t size = 0xec;
  constexpr static std::size_t addrs = 0x2769364;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2DCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2D
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>)>(&::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x84;
  constexpr static std::size_t addrs = 0x2769450;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2D
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>, ByRef<int32_t>)>(&::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x128;
  constexpr static std::size_t addrs = 0x27694d4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2D
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> (*)(uint64_t, ::Unity::Collections::Allocator)>(&::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x1a0;
  constexpr static std::size_t addrs = 0x27695fc;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::Allocator>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceBoundary2D
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>>)>(&::GlobalNamespace::OVRPlugin::GetSpaceBoundary2D)> {
  constexpr static std::size_t size = 0x318;
  constexpr static std::size_t addrs = 0x276979c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.RequestSceneCapture
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<uint64_t>)>(&::GlobalNamespace::OVRPlugin::RequestSceneCapture)> {
  constexpr static std::size_t size = 0x120;
  constexpr static std::size_t addrs = 0x2769ab4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "RequestSceneCapture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceTriangleMeshCounts
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ByRef<int32_t>, ByRef<int32_t>)>(&::GlobalNamespace::OVRPlugin::GetSpaceTriangleMeshCounts)> {
  constexpr static std::size_t size = 0x1c0;
  constexpr static std::size_t addrs = 0x2769bd4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceTriangleMeshCounts",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetSpaceTriangleMesh
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>, ::Unity::Collections::NativeArray_1<int32_t>)>(&::GlobalNamespace::OVRPlugin::GetSpaceTriangleMesh)> {
  constexpr static std::size_t size = 0x200;
  constexpr static std::size_t addrs = 0x2769d94;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<int32_t>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetLayerRecommendedResolution
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int32_t, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(&::GlobalNamespace::OVRPlugin::GetLayerRecommendedResolution)> {
  constexpr static std::size_t size = 0xdc;
  constexpr static std::size_t addrs = 0x2769f94;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLayerRecommendedResolution",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetEyeLayerRecommendedResolution
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::GlobalNamespace::__OVRPlugin__Sizei>)>(&::GlobalNamespace::OVRPlugin::GetEyeLayerRecommendedResolution)> {
  constexpr static std::size_t size = 0xcc;
  constexpr static std::size_t addrs = 0x276a070;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeLayerRecommendedResolution",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetRenderModelPaths
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW,::Array<::StringW>*> (*)()>(&::GlobalNamespace::OVRPlugin::GetRenderModelPaths)> {
  constexpr static std::size_t size = 0x22c;
  constexpr static std::size_t addrs = 0x276a13c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetRenderModelPaths",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetRenderModelProperties
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelProperties>)>(&::GlobalNamespace::OVRPlugin::GetRenderModelProperties)> {
  constexpr static std::size_t size = 0x1a4;
  constexpr static std::size_t addrs = 0x276a368;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetRenderModelProperties",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelProperties>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.LoadRenderModel
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t,::Array<uint8_t>*> (*)(uint64_t)>(&::GlobalNamespace::OVRPlugin::LoadRenderModel)> {
  constexpr static std::size_t size = 0x200;
  constexpr static std::size_t addrs = 0x276a50c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "LoadRenderModel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.OnEditorShutdown
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&::GlobalNamespace::OVRPlugin::OnEditorShutdown)> {
  constexpr static std::size_t size = 0xb8;
  constexpr static std::size_t addrs = 0x276a70c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "OnEditorShutdown",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.GetPassthroughPreferences
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::__OVRPlugin__Result (*)(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>)>(&::GlobalNamespace::OVRPlugin::GetPassthroughPreferences)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276a7c4;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPassthroughPreferences",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::OVRPlugin.SetEyeBufferSharpenType
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::__OVRPlugin__LayerSharpenType)>(&::GlobalNamespace::OVRPlugin::SetEyeBufferSharpenType)> {
  constexpr static std::size_t size = 0xc8;
  constexpr static std::size_t addrs = 0x276a88c;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetEyeBufferSharpenType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerSharpenType>::get()}
                        )));
    return ___internal_method;
  }
};
inline void GlobalNamespace::OVRPlugin::setStaticF_wrapperVersion(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "wrapperVersion", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::OVRPlugin::getStaticF_wrapperVersion()  {
return ::cordl_internals::getStaticField<::System::Version*, "wrapperVersion", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__version(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "_version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::OVRPlugin::getStaticF__version()  {
return ::cordl_internals::getStaticField<::System::Version*, "_version", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeSDKVersion(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "_nativeSDKVersion", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::OVRPlugin::getStaticF__nativeSDKVersion()  {
return ::cordl_internals::getStaticField<::System::Version*, "_nativeSDKVersion", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_MAX_CPU_CORES(int32_t  value)  {
::cordl_internals::setStaticField<int32_t, "MAX_CPU_CORES", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<int32_t>(value));
}
inline int32_t GlobalNamespace::OVRPlugin::getStaticF_MAX_CPU_CORES()  {
return ::cordl_internals::getStaticField<int32_t, "MAX_CPU_CORES", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeXrApi(::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi>  value)  {
::cordl_internals::setStaticField<::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi>, "_nativeXrApi", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi>>(value));
}
inline ::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi> GlobalNamespace::OVRPlugin::getStaticF__nativeXrApi()  {
return ::cordl_internals::getStaticField<::System::Nullable_1<::GlobalNamespace::__OVRPlugin__XrApi>, "_nativeXrApi", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeAudioOutGuid(::GlobalNamespace::__OVRPlugin__GUID*  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__GUID*, "_nativeAudioOutGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::GlobalNamespace::__OVRPlugin__GUID*>(value));
}
inline ::GlobalNamespace::__OVRPlugin__GUID* GlobalNamespace::OVRPlugin::getStaticF__nativeAudioOutGuid()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__GUID*, "_nativeAudioOutGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedAudioOutGuid(::System::Guid  value)  {
::cordl_internals::setStaticField<::System::Guid, "_cachedAudioOutGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::System::Guid>(value));
}
inline ::System::Guid GlobalNamespace::OVRPlugin::getStaticF__cachedAudioOutGuid()  {
return ::cordl_internals::getStaticField<::System::Guid, "_cachedAudioOutGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedAudioOutString(::StringW  value)  {
::cordl_internals::setStaticField<::StringW, "_cachedAudioOutString", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::StringW>(value));
}
inline ::StringW GlobalNamespace::OVRPlugin::getStaticF__cachedAudioOutString()  {
return ::cordl_internals::getStaticField<::StringW, "_cachedAudioOutString", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeAudioInGuid(::GlobalNamespace::__OVRPlugin__GUID*  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__GUID*, "_nativeAudioInGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::GlobalNamespace::__OVRPlugin__GUID*>(value));
}
inline ::GlobalNamespace::__OVRPlugin__GUID* GlobalNamespace::OVRPlugin::getStaticF__nativeAudioInGuid()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__GUID*, "_nativeAudioInGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedAudioInGuid(::System::Guid  value)  {
::cordl_internals::setStaticField<::System::Guid, "_cachedAudioInGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::System::Guid>(value));
}
inline ::System::Guid GlobalNamespace::OVRPlugin::getStaticF__cachedAudioInGuid()  {
return ::cordl_internals::getStaticField<::System::Guid, "_cachedAudioInGuid", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedAudioInString(::StringW  value)  {
::cordl_internals::setStaticField<::StringW, "_cachedAudioInString", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::StringW>(value));
}
inline ::StringW GlobalNamespace::OVRPlugin::getStaticF__cachedAudioInString()  {
return ::cordl_internals::getStaticField<::StringW, "_cachedAudioInString", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_perfStatWarningPrinted(bool  value)  {
::cordl_internals::setStaticField<bool, "perfStatWarningPrinted", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<bool>(value));
}
inline bool GlobalNamespace::OVRPlugin::getStaticF_perfStatWarningPrinted()  {
return ::cordl_internals::getStaticField<bool, "perfStatWarningPrinted", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_resetPerfStatWarningPrinted(bool  value)  {
::cordl_internals::setStaticField<bool, "resetPerfStatWarningPrinted", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<bool>(value));
}
inline bool GlobalNamespace::OVRPlugin::getStaticF_resetPerfStatWarningPrinted()  {
return ::cordl_internals::getStaticField<bool, "resetPerfStatWarningPrinted", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__nativeSystemDisplayFrequenciesAvailable(::GlobalNamespace::OVRNativeBuffer*  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::OVRNativeBuffer*, "_nativeSystemDisplayFrequenciesAvailable", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::GlobalNamespace::OVRNativeBuffer*>(value));
}
inline ::GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRPlugin::getStaticF__nativeSystemDisplayFrequenciesAvailable()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::OVRNativeBuffer*, "_nativeSystemDisplayFrequenciesAvailable", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__cachedSystemDisplayFrequenciesAvailable(::ArrayW<float_t,::Array<float_t>*>  value)  {
::cordl_internals::setStaticField<::ArrayW<float_t,::Array<float_t>*>, "_cachedSystemDisplayFrequenciesAvailable", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::ArrayW<float_t,::Array<float_t>*>>(value));
}
inline ::ArrayW<float_t,::Array<float_t>*> GlobalNamespace::OVRPlugin::getStaticF__cachedSystemDisplayFrequenciesAvailable()  {
return ::cordl_internals::getStaticField<::ArrayW<float_t,::Array<float_t>*>, "_cachedSystemDisplayFrequenciesAvailable", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedHandState(::GlobalNamespace::__OVRPlugin__HandStateInternal  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__HandStateInternal, "cachedHandState", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::GlobalNamespace::__OVRPlugin__HandStateInternal>(value));
}
inline ::GlobalNamespace::__OVRPlugin__HandStateInternal GlobalNamespace::OVRPlugin::getStaticF_cachedHandState()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__HandStateInternal, "cachedHandState", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedSkeleton(::GlobalNamespace::__OVRPlugin__Skeleton  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Skeleton, "cachedSkeleton", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Skeleton>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Skeleton GlobalNamespace::OVRPlugin::getStaticF_cachedSkeleton()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Skeleton, "cachedSkeleton", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedSkeleton2(::GlobalNamespace::__OVRPlugin__Skeleton2Internal  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__Skeleton2Internal, "cachedSkeleton2", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::GlobalNamespace::__OVRPlugin__Skeleton2Internal>(value));
}
inline ::GlobalNamespace::__OVRPlugin__Skeleton2Internal GlobalNamespace::OVRPlugin::getStaticF_cachedSkeleton2()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__Skeleton2Internal, "cachedSkeleton2", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedFaceState(::GlobalNamespace::__OVRPlugin__FaceStateInternal  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__FaceStateInternal, "cachedFaceState", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::GlobalNamespace::__OVRPlugin__FaceStateInternal>(value));
}
inline ::GlobalNamespace::__OVRPlugin__FaceStateInternal GlobalNamespace::OVRPlugin::getStaticF_cachedFaceState()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__FaceStateInternal, "cachedFaceState", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF_cachedEyeGazesState(::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal  value)  {
::cordl_internals::setStaticField<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal, "cachedEyeGazesState", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal>(value));
}
inline ::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal GlobalNamespace::OVRPlugin::getStaticF_cachedEyeGazesState()  {
return ::cordl_internals::getStaticField<::GlobalNamespace::__OVRPlugin__EyeGazesStateInternal, "cachedEyeGazesState", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline void GlobalNamespace::OVRPlugin::setStaticF__versionZero(::System::Version*  value)  {
::cordl_internals::setStaticField<::System::Version*, "_versionZero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>(std::forward<::System::Version*>(value));
}
inline ::System::Version* GlobalNamespace::OVRPlugin::getStaticF__versionZero()  {
return ::cordl_internals::getStaticField<::System::Version*, "_versionZero", ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get>();
}
inline ::System::Version* GlobalNamespace::OVRPlugin::get_version()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_version",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::System::Version*, false>(nullptr, ___internal_method);
}
inline ::System::Version* GlobalNamespace::OVRPlugin::get_nativeSDKVersion()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_nativeSDKVersion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::System::Version*, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::IsSuccess(::GlobalNamespace::__OVRPlugin__Result  result)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsSuccess",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Result>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, result);
}
inline void GlobalNamespace::OVRPlugin::SetLogCallback2(::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*  logCallback)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetLogCallback2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LogCallback2DelegateType*>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, logCallback);
}
inline bool GlobalNamespace::OVRPlugin::IsPassthroughShape(::GlobalNamespace::__OVRPlugin__OverlayShape  shape)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsPassthroughShape",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, shape);
}
inline bool GlobalNamespace::OVRPlugin::IsPositionValid(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsPositionValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::IsOrientationValid(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsOrientationValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::IsPositionTracked(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsPositionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::IsOrientationTracked(::GlobalNamespace::__OVRPlugin__SpaceLocationFlags  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsOrientationTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline ::StringW GlobalNamespace::OVRPlugin::GuidToUuidString(::System::Guid  guid)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GuidToUuidString",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::System::Guid>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method, guid);
}
inline bool GlobalNamespace::OVRPlugin::get_initialized()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_initialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__XrApi GlobalNamespace::OVRPlugin::get_nativeXrApi()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_nativeXrApi",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__XrApi, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_chromatic()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_chromatic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_chromatic(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_chromatic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_monoscopic()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_monoscopic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_monoscopic(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_monoscopic",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_rotation()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_rotation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_rotation(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_rotation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_position()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_position",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_position(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_position",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_useIPDInPositionTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_useIPDInPositionTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_useIPDInPositionTracking(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_useIPDInPositionTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_positionSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_positionSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_positionTracked()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_positionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_powerSaving()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_powerSaving",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_hmdPresent()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_hmdPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_userPresent()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_userPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_headphonesPresent()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_headphonesPresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::OVRPlugin::get_recommendedMSAALevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_recommendedMSAALevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__SystemRegion GlobalNamespace::OVRPlugin::get_systemRegion()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_systemRegion",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__SystemRegion, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::OVRPlugin::get_audioOutId()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_audioOutId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::OVRPlugin::get_audioInId()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_audioInId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_hasVrFocus()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_hasVrFocus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_hasInputFocus()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_hasInputFocus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_shouldQuit()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_shouldQuit",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_shouldRecenter()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_shouldRecenter",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::OVRPlugin::get_productName()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_productName",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline ::StringW GlobalNamespace::OVRPlugin::get_latency()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_latency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::StringW, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_eyeDepth()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeDepth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_eyeDepth(float_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_eyeDepth",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::OVRPlugin::get_eyeHeight()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_eyeHeight(float_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_eyeHeight",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::OVRPlugin::get_batteryLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_batteryLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_batteryTemperature()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_batteryTemperature",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel GlobalNamespace::OVRPlugin::get_suggestedCpuPerfLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_suggestedCpuPerfLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_suggestedCpuPerfLevel(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_suggestedCpuPerfLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel GlobalNamespace::OVRPlugin::get_suggestedGpuPerfLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_suggestedGpuPerfLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_suggestedGpuPerfLevel(::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_suggestedGpuPerfLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ProcessorPerformanceLevel>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline int32_t GlobalNamespace::OVRPlugin::get_cpuLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_cpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_cpuLevel(int32_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_cpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline int32_t GlobalNamespace::OVRPlugin::get_gpuLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_gpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_gpuLevel(int32_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_gpuLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline int32_t GlobalNamespace::OVRPlugin::get_vsyncCount()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_vsyncCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_vsyncCount(int32_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_vsyncCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline float_t GlobalNamespace::OVRPlugin::get_systemVolume()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_systemVolume",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_ipd()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_ipd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_ipd(float_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_ipd",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_occlusionMesh()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_occlusionMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_occlusionMesh(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_occlusionMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__BatteryStatus GlobalNamespace::OVRPlugin::get_batteryStatus()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_batteryStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BatteryStatus, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Frustumf GlobalNamespace::OVRPlugin::GetEyeFrustum(::GlobalNamespace::__OVRPlugin__Eye  eyeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeFrustum",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Frustumf, false>(nullptr, ___internal_method, eyeId);
}
inline ::GlobalNamespace::__OVRPlugin__Sizei GlobalNamespace::OVRPlugin::GetEyeTextureSize(::GlobalNamespace::__OVRPlugin__Eye  eyeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeTextureSize",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Sizei, false>(nullptr, ___internal_method, eyeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetTrackerPose(::GlobalNamespace::__OVRPlugin__Tracker  trackerId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackerPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Tracker>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, trackerId);
}
inline ::GlobalNamespace::__OVRPlugin__Frustumf GlobalNamespace::OVRPlugin::GetTrackerFrustum(::GlobalNamespace::__OVRPlugin__Tracker  trackerId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackerFrustum",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Tracker>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Frustumf, false>(nullptr, ___internal_method, trackerId);
}
inline bool GlobalNamespace::OVRPlugin::ShowUI(::GlobalNamespace::__OVRPlugin__PlatformUI  ui)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ShowUI",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PlatformUI>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, ui);
}
/// @param layerIndex: int32_t (default: static_cast<int32_t>(0x0))
/// @param shape: ::GlobalNamespace::__OVRPlugin__OverlayShape (default: static_cast<int32_t>(0x0))
/// @param overrideTextureRectMatrix: bool (default: false)
/// @param textureRectMatrix: ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf (default: {})
/// @param overridePerLayerColorScaleAndOffset: bool (default: false)
/// @param colorScale: ::UnityEngine::Vector4 (default: {})
/// @param colorOffset: ::UnityEngine::Vector4 (default: {})
/// @param expensiveSuperSample: bool (default: false)
/// @param bicubic: bool (default: false)
/// @param efficientSuperSample: bool (default: false)
/// @param efficientSharpen: bool (default: false)
/// @param expensiveSharpen: bool (default: false)
/// @param hidden: bool (default: false)
/// @param secureContent: bool (default: false)
/// @param automaticFiltering: bool (default: false)
inline bool GlobalNamespace::OVRPlugin::EnqueueSubmitLayer(bool  onTop, bool  headLocked, bool  noDepthBufferTesting, ::cordl_internals::intptr_t  leftTexture, ::cordl_internals::intptr_t  rightTexture, int32_t  layerId, int32_t  frameIndex, ::GlobalNamespace::__OVRPlugin__Posef  pose, ::GlobalNamespace::__OVRPlugin__Vector3f  scale, int32_t  layerIndex, ::GlobalNamespace::__OVRPlugin__OverlayShape  shape, bool  overrideTextureRectMatrix, ::GlobalNamespace::__OVRPlugin__TextureRectMatrixf  textureRectMatrix, bool  overridePerLayerColorScaleAndOffset, ::UnityEngine::Vector4  colorScale, ::UnityEngine::Vector4  colorOffset, bool  expensiveSuperSample, bool  bicubic, bool  efficientSuperSample, bool  efficientSharpen, bool  expensiveSharpen, bool  hidden, bool  secureContent, bool  automaticFiltering)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EnqueueSubmitLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TextureRectMatrixf>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, onTop, headLocked, noDepthBufferTesting, leftTexture, rightTexture, layerId, frameIndex, pose, scale, layerIndex, shape, overrideTextureRectMatrix, textureRectMatrix, overridePerLayerColorScaleAndOffset, colorScale, colorOffset, expensiveSuperSample, bicubic, efficientSuperSample, efficientSharpen, expensiveSharpen, hidden, secureContent, automaticFiltering);
}
inline ::GlobalNamespace::__OVRPlugin__LayerDesc GlobalNamespace::OVRPlugin::CalculateLayerDesc(::GlobalNamespace::__OVRPlugin__OverlayShape  shape, ::GlobalNamespace::__OVRPlugin__LayerLayout  layout, ::GlobalNamespace::__OVRPlugin__Sizei  textureSize, int32_t  mipLevels, int32_t  sampleCount, ::GlobalNamespace::__OVRPlugin__EyeTextureFormat  format, int32_t  layerFlags)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CalculateLayerDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__OverlayShape>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerLayout>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Sizei>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__LayerDesc, false>(nullptr, ___internal_method, shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags);
}
inline bool GlobalNamespace::OVRPlugin::EnqueueSetupLayer(::GlobalNamespace::__OVRPlugin__LayerDesc  desc, int32_t  compositionDepth, ::cordl_internals::intptr_t  layerID)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EnqueueSetupLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerDesc>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, desc, compositionDepth, layerID);
}
inline bool GlobalNamespace::OVRPlugin::EnqueueDestroyLayer(::cordl_internals::intptr_t  layerID)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EnqueueDestroyLayer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerID);
}
inline ::cordl_internals::intptr_t GlobalNamespace::OVRPlugin::GetLayerTexture(int32_t  layerId, int32_t  stage, ::GlobalNamespace::__OVRPlugin__Eye  eyeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLayerTexture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Eye>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method, layerId, stage, eyeId);
}
inline int32_t GlobalNamespace::OVRPlugin::GetLayerTextureStageCount(int32_t  layerId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLayerTextureStageCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method, layerId);
}
inline ::cordl_internals::intptr_t GlobalNamespace::OVRPlugin::GetLayerAndroidSurfaceObject(int32_t  layerId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLayerAndroidSurfaceObject",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method, layerId);
}
inline bool GlobalNamespace::OVRPlugin::UpdateNodePhysicsPoses(int32_t  frameIndex, double_t  predictionSeconds)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "UpdateNodePhysicsPoses",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, frameIndex, predictionSeconds);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetNodePose(::GlobalNamespace::__OVRPlugin__Node  nodeId, ::GlobalNamespace::__OVRPlugin__Step  stepId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetNodeVelocity(::GlobalNamespace::__OVRPlugin__Node  nodeId, ::GlobalNamespace::__OVRPlugin__Step  stepId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeVelocity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetNodeAngularVelocity(::GlobalNamespace::__OVRPlugin__Node  nodeId, ::GlobalNamespace::__OVRPlugin__Step  stepId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeAngularVelocity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetNodeAcceleration(::GlobalNamespace::__OVRPlugin__Node  nodeId, ::GlobalNamespace::__OVRPlugin__Step  stepId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeAcceleration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetNodeAngularAcceleration(::GlobalNamespace::__OVRPlugin__Node  nodeId, ::GlobalNamespace::__OVRPlugin__Step  stepId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeAngularAcceleration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodePresent(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePresent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodeOrientationTracked(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeOrientationTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodeOrientationValid(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeOrientationValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodePositionTracked(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePositionTracked",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::GetNodePositionValid(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePositionValid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateRaw(::GlobalNamespace::__OVRPlugin__Node  nodeId, ::GlobalNamespace::__OVRPlugin__Step  stepId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePoseStateRaw",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PoseStatef, false>(nullptr, ___internal_method, nodeId, stepId);
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateAtTime(double_t  time, ::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePoseStateAtTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PoseStatef, false>(nullptr, ___internal_method, time, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__PoseStatef GlobalNamespace::OVRPlugin::GetNodePoseStateImmediate(::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodePoseStateImmediate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PoseStatef, false>(nullptr, ___internal_method, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::AreHandPosesGeneratedByControllerData(::GlobalNamespace::__OVRPlugin__Step  stepId, ::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "AreHandPosesGeneratedByControllerData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, nodeId);
}
inline bool GlobalNamespace::OVRPlugin::SetSimultaneousHandsAndControllersEnabled(bool  enabled)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetSimultaneousHandsAndControllersEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, enabled);
}
inline bool GlobalNamespace::OVRPlugin::GetControllerIsInHand(::GlobalNamespace::__OVRPlugin__Step  stepId, ::GlobalNamespace::__OVRPlugin__Node  nodeId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerIsInHand",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, nodeId);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetCurrentTrackingTransformPose()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetCurrentTrackingTransformPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetTrackingTransformRawPose()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackingTransformRawPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetTrackingTransformRelativePose(::GlobalNamespace::__OVRPlugin__TrackingOrigin  trackingOrigin)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackingTransformRelativePose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, trackingOrigin);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState GlobalNamespace::OVRPlugin::GetControllerState(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState2 GlobalNamespace::OVRPlugin::GetControllerState2(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState2, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState4 GlobalNamespace::OVRPlugin::GetControllerState4(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState4",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState4, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState5 GlobalNamespace::OVRPlugin::GetControllerState5(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState5",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState5, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__ControllerState6 GlobalNamespace::OVRPlugin::GetControllerState6(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerState6",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ControllerState6, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__InteractionProfile GlobalNamespace::OVRPlugin::GetCurrentInteractionProfile(::GlobalNamespace::__OVRPlugin__Hand  hand)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetCurrentInteractionProfile",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__InteractionProfile, false>(nullptr, ___internal_method, hand);
}
inline ::GlobalNamespace::__OVRPlugin__InteractionProfile GlobalNamespace::OVRPlugin::GetCurrentDetachedInteractionProfile(::GlobalNamespace::__OVRPlugin__Hand  hand)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetCurrentDetachedInteractionProfile",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__InteractionProfile, false>(nullptr, ___internal_method, hand);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerVibration(uint32_t  controllerMask, float_t  frequency, float_t  amplitude)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerVibration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, frequency, amplitude);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerLocalizedVibration(::GlobalNamespace::__OVRPlugin__Controller  controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsLocation  hapticsLocationMask, float_t  frequency, float_t  amplitude)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerLocalizedVibration",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, hapticsLocationMask, frequency, amplitude);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerHapticsAmplitudeEnvelope(::GlobalNamespace::__OVRPlugin__Controller  controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration  hapticsVibration)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerHapticsAmplitudeEnvelope",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsAmplitudeEnvelopeVibration>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, hapticsVibration);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerHapticsPcm(::GlobalNamespace::__OVRPlugin__Controller  controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsPcmVibration  hapticsVibration)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerHapticsPcm",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsPcmVibration>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, hapticsVibration);
}
inline bool GlobalNamespace::OVRPlugin::GetControllerSampleRateHz(::GlobalNamespace::__OVRPlugin__Controller  controllerMask, ByRef<float_t>  sampleRateHz)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerSampleRateHz",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Controller>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, sampleRateHz);
}
inline ::GlobalNamespace::__OVRPlugin__HapticsDesc GlobalNamespace::OVRPlugin::GetControllerHapticsDesc(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerHapticsDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__HapticsDesc, false>(nullptr, ___internal_method, controllerMask);
}
inline ::GlobalNamespace::__OVRPlugin__HapticsState GlobalNamespace::OVRPlugin::GetControllerHapticsState(uint32_t  controllerMask)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetControllerHapticsState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__HapticsState, false>(nullptr, ___internal_method, controllerMask);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerHaptics(uint32_t  controllerMask, ::GlobalNamespace::__OVRPlugin__HapticsBuffer  hapticsBuffer)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerHaptics",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__HapticsBuffer>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerMask, hapticsBuffer);
}
inline float_t GlobalNamespace::OVRPlugin::GetEyeRecommendedResolutionScale()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeRecommendedResolutionScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::GetAppCpuStartToGpuEndTime()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetAppCpuStartToGpuEndTime",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetBoundaryConfigured()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryConfigured",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryTestResult GlobalNamespace::OVRPlugin::TestBoundaryNode(::GlobalNamespace::__OVRPlugin__Node  nodeId, ::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "TestBoundaryNode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryTestResult, false>(nullptr, ___internal_method, nodeId, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryTestResult GlobalNamespace::OVRPlugin::TestBoundaryPoint(::GlobalNamespace::__OVRPlugin__Vector3f  point, ::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "TestBoundaryPoint",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector3f>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryTestResult, false>(nullptr, ___internal_method, point, boundaryType);
}
inline ::GlobalNamespace::__OVRPlugin__BoundaryGeometry GlobalNamespace::OVRPlugin::GetBoundaryGeometry(::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryGeometry",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__BoundaryGeometry, false>(nullptr, ___internal_method, boundaryType);
}
inline bool GlobalNamespace::OVRPlugin::GetBoundaryGeometry2(::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType, ::cordl_internals::intptr_t  points, ByRef<int32_t>  pointsCount)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryGeometry2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::cordl_internals::intptr_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, boundaryType, points, pointsCount);
}
inline ::GlobalNamespace::__OVRPlugin__AppPerfStats GlobalNamespace::OVRPlugin::GetAppPerfStats()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetAppPerfStats",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__AppPerfStats, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::ResetAppPerfStats()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ResetAppPerfStats",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::GetAppFramerate()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetAppFramerate",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetHandNodePoseStateLatency(double_t  latencyInSeconds)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetHandNodePoseStateLatency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, latencyInSeconds);
}
inline double_t GlobalNamespace::OVRPlugin::GetHandNodePoseStateLatency()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHandNodePoseStateLatency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<double_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerDrivenHandPoses(bool  controllerDrivenHandPoses)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerDrivenHandPoses",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerDrivenHandPoses);
}
inline bool GlobalNamespace::OVRPlugin::SetControllerDrivenHandPosesAreNatural(bool  controllerDrivenHandPosesAreNatural)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetControllerDrivenHandPosesAreNatural",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, controllerDrivenHandPosesAreNatural);
}
inline bool GlobalNamespace::OVRPlugin::IsControllerDrivenHandPosesEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsControllerDrivenHandPosesEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::AreControllerDrivenHandPosesNatural()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "AreControllerDrivenHandPosesNatural",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__EyeTextureFormat GlobalNamespace::OVRPlugin::GetDesiredEyeTextureFormat()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetDesiredEyeTextureFormat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__EyeTextureFormat, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetDesiredEyeTextureFormat(::GlobalNamespace::__OVRPlugin__EyeTextureFormat  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetDesiredEyeTextureFormat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__EyeTextureFormat>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::InitializeMixedReality()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "InitializeMixedReality",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::ShutdownMixedReality()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ShutdownMixedReality",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::IsMixedRealityInitialized()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsMixedRealityInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::OVRPlugin::GetExternalCameraCount()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetExternalCameraCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::UpdateExternalCamera()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "UpdateExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetMixedRealityCameraInfo(int32_t  cameraId, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>  cameraExtrinsics, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>  cameraIntrinsics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetMixedRealityCameraInfo",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId, cameraExtrinsics, cameraIntrinsics);
}
inline bool GlobalNamespace::OVRPlugin::OverrideExternalCameraFov(int32_t  cameraId, bool  useOverriddenFov, ::GlobalNamespace::__OVRPlugin__Fovf  fov)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "OverrideExternalCameraFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Fovf>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId, useOverriddenFov, fov);
}
inline bool GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraFov(int32_t  cameraId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetUseOverriddenExternalCameraFov",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId);
}
inline bool GlobalNamespace::OVRPlugin::OverrideExternalCameraStaticPose(int32_t  cameraId, bool  useOverriddenPose, ::GlobalNamespace::__OVRPlugin__Posef  poseInStageOrigin)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "OverrideExternalCameraStaticPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Posef>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId, useOverriddenPose, poseInStageOrigin);
}
inline bool GlobalNamespace::OVRPlugin::GetUseOverriddenExternalCameraStaticPose(int32_t  cameraId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetUseOverriddenExternalCameraStaticPose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraId);
}
inline bool GlobalNamespace::OVRPlugin::ResetDefaultExternalCamera()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ResetDefaultExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetDefaultExternalCamera(::StringW  cameraName, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>  cameraIntrinsics, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>  cameraExtrinsics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetDefaultExternalCamera",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
inline bool GlobalNamespace::OVRPlugin::SetExternalCameraProperties(::StringW  cameraName, ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>  cameraIntrinsics, ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>  cameraExtrinsics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetExternalCameraProperties",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraIntrinsics>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__CameraExtrinsics>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
inline bool GlobalNamespace::OVRPlugin::SetMultimodalHandsControllersSupported(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetMultimodalHandsControllersSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::IsMultimodalHandsControllersSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsMultimodalHandsControllersSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::IsInsightPassthroughSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsInsightPassthroughSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::InitializeInsightPassthrough()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "InitializeInsightPassthrough",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::ShutdownInsightPassthrough()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ShutdownInsightPassthrough",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::IsInsightPassthroughInitialized()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsInsightPassthroughInitialized",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetInsightPassthroughInitializationState()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetInsightPassthroughInitializationState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::CreateInsightTriangleMesh(int32_t  layerId, ::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>  vertices, ::ArrayW<int32_t,::Array<int32_t>*>  triangles, ByRef<uint64_t>  meshHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateInsightTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<int32_t,::Array<int32_t>*>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, vertices, triangles, meshHandle);
}
inline bool GlobalNamespace::OVRPlugin::DestroyInsightTriangleMesh(uint64_t  meshHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroyInsightTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, meshHandle);
}
inline bool GlobalNamespace::OVRPlugin::AddInsightPassthroughSurfaceGeometry(int32_t  layerId, uint64_t  meshHandle, ::UnityEngine::Matrix4x4  T_world_model, ByRef<uint64_t>  geometryInstanceHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "AddInsightPassthroughSurfaceGeometry",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, meshHandle, T_world_model, geometryInstanceHandle);
}
inline bool GlobalNamespace::OVRPlugin::DestroyInsightPassthroughGeometryInstance(uint64_t  geometryInstanceHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroyInsightPassthroughGeometryInstance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, geometryInstanceHandle);
}
inline bool GlobalNamespace::OVRPlugin::UpdateInsightPassthroughGeometryTransform(uint64_t  geometryInstanceHandle, ::UnityEngine::Matrix4x4  transform)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "UpdateInsightPassthroughGeometryTransform",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Matrix4x4>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, geometryInstanceHandle, transform);
}
inline bool GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle(int32_t  layerId, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2  style)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetInsightPassthroughStyle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle2>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, style);
}
inline bool GlobalNamespace::OVRPlugin::SetInsightPassthroughStyle(int32_t  layerId, ::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle  style)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetInsightPassthroughStyle",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughStyle>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, style);
}
inline bool GlobalNamespace::OVRPlugin::CreatePassthroughColorLut(::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels  channels, uint32_t  resolution, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData  data, ByRef<uint64_t>  colorLut)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreatePassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutChannels>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, channels, resolution, data, colorLut);
}
inline bool GlobalNamespace::OVRPlugin::DestroyPassthroughColorLut(uint64_t  colorLut)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroyPassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, colorLut);
}
inline bool GlobalNamespace::OVRPlugin::UpdatePassthroughColorLut(uint64_t  colorLut, ::GlobalNamespace::__OVRPlugin__PassthroughColorLutData  data)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "UpdatePassthroughColorLut",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PassthroughColorLutData>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, colorLut, data);
}
inline bool GlobalNamespace::OVRPlugin::SetInsightPassthroughKeyboardHandsIntensity(int32_t  layerId, ::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity  intensity)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetInsightPassthroughKeyboardHandsIntensity",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__InsightPassthroughKeyboardHandsIntensity>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, intensity);
}
inline ::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags GlobalNamespace::OVRPlugin::GetPassthroughCapabilityFlags()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPassthroughCapabilityFlags",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__PassthroughCapabilityFlags, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetPassthroughCapabilities(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>  outCapabilities)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPassthroughCapabilities",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughCapabilities>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, outCapabilities);
}
inline ::GlobalNamespace::__OVRPlugin__Vector3f GlobalNamespace::OVRPlugin::GetBoundaryDimensions(::GlobalNamespace::__OVRPlugin__BoundaryType  boundaryType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryDimensions",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoundaryType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Vector3f, false>(nullptr, ___internal_method, boundaryType);
}
inline bool GlobalNamespace::OVRPlugin::GetBoundaryVisible()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBoundaryVisible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetBoundaryVisible(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetBoundaryVisible",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__SystemHeadset GlobalNamespace::OVRPlugin::GetSystemHeadsetType()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSystemHeadsetType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__SystemHeadset, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::OVRPlugin::GetActiveController()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetActiveController",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Controller, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Controller GlobalNamespace::OVRPlugin::GetConnectedControllers()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetConnectedControllers",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Controller, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Bool GlobalNamespace::OVRPlugin::ToBool(bool  b)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ToBool",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Bool, false>(nullptr, ___internal_method, b);
}
inline ::GlobalNamespace::__OVRPlugin__TrackingOrigin GlobalNamespace::OVRPlugin::GetTrackingOriginType()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackingOriginType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__TrackingOrigin, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetTrackingOriginType(::GlobalNamespace::__OVRPlugin__TrackingOrigin  originType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetTrackingOriginType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, originType);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::GetTrackingCalibratedOrigin()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTrackingCalibratedOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetTrackingCalibratedOrigin()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetTrackingCalibratedOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::RecenterTrackingOrigin(::GlobalNamespace::__OVRPlugin__RecenterFlags  flags)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "RecenterTrackingOrigin",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__RecenterFlags>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, flags);
}
inline bool GlobalNamespace::OVRPlugin::get_foveatedRenderingSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_foveatedRenderingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeTrackedFoveatedRenderingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeTrackedFoveatedRenderingEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeTrackedFoveatedRenderingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_eyeTrackedFoveatedRenderingEnabled(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_eyeTrackedFoveatedRenderingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_fixedFoveatedRenderingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel GlobalNamespace::OVRPlugin::get_foveatedRenderingLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_foveatedRenderingLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_foveatedRenderingLevel(::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_foveatedRenderingLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FoveatedRenderingLevel>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel GlobalNamespace::OVRPlugin::get_fixedFoveatedRenderingLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_fixedFoveatedRenderingLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_fixedFoveatedRenderingLevel(::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_fixedFoveatedRenderingLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__FixedFoveatedRenderingLevel>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_useDynamicFoveatedRendering()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_useDynamicFoveatedRendering",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_useDynamicFoveatedRendering(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_useDynamicFoveatedRendering",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_useDynamicFixedFoveatedRendering()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_useDynamicFixedFoveatedRendering",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_useDynamicFixedFoveatedRendering(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_useDynamicFixedFoveatedRendering",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_tiledMultiResSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_tiledMultiResSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__TiledMultiResLevel GlobalNamespace::OVRPlugin::get_tiledMultiResLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_tiledMultiResLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__TiledMultiResLevel, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_tiledMultiResLevel(::GlobalNamespace::__OVRPlugin__TiledMultiResLevel  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_tiledMultiResLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TiledMultiResLevel>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_gpuUtilSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_gpuUtilSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_gpuUtilLevel()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_gpuUtilLevel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline ::ArrayW<float_t,::Array<float_t>*> GlobalNamespace::OVRPlugin::get_systemDisplayFrequenciesAvailable()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_systemDisplayFrequenciesAvailable",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::ArrayW<float_t,::Array<float_t>*>, false>(nullptr, ___internal_method);
}
inline float_t GlobalNamespace::OVRPlugin::get_systemDisplayFrequency()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_systemDisplayFrequency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_systemDisplayFrequency(float_t  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_systemDisplayFrequency",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<float_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeFovPremultipliedAlphaModeEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeFovPremultipliedAlphaModeEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_eyeFovPremultipliedAlphaModeEnabled(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_eyeFovPremultipliedAlphaModeEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline bool GlobalNamespace::OVRPlugin::GetNodeFrustum2(::GlobalNamespace::__OVRPlugin__Node  nodeId, ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>  frustum)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNodeFrustum2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Node>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Frustumf2>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, nodeId, frustum);
}
inline bool GlobalNamespace::OVRPlugin::get_AsymmetricFovEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_AsymmetricFovEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_EyeTextureArrayEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_EyeTextureArrayEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_localDimmingSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_localDimmingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_localDimming()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_localDimming",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline void GlobalNamespace::OVRPlugin::set_localDimming(bool  value)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "set_localDimming",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method, value);
}
inline ::GlobalNamespace::__OVRPlugin__Handedness GlobalNamespace::OVRPlugin::GetDominantHand()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetDominantHand",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Handedness, false>(nullptr, ___internal_method);
}
/// @param param: ::StringW (default: u"")
/// @param source: ::StringW (default: u"")
inline bool GlobalNamespace::OVRPlugin::SendEvent(::StringW  name, ::StringW  param, ::StringW  source)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SendEvent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, name, param, source);
}
inline bool GlobalNamespace::OVRPlugin::SetHeadPoseModifier(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>  relativeRotation, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>  relativeTranslation)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetHeadPoseModifier",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, relativeRotation, relativeTranslation);
}
inline bool GlobalNamespace::OVRPlugin::GetHeadPoseModifier(ByRef<::GlobalNamespace::__OVRPlugin__Quatf>  relativeRotation, ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>  relativeTranslation)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHeadPoseModifier",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Quatf>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Vector3f>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, relativeRotation, relativeTranslation);
}
inline bool GlobalNamespace::OVRPlugin::IsPerfMetricsSupported(::GlobalNamespace::__OVRPlugin__PerfMetrics  perfMetrics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsPerfMetricsSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, perfMetrics);
}
inline ::System::Nullable_1<float_t> GlobalNamespace::OVRPlugin::GetPerfMetricsFloat(::GlobalNamespace::__OVRPlugin__PerfMetrics  perfMetrics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPerfMetricsFloat",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::System::Nullable_1<float_t>, false>(nullptr, ___internal_method, perfMetrics);
}
inline ::System::Nullable_1<int32_t> GlobalNamespace::OVRPlugin::GetPerfMetricsInt(::GlobalNamespace::__OVRPlugin__PerfMetrics  perfMetrics)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPerfMetricsInt",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PerfMetrics>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::System::Nullable_1<int32_t>, false>(nullptr, ___internal_method, perfMetrics);
}
inline double_t GlobalNamespace::OVRPlugin::GetTimeInSeconds()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetTimeInSeconds",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<double_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetColorScaleAndOffset(::UnityEngine::Vector4  colorScale, ::UnityEngine::Vector4  colorOffset, bool  applyToAllLayers)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetColorScaleAndOffset",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::UnityEngine::Vector4>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, colorScale, colorOffset, applyToAllLayers);
}
/// @param param: ::StringW (default: u"")
inline bool GlobalNamespace::OVRPlugin::AddCustomMetadata(::StringW  name, ::StringW  param)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "AddCustomMetadata",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, name, param);
}
inline bool GlobalNamespace::OVRPlugin::SetDeveloperMode(::GlobalNamespace::__OVRPlugin__Bool  active)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetDeveloperMode",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Bool>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, active);
}
inline float_t GlobalNamespace::OVRPlugin::GetAdaptiveGPUPerformanceScale()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetAdaptiveGPUPerformanceScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<float_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetHandTrackingEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHandTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetHandState(::GlobalNamespace::__OVRPlugin__Step  stepId, ::GlobalNamespace::__OVRPlugin__Hand  hand, ByRef<::GlobalNamespace::__OVRPlugin__HandState>  handState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHandState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Hand>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__HandState>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, hand, handState);
}
inline bool GlobalNamespace::OVRPlugin::IsValidBone(::GlobalNamespace::__OVRPlugin__BoneId  bone, ::GlobalNamespace::__OVRPlugin__SkeletonType  skeletonType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "IsValidBone",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__BoneId>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, bone, skeletonType);
}
inline bool GlobalNamespace::OVRPlugin::GetSkeleton(::GlobalNamespace::__OVRPlugin__SkeletonType  skeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>  skeleton)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSkeleton",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, skeletonType, skeleton);
}
inline bool GlobalNamespace::OVRPlugin::GetSkeleton2(::GlobalNamespace::__OVRPlugin__SkeletonType  skeletonType, ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2>  skeleton)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSkeleton2",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SkeletonType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Skeleton2>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, skeletonType, skeleton);
}
inline bool GlobalNamespace::OVRPlugin::get_bodyTrackingSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_bodyTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_bodyTrackingEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_bodyTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetBodyState(::GlobalNamespace::__OVRPlugin__Step  stepId, ByRef<::GlobalNamespace::__OVRPlugin__BodyState>  bodyState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetBodyState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__BodyState>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, bodyState);
}
inline bool GlobalNamespace::OVRPlugin::GetMesh(::GlobalNamespace::__OVRPlugin__MeshType  meshType, ByRef<::GlobalNamespace::__OVRPlugin__Mesh*>  mesh)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__MeshType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Mesh*>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, meshType, mesh);
}
inline bool GlobalNamespace::OVRPlugin::StartKeyboardTracking(uint64_t  trackedKeyboardId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StartKeyboardTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, trackedKeyboardId);
}
inline bool GlobalNamespace::OVRPlugin::StopKeyboardTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StopKeyboardTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetKeyboardState(::GlobalNamespace::__OVRPlugin__Step  stepId, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>  keyboardState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetKeyboardState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardState>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, keyboardState);
}
inline bool GlobalNamespace::OVRPlugin::GetSystemKeyboardDescription(::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags  keyboardQueryFlags, ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>  keyboardDescription)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSystemKeyboardDescription",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackedKeyboardQueryFlags>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__KeyboardDescription>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, keyboardQueryFlags, keyboardDescription);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::CreateVirtualKeyboard(::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo  createInfo)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateVirtualKeyboard",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardCreateInfo>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::DestroyVirtualKeyboard()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroyVirtualKeyboard",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::SendVirtualKeyboardInput(::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo  inputInfo, ByRef<::GlobalNamespace::__OVRPlugin__Posef>  interactorRootPose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SendVirtualKeyboardInput",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardInputInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, inputInfo, interactorRootPose);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::ChangeVirtualKeyboardTextContext(::StringW  textContext)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ChangeVirtualKeyboardTextContext",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textContext);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::CreateVirtualKeyboardSpace(::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo  createInfo, ByRef<uint64_t>  keyboardSpace)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateVirtualKeyboardSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardSpaceCreateInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, createInfo, keyboardSpace);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::SuggestVirtualKeyboardLocation(::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo  locationInfo)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SuggestVirtualKeyboardLocation",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__VirtualKeyboardLocationInfo>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, locationInfo);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardScale(ByRef<float_t>  scale)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetVirtualKeyboardScale",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<float_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, scale);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardModelAnimationStates(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates>  animationStates)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetVirtualKeyboardModelAnimationStates",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelAnimationStates>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, animationStates);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardDirtyTextures(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds>  textureIds)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetVirtualKeyboardDirtyTextures",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureIds>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textureIds);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetVirtualKeyboardTextureData(uint64_t  textureId, ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>  textureData)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetVirtualKeyboardTextureData",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardTextureData>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, textureId, textureData);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::SetVirtualKeyboardModelVisibility(ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>  visibility)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetVirtualKeyboardModelVisibility",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__VirtualKeyboardModelVisibility>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, visibility);
}
inline bool GlobalNamespace::OVRPlugin::get_faceTrackingEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_faceTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_faceTrackingSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_faceTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetFaceStateInternal(::GlobalNamespace::__OVRPlugin__Step  stepId, int32_t  frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__FaceState>  faceState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetFaceStateInternal",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceState>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, frameIndex, faceState);
}
inline bool GlobalNamespace::OVRPlugin::GetFaceState(::GlobalNamespace::__OVRPlugin__Step  stepId, int32_t  frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__FaceState>  faceState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetFaceState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__FaceState>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, frameIndex, faceState);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeTrackingEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeTrackingEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::get_eyeTrackingSupported()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "get_eyeTrackingSupported",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetEyeGazesState(::GlobalNamespace::__OVRPlugin__Step  stepId, int32_t  frameIndex, ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesState>  eyeGazesState)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeGazesState",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Step>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EyeGazesState>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, stepId, frameIndex, eyeGazesState);
}
inline bool GlobalNamespace::OVRPlugin::StartEyeTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StartEyeTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StopEyeTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StopEyeTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StartFaceTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StartFaceTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StopFaceTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StopFaceTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StartBodyTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StartBodyTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::StopBodyTracking()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "StopBodyTracking",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline int32_t GlobalNamespace::OVRPlugin::GetLocalTrackingSpaceRecenterCount()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLocalTrackingSpaceRecenterCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<int32_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetSystemHmd3DofModeEnabled()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSystemHmd3DofModeEnabled",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetClientColorDesc(::GlobalNamespace::__OVRPlugin__ColorSpace  colorSpace)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetClientColorDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__ColorSpace>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, colorSpace);
}
inline ::GlobalNamespace::__OVRPlugin__ColorSpace GlobalNamespace::OVRPlugin::GetHmdColorDesc()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetHmdColorDesc",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__ColorSpace, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::PollEvent(ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>  eventDataBuffer)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "PollEvent",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__EventDataBuffer>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, eventDataBuffer);
}
inline uint64_t GlobalNamespace::OVRPlugin::GetNativeOpenXRInstance()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNativeOpenXRInstance",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<uint64_t, false>(nullptr, ___internal_method);
}
inline uint64_t GlobalNamespace::OVRPlugin::GetNativeOpenXRSession()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetNativeOpenXRSession",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<uint64_t, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::SetKeyboardOverlayUV(::GlobalNamespace::__OVRPlugin__Vector2f  uv)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetKeyboardOverlayUV",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__Vector2f>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, uv);
}
inline bool GlobalNamespace::OVRPlugin::CreateSpatialAnchor(::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo  createInfo, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateSpatialAnchor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpatialAnchorCreateInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, createInfo, requestId);
}
inline bool GlobalNamespace::OVRPlugin::SetSpaceComponentStatus(uint64_t  space, ::GlobalNamespace::__OVRPlugin__SpaceComponentType  componentType, bool  enable, double_t  timeout, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetSpaceComponentStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<bool>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<double_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, componentType, enable, timeout, requestId);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceComponentStatus(uint64_t  space, ::GlobalNamespace::__OVRPlugin__SpaceComponentType  componentType, ByRef<bool>  enabled, ByRef<bool>  changePending)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceComponentStatus",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, componentType, enabled, changePending);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetSpaceComponentStatusInternal(uint64_t  space, ::GlobalNamespace::__OVRPlugin__SpaceComponentType  componentType, ByRef<bool>  enabled, ByRef<bool>  changePending)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceComponentStatusInternal",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceComponentType>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<bool>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, space, componentType, enabled, changePending);
}
inline bool GlobalNamespace::OVRPlugin::EnumerateSpaceSupportedComponents(uint64_t  space, ByRef<uint32_t>  numSupportedComponents, ::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>  supportedComponents)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EnumerateSpaceSupportedComponents",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceComponentType,::Array<::GlobalNamespace::__OVRPlugin__SpaceComponentType>*>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, numSupportedComponents, supportedComponents);
}
inline bool GlobalNamespace::OVRPlugin::SaveSpace(uint64_t  space, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  location, ::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode  mode, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SaveSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStoragePersistenceMode>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, location, mode, requestId);
}
inline bool GlobalNamespace::OVRPlugin::EraseSpace(uint64_t  space, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  location, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "EraseSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, location, requestId);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceUuid(uint64_t  space, ByRef<::System::Guid>  uuid)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceUuid",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::System::Guid>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, uuid);
}
inline bool GlobalNamespace::OVRPlugin::QuerySpaces(::GlobalNamespace::__OVRPlugin__SpaceQueryInfo  queryInfo, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "QuerySpaces",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceQueryInfo>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, queryInfo, requestId);
}
inline bool GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults(uint64_t  requestId, ByRef<::Unity::Collections::NativeArray_1<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>>  results, ::Unity::Collections::Allocator  allocator)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "RetrieveSpaceQueryResults",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::Unity::Collections::NativeArray_1<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::Allocator>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, requestId, results, allocator);
}
inline bool GlobalNamespace::OVRPlugin::RetrieveSpaceQueryResults(uint64_t  requestId, ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceQueryResult,::Array<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>*>>  results)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "RetrieveSpaceQueryResults",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::GlobalNamespace::__OVRPlugin__SpaceQueryResult,::Array<::GlobalNamespace::__OVRPlugin__SpaceQueryResult>*>>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, requestId, results);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::SaveSpaceList(::Unity::Collections::NativeArray_1<uint64_t>  spaces, ::GlobalNamespace::__OVRPlugin__SpaceStorageLocation  location, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SaveSpaceList",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__SpaceStorageLocation>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaces, location, requestId);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceUserId(uint64_t  spaceUserHandle, ByRef<uint64_t>  spaceUserId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceUserId",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, spaceUserHandle, spaceUserId);
}
inline bool GlobalNamespace::OVRPlugin::CreateSpaceUser(uint64_t  spaceUserId, ByRef<uint64_t>  spaceUserHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "CreateSpaceUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, spaceUserId, spaceUserHandle);
}
inline bool GlobalNamespace::OVRPlugin::DestroySpaceUser(uint64_t  spaceUserHandle)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroySpaceUser",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, spaceUserHandle);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::ShareSpaces(::Unity::Collections::NativeArray_1<uint64_t>  spaces, ::Unity::Collections::NativeArray_1<uint64_t>  userHandles, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "ShareSpaces",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<uint64_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, spaces, userHandles, requestId);
}
inline bool GlobalNamespace::OVRPlugin::TryLocateSpace(uint64_t  space, ::GlobalNamespace::__OVRPlugin__TrackingOrigin  baseOrigin, ByRef<::GlobalNamespace::__OVRPlugin__Posef>  pose)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "TryLocateSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, baseOrigin, pose);
}
inline ::GlobalNamespace::__OVRPlugin__Posef GlobalNamespace::OVRPlugin::LocateSpace(uint64_t  space, ::GlobalNamespace::__OVRPlugin__TrackingOrigin  baseOrigin)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "LocateSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Posef, false>(nullptr, ___internal_method, space, baseOrigin);
}
inline bool GlobalNamespace::OVRPlugin::TryLocateSpace(uint64_t  space, ::GlobalNamespace::__OVRPlugin__TrackingOrigin  baseOrigin, ByRef<::GlobalNamespace::__OVRPlugin__Posef>  pose, ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>  locationFlags)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "TryLocateSpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__TrackingOrigin>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Posef>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__SpaceLocationFlags>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, baseOrigin, pose, locationFlags);
}
inline bool GlobalNamespace::OVRPlugin::DestroySpace(uint64_t  space)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "DestroySpace",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceContainer(uint64_t  space, ByRef<::ArrayW<::System::Guid,::Array<::System::Guid>*>>  containerUuids)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceContainer",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::System::Guid,::Array<::System::Guid>*>>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, containerUuids);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundingBox2D(uint64_t  space, ByRef<::GlobalNamespace::__OVRPlugin__Rectf>  rect)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundingBox2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Rectf>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, rect);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundingBox3D(uint64_t  space, ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>  bounds)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundingBox3D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Boundsf>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, bounds);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceSemanticLabels(uint64_t  space, ByRef<::StringW>  labels)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceSemanticLabels",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::StringW>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, labels);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceRoomLayout(uint64_t  space, ByRef<::GlobalNamespace::__OVRPlugin__RoomLayout>  roomLayout)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceRoomLayout",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RoomLayout>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, roomLayout);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2DCount(uint64_t  space, ByRef<int32_t>  count)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2DCount",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, count);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t  space, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>  boundary)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, boundary);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t  space, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>  boundary, ByRef<int32_t>  count)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, boundary, count);
}
inline ::Unity::Collections::NativeArray_1<::UnityEngine::Vector2> GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t  space, ::Unity::Collections::Allocator  allocator)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::Allocator>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::Unity::Collections::NativeArray_1<::UnityEngine::Vector2>, false>(nullptr, ___internal_method, space, allocator);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceBoundary2D(uint64_t  space, ByRef<::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>>  boundary)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceBoundary2D",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, boundary);
}
inline bool GlobalNamespace::OVRPlugin::RequestSceneCapture(::StringW  requestString, ByRef<uint64_t>  requestId)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "RequestSceneCapture",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<uint64_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, requestString, requestId);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceTriangleMeshCounts(uint64_t  space, ByRef<int32_t>  vertexCount, ByRef<int32_t>  triangleCount)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceTriangleMeshCounts",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, vertexCount, triangleCount);
}
inline bool GlobalNamespace::OVRPlugin::GetSpaceTriangleMesh(uint64_t  space, ::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>  vertices, ::Unity::Collections::NativeArray_1<int32_t>  triangles)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetSpaceTriangleMesh",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::Unity::Collections::NativeArray_1<int32_t>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, space, vertices, triangles);
}
inline bool GlobalNamespace::OVRPlugin::GetLayerRecommendedResolution(int32_t  layerId, ByRef<::GlobalNamespace::__OVRPlugin__Sizei>  recommendedSize)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetLayerRecommendedResolution",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<int32_t>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, layerId, recommendedSize);
}
inline bool GlobalNamespace::OVRPlugin::GetEyeLayerRecommendedResolution(ByRef<::GlobalNamespace::__OVRPlugin__Sizei>  recommendedSize)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetEyeLayerRecommendedResolution",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__Sizei>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, recommendedSize);
}
inline ::ArrayW<::StringW,::Array<::StringW>*> GlobalNamespace::OVRPlugin::GetRenderModelPaths()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetRenderModelPaths",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<::ArrayW<::StringW,::Array<::StringW>*>, false>(nullptr, ___internal_method);
}
inline bool GlobalNamespace::OVRPlugin::GetRenderModelProperties(::StringW  modelPath, ByRef<::GlobalNamespace::__OVRPlugin__RenderModelProperties>  modelProperties)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetRenderModelProperties",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::StringW>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__RenderModelProperties>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, modelPath, modelProperties);
}
inline ::ArrayW<uint8_t,::Array<uint8_t>*> GlobalNamespace::OVRPlugin::LoadRenderModel(uint64_t  modelKey)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "LoadRenderModel",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<uint64_t>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::ArrayW<uint8_t,::Array<uint8_t>*>, false>(nullptr, ___internal_method, modelKey);
}
inline void GlobalNamespace::OVRPlugin::OnEditorShutdown()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "OnEditorShutdown",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(nullptr, ___internal_method);
}
inline ::GlobalNamespace::__OVRPlugin__Result GlobalNamespace::OVRPlugin::GetPassthroughPreferences(ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>  preferences)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "GetPassthroughPreferences",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<ByRef<::GlobalNamespace::__OVRPlugin__PassthroughPreferences>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::GlobalNamespace::__OVRPlugin__Result, false>(nullptr, ___internal_method, preferences);
}
inline bool GlobalNamespace::OVRPlugin::SetEyeBufferSharpenType(::GlobalNamespace::__OVRPlugin__LayerSharpenType  sharpenType)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::OVRPlugin*>::get(),
                            "SetEyeBufferSharpenType",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__LayerSharpenType>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<bool, false>(nullptr, ___internal_method, sharpenType);
}
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>._ctor
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::*)(::ArrayW<::System::Guid,::Array<::System::Guid>*>)>(&::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::_ctor)> {
  constexpr static std::size_t size = 0xffffffffffffffff;
  constexpr static std::size_t addrs = 0x0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<::System::Guid,::Array<::System::Guid>*>>::get()}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>.Dispose
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::*)()>(&::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::Dispose)> {
  constexpr static std::size_t size = 0xffffffffffffffff;
  constexpr static std::size_t addrs = 0x0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>>::get(),
                            "Dispose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
    return ___internal_method;
  }
};
//  Writing Method size for method: ::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>.op_Implicit___cordl_internals__intptr_t
template<>

struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::cordl_internals::intptr_t (*)(::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>)>(&::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::op_Implicit___cordl_internals__intptr_t)> {
  constexpr static std::size_t size = 0xffffffffffffffff;
  constexpr static std::size_t addrs = 0x0;

  inline static const ::MethodInfo* methodInfo() {
    static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>>::get(),
                            "op_Implicit",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>>::get()}
                        )));
    return ___internal_method;
  }
};
/// @brief Convert operator to "::System::IDisposable"
constexpr  GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::operator ::System::IDisposable*()  {
return static_cast<::System::IDisposable*>(static_cast<void*>(::cordl_internals::Box(this)));
}
constexpr void GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::__set__handle(::System::Runtime::InteropServices::GCHandle  value)  {
::cordl_internals::setInstanceField<::System::Runtime::InteropServices::GCHandle, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance, std::forward<::System::Runtime::InteropServices::GCHandle>(value));
}
constexpr ::System::Runtime::InteropServices::GCHandle& GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::__get__handle()  {
return ::cordl_internals::getInstanceField<::System::Runtime::InteropServices::GCHandle, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
constexpr ::System::Runtime::InteropServices::GCHandle const& GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::__get__handle() const {
return ::cordl_internals::getInstanceField<::System::Runtime::InteropServices::GCHandle, 0x0>(this->::bs_hook::ValueTypeWrapper<__IL2CPP_VALUE_TYPE_SIZE>::instance);
}
inline void GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::_ctor(::ArrayW<::System::Guid,::Array<::System::Guid>*>  array)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>>::get(),
                            ".ctor",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::ArrayW<::System::Guid,::Array<::System::Guid>*>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method, array);
}
inline void GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::Dispose()  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>>::get(),
                            "Dispose",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{}
                        )));
return ::cordl_internals::RunMethodRethrow<void, false>(*this, ___internal_method);
}
inline ::cordl_internals::intptr_t GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::op_Implicit___cordl_internals__intptr_t(::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>  pinnedArray)  {
static auto* ___internal_method = THROW_UNLESS((::il2cpp_utils::FindMethod(
                            ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>>::get(),
                            "op_Implicit",
                            std::vector<Il2CppClass*>{},
                            ::std::vector<const Il2CppType*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_type<::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>>::get()}
                        )));
return ::cordl_internals::RunMethodRethrow<::cordl_internals::intptr_t, false>(nullptr, ___internal_method, pinnedArray);
}
// Ctor Parameters [CppParam { name: "_handle", ty: "::System::Runtime::InteropServices::GCHandle", modifiers: "", def_value: Some("{}") }]
constexpr ::GlobalNamespace::__OVRPlugin__PinnedArray_1<::System::Guid>::__OVRPlugin__PinnedArray_1(::System::Runtime::InteropServices::GCHandle  _handle) noexcept : ::bs_hook::ValueTypeWrapper<0x8>() {this->_handle = _handle;
}
#ifndef CORDL_NO_IMPL_INCLUDE
#endif
