#pragma once
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "../../../cordl_internals/cordl_internals.hpp"
CORDL_MODULE_INIT
#include "System/zzzz__Object_def.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/value-wrapper-type.hpp"
#include <cmath>
#include <cstddef>
#include <cstdint>
CORDL_MODULE_EXPORT(List_1)
namespace System::Collections {
class IEnumerable;
}
namespace System::Collections::Generic {
template<typename T>
class IList_1;
}
namespace System::Collections::Generic {
template<typename T>
class ICollection_1;
}
namespace System::Collections {
class IList;
}
namespace System {
class Array;
}
namespace System::Collections::Generic {
template<typename T>
class IComparer_1;
}
namespace System::Collections::Generic {
template<typename T>
class IEnumerable_1;
}
namespace System::Collections::Generic {
template<typename T>
class IEnumerator_1;
}
namespace System {
class Object;
}
namespace System {
template<typename T>
class Predicate_1;
}
namespace System::Collections::Generic {
template<typename T>
struct __List_1__Enumerator;
}
namespace System::Collections::Generic {
template<typename T>
class IReadOnlyList_1;
}
namespace System {
template<typename T>
class Action_1;
}
namespace BeatSaber::BeatAvatarAdapter::AvatarEditor {
struct EditAvatarHistorySnapshot;
}
namespace System::Collections {
class ICollection;
}
namespace System::Collections::Generic {
template<typename T>
class IReadOnlyCollection_1;
}
namespace System::Collections::ObjectModel {
template<typename T>
class ReadOnlyCollection_1;
}
namespace System::Collections {
class IEnumerator;
}
namespace System {
template<typename T>
class Comparison_1;
}
namespace System {
template<typename TInput,typename TOutput>
class Converter_2;
}
namespace GlobalNamespace {
struct BezierCurve;
}
namespace GlobalNamespace {
struct MultiplayerAvatarData;
}
namespace GlobalNamespace {
struct OVRAnchor;
}
namespace GlobalNamespace {
struct OVRSpaceUser;
}
namespace GlobalNamespace {
template<typename TKey,typename TValue>
struct __AsyncCachedLoader_2__ScheduledTask;
}
namespace GlobalNamespace {
struct __BeatLine__HighlightData;
}
namespace GlobalNamespace {
struct __BeatmapDataLoader__BpmTimeProcessor__BpmChangeData;
}
namespace GlobalNamespace {
struct __DebugConsoleController__ConsoleMessage;
}
namespace GlobalNamespace {
struct __InputControlLayout__Collection__LayoutMatcher;
}
namespace GlobalNamespace {
struct __MultiplierValuesRecorder__MultiplierValue;
}
namespace GlobalNamespace {
struct __OVRPassthroughLayer__DeferredPassthroughMeshAddition;
}
namespace GlobalNamespace {
struct __OVRPassthroughLayer__SerializedSurfaceGeometry;
}
namespace GlobalNamespace {
struct __OVRRaycaster__RaycastHit;
}
namespace GlobalNamespace {
struct __OVRSpatialAnchor__UnboundAnchor;
}
namespace GlobalNamespace {
struct __PSVR2Helper__HeadsetHapticFrequencyLimit;
}
namespace GlobalNamespace {
struct __PackedPlayModeBuildLogs__RuntimeBuildLog;
}
namespace GlobalNamespace {
struct __PlayerStatisticsViewController__StatsScopeData;
}
namespace GlobalNamespace {
struct __SelectRegionViewController__RegionToLocalizationKeyPair;
}
namespace GlobalNamespace {
struct __SynchronizedActionQueue__SynchronizedAction;
}
namespace HoudiniEngineUnity {
struct HAPI_GeoInfo;
}
namespace HoudiniEngineUnity {
struct HAPI_PartInfo;
}
namespace HoudiniEngineUnity {
struct TransformData;
}
namespace IntervalTree {
template<typename TKey,typename TValue>
struct RangeValuePair_2;
}
namespace MidiParser {
struct MidiEvent;
}
namespace Newtonsoft::Json {
struct JsonPosition;
}
namespace System {
template<typename T>
struct ArraySegment_1;
}
namespace System::Collections {
struct DictionaryEntry;
}
namespace UnityEngine::ProBuilder {
struct Edge;
}
namespace System::Collections::Generic {
template<typename TKey,typename TValue>
struct KeyValuePair_2;
}
namespace UnityEngine {
struct PropertyName;
}
namespace UnityEngine::InputSystem::Utilities {
struct __JsonParser__JsonValue;
}
namespace System {
struct DateTime;
}
namespace System {
struct DateTimeOffset;
}
namespace System {
struct Decimal;
}
namespace System {
struct Guid;
}
namespace System::Security::Cryptography::X509Certificates {
struct X509ChainStatus;
}
namespace System::Text::RegularExpressions {
struct __RegexCharClass__SingleRange;
}
namespace System {
struct TimeSpan;
}
namespace UnityEngine {
struct Vector3;
}
namespace System {
template<typename T1,typename T2>
struct ValueTuple_2;
}
namespace System {
template<typename T1,typename T2,typename T3>
struct ValueTuple_3;
}
namespace System {
struct Int32Enum;
}
namespace TMPro::SpriteAssetUtilities {
struct __TexturePacker_JsonArray__Frame;
}
namespace Tayx::Graphy {
struct __GraphyDebugger__DebugCondition;
}
namespace Unity::Collections {
template<typename T>
struct NativeArray_1;
}
namespace UnityEngine::UIElements {
struct Vertex;
}
namespace UnityEngine {
struct AnimatorClipInfo;
}
namespace UnityEngine {
struct BoneWeight;
}
namespace UnityEngine {
struct Color;
}
namespace UnityEngine {
struct Color32;
}
namespace UnityEngine::EventSystems {
struct RaycastResult;
}
namespace UnityEngine::InputSystem::HID {
struct __HIDParser__HIDReportData;
}
namespace UnityEngine::InputSystem::HID {
struct __HID__HIDCollectionDescriptor;
}
namespace UnityEngine::InputSystem::HID {
struct __HID__HIDElementDescriptor;
}
namespace UnityEngine::InputSystem {
struct InputBinding;
}
namespace UnityEngine::InputSystem::Layouts {
struct InputDeviceDescription;
}
namespace UnityEngine::InputSystem::Layouts {
struct __InputControlLayout__ControlItem;
}
namespace UnityEngine::InputSystem::LowLevel {
struct InputEventPtr;
}
namespace UnityEngine::InputSystem::UI {
struct __TrackedDeviceRaycaster__RaycastHitData;
}
namespace UnityEngine::InputSystem::Utilities {
struct InternedString;
}
namespace UnityEngine::InputSystem::Utilities {
struct NameAndParameters;
}
namespace UnityEngine::InputSystem::Utilities {
struct NamedValue;
}
namespace UnityEngine::InputSystem::Utilities {
struct Substring;
}
namespace UnityEngine::InputSystem::XR {
struct UsageHint;
}
namespace UnityEngine::InputSystem::XR {
struct XRFeatureDescriptor;
}
namespace UnityEngine::InputSystem {
struct __InputActionMap__BindingOverrideJson;
}
namespace UnityEngine {
struct Matrix4x4;
}
namespace UnityEngine::Playables {
struct Playable;
}
namespace UnityEngine::Playables {
struct PlayableBinding;
}
namespace UnityEngine::ProBuilder {
struct BezierPoint;
}
namespace UnityEngine::ProBuilder {
struct EdgeLookup;
}
namespace UnityEngine::ProBuilder {
template<typename T1,typename T2>
struct SimpleTuple_2;
}
namespace UnityEngine {
struct Vector2;
}
namespace UnityEngine::ProBuilder {
struct Triangle;
}
namespace UnityEngine {
struct Quaternion;
}
namespace UnityEngine {
struct RaycastHit2D;
}
namespace UnityEngine {
struct Rect;
}
namespace UnityEngine::Rendering {
struct SubMeshDescriptor;
}
namespace UnityEngine::Rendering {
struct VertexAttributeDescriptor;
}
namespace UnityEngine::ResourceManagement::AsyncOperations {
struct AsyncOperationHandle;
}
namespace UnityEngine::ResourceManagement::Diagnostics {
struct DiagnosticEvent;
}
namespace UnityEngine::ResourceManagement::Util {
struct ObjectInitializationData;
}
namespace UnityEngine::ResourceManagement::Util {
struct __DelayedActionManager__DelegateInfo;
}
namespace UnityEngine::ResourceManagement {
struct __ResourceManager__DeferredCallbackRegisterRequest;
}
namespace UnityEngine::SceneManagement {
struct Scene;
}
namespace UnityEngine::SpatialTracking {
struct __TrackedPoseDriverDataDescription__PoseData;
}
namespace UnityEngine::TextCore {
struct GlyphRect;
}
namespace UnityEngine::TextCore::LowLevel {
struct GlyphPairAdjustmentRecord;
}
namespace UnityEngine::TextCore::Text {
struct __TextSettings__FontReferenceMap;
}
namespace UnityEngine::Timeline {
struct IntervalTreeNode;
}
namespace UnityEngine::Timeline {
struct __AnimationOutputWeightProcessor__WeightInfo;
}
namespace UnityEngine::Timeline {
template<typename T>
struct __IntervalTree_1__Entry;
}
namespace UnityEngine::Timeline {
struct __TimeNotificationBehaviour__NotificationEntry;
}
namespace UnityEngine {
struct TreeInstance;
}
namespace UnityEngine {
struct UICharInfo;
}
namespace UnityEngine::UIElements {
struct ComputedTransitionProperty;
}
namespace UnityEngine::UIElements {
struct EasingFunction;
}
namespace UnityEngine::UIElements {
struct ManipulatorActivationFilter;
}
namespace UnityEngine::UIElements {
struct RuleMatcher;
}
namespace UnityEngine::UIElements {
struct StylePropertyName;
}
namespace UnityEngine::UIElements {
struct StyleSelectorPart;
}
namespace UnityEngine::UIElements::StyleSheets {
struct SelectorMatchRecord;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StylePropertyValue;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StyleValue;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StyleValueManaged;
}
namespace UnityEngine::UIElements::StyleSheets::Syntax {
struct StyleSyntaxToken;
}
namespace UnityEngine::UIElements {
struct StyleVariable;
}
namespace UnityEngine::UIElements {
struct TimeValue;
}
namespace UnityEngine::UIElements::UIR::Implementation {
struct __UIRStylePainter__Entry;
}
namespace UnityEngine::UIElements::UIR {
struct RenderChainTextEntry;
}
namespace UnityEngine::UIElements::UIR {
struct __BitmapAllocator32__Page;
}
namespace UnityEngine::UIElements::UIR {
struct __RenderChain__RenderNodeData;
}
namespace UnityEngine::UIElements::UIR {
struct __TextureBlitter__BlitInfo;
}
namespace UnityEngine::UIElements::UIR {
struct __UIRenderDevice__AllocToFree;
}
namespace UnityEngine::UIElements::UIR {
struct __UIRenderDevice__AllocToUpdate;
}
namespace UnityEngine::UIElements {
struct __FocusController__FocusedElement;
}
namespace UnityEngine::UIElements {
struct __InternalTreeView__TreeViewItemWrapper;
}
namespace UnityEngine::UIElements {
struct __TemplateAsset__AttributeOverride;
}
namespace UnityEngine::UIElements {
struct __TextureRegistry__TextureInfo;
}
namespace UnityEngine::UIElements {
struct __TreeView__TreeViewItemWrapper;
}
namespace UnityEngine::UIElements {
struct __VisualTreeAsset__SlotDefinition;
}
namespace UnityEngine::UIElements {
struct __VisualTreeAsset__SlotUsageEntry;
}
namespace UnityEngine::UIElements {
struct __VisualTreeAsset__UsingEntry;
}
namespace UnityEngine {
struct UILineInfo;
}
namespace UnityEngine {
struct UIVertex;
}
namespace UnityEngine {
struct Vector3Int;
}
namespace UnityEngine {
struct Vector4;
}
namespace UnityEngine::XR {
struct XRNodeState;
}
namespace UnityEngine {
struct __BeforeRenderHelper__OrderBlock;
}
namespace UnityEngine {
struct __Camera__RenderRequest;
}
namespace UnityEngine {
struct __UnitySynchronizationContext__WorkRequest;
}
namespace VRUIControls {
struct __PhysicsRaycasterWithCache__CachedRaycast;
}
namespace VRUIControls {
struct __VRGraphicRaycaster__VRGraphicRaycastResult;
}
namespace Zenject {
struct BindingId;
}
namespace Zenject {
struct TypeValuePair;
}
namespace Zenject {
struct __DisposableManager__DisposableInfo;
}
namespace Zenject {
struct __DisposeBlock__SpawnedObjectPoolPair;
}
namespace Zenject {
struct __PoolableManager__PoolableInfo;
}
namespace System {
class IDisposable;
}
// Forward declare root types
namespace System::Collections::Generic {
template<typename T>
class List_1;
}
namespace System::Collections::Generic {
template<>
class List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::BezierCurve>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::MultiplayerAvatarData>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::OVRAnchor>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::OVRSpaceUser>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
class List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__BeatLine__HighlightData>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>;
}
namespace System::Collections::Generic {
template<>
class List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>;
}
namespace System::Collections::Generic {
template<>
class List_1<::HoudiniEngineUnity::HAPI_GeoInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<::HoudiniEngineUnity::HAPI_PartInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<::HoudiniEngineUnity::TransformData>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
class List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::MidiParser::MidiEvent>;
}
namespace System::Collections::Generic {
template<>
class List_1<::Newtonsoft::Json::JsonPosition>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::ArraySegment_1<uint8_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::Collections::DictionaryEntry>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
class List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
class List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0>
class List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
class List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
class List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::DateTime>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::DateTimeOffset>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::Decimal>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::Guid>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>;
}
namespace System::Collections::Generic {
template<>
class List_1<::System::TimeSpan>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
class List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
class List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T2_cordlgen_0>
class List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<::cordl_internals::is_or_is_backed_by<int32_t> T1_cordlgen_0,::cordl_internals::is_or_is_backed_by<int32_t> T2_cordlgen_1,::il2cpp_utils::il2cpp_reference_type T3_cordlgen_2>
class List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>;
}
namespace System::Collections::Generic {
template<>
class List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>;
}
namespace System::Collections::Generic {
template<>
class List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::Unity::Collections::NativeArray_1<uint16_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::AnimatorClipInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::BoneWeight>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Color>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Color32>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::EventSystems::RaycastResult>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::InputBinding>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::Utilities::InternedString>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::Utilities::NamedValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::Utilities::Substring>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::XR::UsageHint>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Matrix4x4>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Playables::Playable>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Playables::PlayableBinding>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ProBuilder::BezierPoint>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ProBuilder::Edge>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ProBuilder::EdgeLookup>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
class List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
class List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
class List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ProBuilder::Triangle>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Quaternion>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::RaycastHit2D>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Rect>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Rendering::SubMeshDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::SceneManagement::Scene>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::TextCore::GlyphRect>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Timeline::IntervalTreeNode>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T_cordlgen_0>
class List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::TreeInstance>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UICharInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::ComputedTransitionProperty>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::EasingFunction>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::RuleMatcher>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::StylePropertyName>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::StyleSelectorPart>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::StyleVariable>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::TimeValue>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UILineInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::UIVertex>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Vector2>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Vector3>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Vector3Int>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::Vector4>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::XR::XRNodeState>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::__Camera__RenderRequest>;
}
namespace System::Collections::Generic {
template<>
class List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>;
}
namespace System::Collections::Generic {
template<>
class List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>;
}
namespace System::Collections::Generic {
template<>
class List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>;
}
namespace System::Collections::Generic {
template<>
class List_1<::Zenject::BindingId>;
}
namespace System::Collections::Generic {
template<>
class List_1<::Zenject::TypeValuePair>;
}
namespace System::Collections::Generic {
template<>
class List_1<::Zenject::__DisposableManager__DisposableInfo>;
}
namespace System::Collections::Generic {
template<>
class List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>;
}
namespace System::Collections::Generic {
template<>
class List_1<::Zenject::__PoolableManager__PoolableInfo>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T>
class List_1<T>;
}
namespace System::Collections::Generic {
template<::cordl_internals::is_or_is_backed_by<int32_t> T>
class List_1<T>;
}
namespace System::Collections::Generic {
template<::cordl_internals::is_or_is_backed_by<uint16_t> T>
class List_1<T>;
}
namespace System::Collections::Generic {
template<>
class List_1<bool>;
}
namespace System::Collections::Generic {
template<>
class List_1<char16_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<double_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<float_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<int16_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<int32_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<int64_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<int8_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<uint16_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<uint32_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<uint64_t>;
}
namespace System::Collections::Generic {
template<>
class List_1<uint8_t>;
}
namespace System::Collections::Generic {
template<typename T>
struct __List_1__Enumerator;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::BezierCurve>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::MultiplayerAvatarData>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::OVRAnchor>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::OVRSpaceUser>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
struct __List_1__Enumerator<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__BeatLine__HighlightData>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__OVRRaycaster__RaycastHit>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::HoudiniEngineUnity::HAPI_GeoInfo>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::HoudiniEngineUnity::HAPI_PartInfo>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::HoudiniEngineUnity::TransformData>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
struct __List_1__Enumerator<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::MidiParser::MidiEvent>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::Newtonsoft::Json::JsonPosition>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::ArraySegment_1<uint8_t>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::Collections::DictionaryEntry>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
struct __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
struct __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0>
struct __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
struct __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
struct __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::DateTime>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::DateTimeOffset>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::Decimal>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::Guid>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::Security::Cryptography::X509Certificates::X509ChainStatus>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::System::TimeSpan>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
struct __List_1__Enumerator<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
struct __List_1__Enumerator<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T2_cordlgen_0>
struct __List_1__Enumerator<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<::cordl_internals::is_or_is_backed_by<int32_t> T1_cordlgen_0,::cordl_internals::is_or_is_backed_by<int32_t> T2_cordlgen_1,::il2cpp_utils::il2cpp_reference_type T3_cordlgen_2>
struct __List_1__Enumerator<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::Tayx::Graphy::__GraphyDebugger__DebugCondition>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::Unity::Collections::NativeArray_1<uint16_t>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::AnimatorClipInfo>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::BoneWeight>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Color>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Color32>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::EventSystems::RaycastResult>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::InputBinding>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::LowLevel::InputEventPtr>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::InternedString>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::NameAndParameters>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::NamedValue>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::Substring>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::XR::UsageHint>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Matrix4x4>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Playables::Playable>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Playables::PlayableBinding>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ProBuilder::BezierPoint>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ProBuilder::Edge>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ProBuilder::EdgeLookup>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
struct __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
struct __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
struct __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ProBuilder::Triangle>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Quaternion>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::RaycastHit2D>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Rect>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Rendering::SubMeshDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Rendering::VertexAttributeDescriptor>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::SceneManagement::Scene>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::TextCore::GlyphRect>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Timeline::IntervalTreeNode>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T_cordlgen_0>
struct __List_1__Enumerator<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::TreeInstance>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UICharInfo>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::ComputedTransitionProperty>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::EasingFunction>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::ManipulatorActivationFilter>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::RuleMatcher>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::StylePropertyName>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::StyleSelectorPart>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StyleValue>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::StyleVariable>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::TimeValue>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::UIR::RenderChainTextEntry>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::__FocusController__FocusedElement>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UILineInfo>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::UIVertex>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Vector2>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Vector3>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Vector3Int>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::Vector4>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::XR::XRNodeState>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::__BeforeRenderHelper__OrderBlock>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::__Camera__RenderRequest>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::UnityEngine::__UnitySynchronizationContext__WorkRequest>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::Zenject::BindingId>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::Zenject::TypeValuePair>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::Zenject::__DisposableManager__DisposableInfo>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<::Zenject::__PoolableManager__PoolableInfo>;
}
namespace System::Collections::Generic {
template<::cordl_internals::is_or_is_backed_by<uint16_t> T>
struct __List_1__Enumerator<T>;
}
namespace System::Collections::Generic {
template<::il2cpp_utils::il2cpp_reference_type T>
struct __List_1__Enumerator<T>;
}
namespace System::Collections::Generic {
template<::cordl_internals::is_or_is_backed_by<int32_t> T>
struct __List_1__Enumerator<T>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<bool>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<char16_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<double_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<float_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<int16_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<int32_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<int64_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<int8_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<uint16_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<uint32_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<uint64_t>;
}
namespace System::Collections::Generic {
template<>
struct __List_1__Enumerator<uint8_t>;
}
// Write type traits
MARK_GEN_REF_PTR_T(::System::Collections::Generic::List_1);
MARK_GEN_VAL_T(::System::Collections::Generic::__List_1__Enumerator);
// Type: ::Enumerator
// Type: System.Collections.Generic::List`1
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6442 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  value) ;

constexpr ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair& __get__current() ;

constexpr ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::cordl_internals::is_or_is_backed_by<uint16_t> T>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6441 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<T> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<T>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) T  _current;

 __declspec(property(get=get_Current)) T  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<T>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<T>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<T>*  value) ;

constexpr ::System::Collections::Generic::List_1<T>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<T>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(T  value) ;

constexpr T& __get__current() ;

constexpr T const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<T>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline T get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<T>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "T", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<T>*  _list, int32_t  _index, int32_t  _version, T  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::cordl_internals::is_or_is_backed_by<int32_t> T1_cordlgen_0,::cordl_internals::is_or_is_backed_by<int32_t> T2_cordlgen_1,::il2cpp_utils::il2cpp_reference_type T3_cordlgen_2>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6440 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  _current;

 __declspec(property(get=get_Current)) ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  value) ;

constexpr ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>& __get__current() ;

constexpr ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  _list, int32_t  _index, int32_t  _version, ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6439 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  _current;

 __declspec(property(get=get_Current)) ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  value) ;

constexpr ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>& __get__current() ;

constexpr ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  _list, int32_t  _index, int32_t  _version, ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T2_cordlgen_0>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6438 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::ValueTuple_2<int32_t,T2_cordlgen_0>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  _current;

 __declspec(property(get=get_Current)) ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  value) ;

constexpr ::System::ValueTuple_2<int32_t,T2_cordlgen_0>& __get__current() ;

constexpr ::System::ValueTuple_2<int32_t,T2_cordlgen_0> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<int32_t,T2_cordlgen_0> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::ValueTuple_2<int32_t,T2_cordlgen_0>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  _list, int32_t  _index, int32_t  _version, ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6437 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>& __get__current() ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6436 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  value) ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>& __get__current() ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6435 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  value) ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>& __get__current() ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6434 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

constexpr ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>& __get__current() ;

constexpr ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6433 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  _current;

 __declspec(property(get=get_Current)) ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  value) ;

constexpr ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>& __get__current() ;

constexpr ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  _list, int32_t  _index, int32_t  _version, ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6432 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::Unity::Collections::NativeArray_1<uint16_t>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::Unity::Collections::NativeArray_1<uint16_t>  _current;

 __declspec(property(get=get_Current)) ::Unity::Collections::NativeArray_1<uint16_t>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::Unity::Collections::NativeArray_1<uint16_t>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::Unity::Collections::NativeArray_1<uint16_t>  value) ;

constexpr ::Unity::Collections::NativeArray_1<uint16_t>& __get__current() ;

constexpr ::Unity::Collections::NativeArray_1<uint16_t> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Unity::Collections::NativeArray_1<uint16_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::Unity::Collections::NativeArray_1<uint16_t>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>*  _list, int32_t  _index, int32_t  _version, ::Unity::Collections::NativeArray_1<uint16_t>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6431 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>> : public ::bs_hook::ValueTypeWrapper<0x60> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x60};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  _current;

 __declspec(property(get=get_Current)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  value) ;

constexpr ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>& __get__current() ;

constexpr ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  _list, int32_t  _index, int32_t  _version, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x60>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T_cordlgen_0>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6430 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  value) ;

constexpr ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>& __get__current() ;

constexpr ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6424 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  _current;

 __declspec(property(get=get_Current)) ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  value) ;

constexpr ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>& __get__current() ;

constexpr ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  _list, int32_t  _index, int32_t  _version, ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6423 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Collections::DictionaryEntry> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Collections::DictionaryEntry  _current;

 __declspec(property(get=get_Current)) ::System::Collections::DictionaryEntry  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Collections::DictionaryEntry>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Collections::DictionaryEntry  value) ;

constexpr ::System::Collections::DictionaryEntry& __get__current() ;

constexpr ::System::Collections::DictionaryEntry const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::DictionaryEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Collections::DictionaryEntry", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>*  _list, int32_t  _index, int32_t  _version, ::System::Collections::DictionaryEntry  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6152 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::Zenject::__PoolableManager__PoolableInfo> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::Zenject::__PoolableManager__PoolableInfo  _current;

 __declspec(property(get=get_Current)) ::Zenject::__PoolableManager__PoolableInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::Zenject::__PoolableManager__PoolableInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::Zenject::__PoolableManager__PoolableInfo  value) ;

constexpr ::Zenject::__PoolableManager__PoolableInfo& __get__current() ;

constexpr ::Zenject::__PoolableManager__PoolableInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__PoolableManager__PoolableInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::Zenject::__PoolableManager__PoolableInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>*  _list, int32_t  _index, int32_t  _version, ::Zenject::__PoolableManager__PoolableInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6151 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  _current;

 __declspec(property(get=get_Current)) ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

constexpr ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>& __get__current() ;

constexpr ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  _list, int32_t  _index, int32_t  _version, ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6150 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  _current;

 __declspec(property(get=get_Current)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  value) ;

constexpr ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>& __get__current() ;

constexpr ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  _list, int32_t  _index, int32_t  _version, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 6003 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  value) ;

constexpr ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData& __get__current() ;

constexpr ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 5983 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::HoudiniEngineUnity::HAPI_GeoInfo> : public ::bs_hook::ValueTypeWrapper<0x38> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x38};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::HoudiniEngineUnity::HAPI_GeoInfo  _current;

 __declspec(property(get=get_Current)) ::HoudiniEngineUnity::HAPI_GeoInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::HoudiniEngineUnity::HAPI_GeoInfo  value) ;

constexpr ::HoudiniEngineUnity::HAPI_GeoInfo& __get__current() ;

constexpr ::HoudiniEngineUnity::HAPI_GeoInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::HAPI_GeoInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::HoudiniEngineUnity::HAPI_GeoInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  _list, int32_t  _index, int32_t  _version, ::HoudiniEngineUnity::HAPI_GeoInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x38>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 5059 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  _current;

 __declspec(property(get=get_Current)) ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

constexpr ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>& __get__current() ;

constexpr ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  _list, int32_t  _index, int32_t  _version, ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4457 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  value) ;

constexpr ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher& __get__current() ;

constexpr ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4455 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  value) ;

constexpr ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData& __get__current() ;

constexpr ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4454 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  value) ;

constexpr ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry& __get__current() ;

constexpr ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4453 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  value) ;

constexpr ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition& __get__current() ;

constexpr ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4451 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::__UnitySynchronizationContext__WorkRequest> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::__UnitySynchronizationContext__WorkRequest  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::__UnitySynchronizationContext__WorkRequest  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::__UnitySynchronizationContext__WorkRequest  value) ;

constexpr ::UnityEngine::__UnitySynchronizationContext__WorkRequest& __get__current() ;

constexpr ::UnityEngine::__UnitySynchronizationContext__WorkRequest const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__UnitySynchronizationContext__WorkRequest get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::__UnitySynchronizationContext__WorkRequest", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::__UnitySynchronizationContext__WorkRequest  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4450 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate> : public ::bs_hook::ValueTypeWrapper<0x60> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x60};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  value) ;

constexpr ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate& __get__current() ;

constexpr ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x60>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4449 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree> : public ::bs_hook::ValueTypeWrapper<0x38> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x38};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  value) ;

constexpr ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree& __get__current() ;

constexpr ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x38>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4448 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry> : public ::bs_hook::ValueTypeWrapper<0x70> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x70};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  value) ;

constexpr ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry& __get__current() ;

constexpr ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x70>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4447 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  value) ;

constexpr ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper& __get__current() ;

constexpr ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4446 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  value) ;

constexpr ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData& __get__current() ;

constexpr ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4443 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::__TextureRegistry__TextureInfo> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  value) ;

constexpr ::UnityEngine::UIElements::__TextureRegistry__TextureInfo& __get__current() ;

constexpr ::UnityEngine::UIElements::__TextureRegistry__TextureInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TextureRegistry__TextureInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::__TextureRegistry__TextureInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4442 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame> : public ::bs_hook::ValueTypeWrapper<0x50> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x50};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  _current;

 __declspec(property(get=get_Current)) ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  value) ;

constexpr ::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  value) ;

constexpr ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame& __get__current() ;

constexpr ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  _list, int32_t  _index, int32_t  _version, ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x50>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4441 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  value) ;

constexpr ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap& __get__current() ;

constexpr ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4440 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  value) ;

constexpr ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride& __get__current() ;

constexpr ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::__TemplateAsset__AttributeOverride", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4435 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  value) ;

constexpr ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction& __get__current() ;

constexpr ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4430 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  value) ;

constexpr ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest& __get__current() ;

constexpr ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4429 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData> : public ::bs_hook::ValueTypeWrapper<0x70> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x70};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  value) ;

constexpr ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData& __get__current() ;

constexpr ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x70>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4411 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast> : public ::bs_hook::ValueTypeWrapper<0x60> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x60};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  _current;

 __declspec(property(get=get_Current)) ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  value) ;

constexpr ::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  value) ;

constexpr ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast& __get__current() ;

constexpr ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  _list, int32_t  _index, int32_t  _version, ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x60>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4410 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  value) ;

constexpr ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog& __get__current() ;

constexpr ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4409 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  value) ;

constexpr ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit& __get__current() ;

constexpr ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4407 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  value) ;

constexpr ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor& __get__current() ;

constexpr ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4404 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  value) ;

constexpr ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry& __get__current() ;

constexpr ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4403 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  value) ;

constexpr ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition& __get__current() ;

constexpr ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4398 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  value) ;

constexpr ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue& __get__current() ;

constexpr ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4388 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  value) ;

constexpr ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper& __get__current() ;

constexpr ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4387 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem> : public ::bs_hook::ValueTypeWrapper<0xe0> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0xe0};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  value) ;

constexpr ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem& __get__current() ;

constexpr ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0xe0>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4386 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson> : public ::bs_hook::ValueTypeWrapper<0x38> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x38};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  value) ;

constexpr ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson& __get__current() ;

constexpr ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x38>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4383 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  value) ;

constexpr ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData& __get__current() ;

constexpr ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4382 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor> : public ::bs_hook::ValueTypeWrapper<0x58> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x58};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  value) ;

constexpr ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor& __get__current() ;

constexpr ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x58>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4381 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  value) ;

constexpr ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor& __get__current() ;

constexpr ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4373 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::Tayx::Graphy::__GraphyDebugger__DebugCondition> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::Tayx::Graphy::__GraphyDebugger__DebugCondition  _current;

 __declspec(property(get=get_Current)) ::Tayx::Graphy::__GraphyDebugger__DebugCondition  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  value) ;

constexpr ::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::Tayx::Graphy::__GraphyDebugger__DebugCondition  value) ;

constexpr ::Tayx::Graphy::__GraphyDebugger__DebugCondition& __get__current() ;

constexpr ::Tayx::Graphy::__GraphyDebugger__DebugCondition const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Tayx::Graphy::__GraphyDebugger__DebugCondition get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::Tayx::Graphy::__GraphyDebugger__DebugCondition", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  _list, int32_t  _index, int32_t  _version, ::Tayx::Graphy::__GraphyDebugger__DebugCondition  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4369 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::__FocusController__FocusedElement> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::__FocusController__FocusedElement  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::__FocusController__FocusedElement  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::__FocusController__FocusedElement  value) ;

constexpr ::UnityEngine::UIElements::__FocusController__FocusedElement& __get__current() ;

constexpr ::UnityEngine::UIElements::__FocusController__FocusedElement const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__FocusController__FocusedElement get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::__FocusController__FocusedElement", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::__FocusController__FocusedElement  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4358 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::Zenject::__DisposeBlock__SpawnedObjectPoolPair> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  _current;

 __declspec(property(get=get_Current)) ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  value) ;

constexpr ::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  value) ;

constexpr ::Zenject::__DisposeBlock__SpawnedObjectPoolPair& __get__current() ;

constexpr ::Zenject::__DisposeBlock__SpawnedObjectPoolPair const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__DisposeBlock__SpawnedObjectPoolPair get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::Zenject::__DisposeBlock__SpawnedObjectPoolPair", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  _list, int32_t  _index, int32_t  _version, ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4356 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::Zenject::__DisposableManager__DisposableInfo> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::Zenject::__DisposableManager__DisposableInfo  _current;

 __declspec(property(get=get_Current)) ::Zenject::__DisposableManager__DisposableInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::Zenject::__DisposableManager__DisposableInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::Zenject::__DisposableManager__DisposableInfo  value) ;

constexpr ::Zenject::__DisposableManager__DisposableInfo& __get__current() ;

constexpr ::Zenject::__DisposableManager__DisposableInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__DisposableManager__DisposableInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::Zenject::__DisposableManager__DisposableInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>*  _list, int32_t  _index, int32_t  _version, ::Zenject::__DisposableManager__DisposableInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4353 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__DebugConsoleController__ConsoleMessage> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  value) ;

constexpr ::GlobalNamespace::__DebugConsoleController__ConsoleMessage& __get__current() ;

constexpr ::GlobalNamespace::__DebugConsoleController__ConsoleMessage const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__DebugConsoleController__ConsoleMessage get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__DebugConsoleController__ConsoleMessage", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4349 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::__Camera__RenderRequest> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::__Camera__RenderRequest  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::__Camera__RenderRequest  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::__Camera__RenderRequest>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::__Camera__RenderRequest  value) ;

constexpr ::UnityEngine::__Camera__RenderRequest& __get__current() ;

constexpr ::UnityEngine::__Camera__RenderRequest const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__Camera__RenderRequest get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::__Camera__RenderRequest", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::__Camera__RenderRequest  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4345 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  value) ;

constexpr ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page& __get__current() ;

constexpr ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4344 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::__BeforeRenderHelper__OrderBlock> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::__BeforeRenderHelper__OrderBlock  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::__BeforeRenderHelper__OrderBlock  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::__BeforeRenderHelper__OrderBlock  value) ;

constexpr ::UnityEngine::__BeforeRenderHelper__OrderBlock& __get__current() ;

constexpr ::UnityEngine::__BeforeRenderHelper__OrderBlock const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__BeforeRenderHelper__OrderBlock get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::__BeforeRenderHelper__OrderBlock", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::__BeforeRenderHelper__OrderBlock  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4322 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__BeatLine__HighlightData> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__BeatLine__HighlightData  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__BeatLine__HighlightData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__BeatLine__HighlightData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__BeatLine__HighlightData  value) ;

constexpr ::GlobalNamespace::__BeatLine__HighlightData& __get__current() ;

constexpr ::GlobalNamespace::__BeatLine__HighlightData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__BeatLine__HighlightData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__BeatLine__HighlightData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__BeatLine__HighlightData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4320 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo> : public ::bs_hook::ValueTypeWrapper<0x38> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x38};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  value) ;

constexpr ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo& __get__current() ;

constexpr ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x38>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4316 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::XR::XRFeatureDescriptor> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  value) ;

constexpr ::UnityEngine::InputSystem::XR::XRFeatureDescriptor& __get__current() ;

constexpr ::UnityEngine::InputSystem::XR::XRFeatureDescriptor const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::XR::XRFeatureDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::XR::XRFeatureDescriptor", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4315 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Security::Cryptography::X509Certificates::X509ChainStatus> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Security::Cryptography::X509Certificates::X509ChainStatus  _current;

 __declspec(property(get=get_Current)) ::System::Security::Cryptography::X509Certificates::X509ChainStatus  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Security::Cryptography::X509Certificates::X509ChainStatus  value) ;

constexpr ::System::Security::Cryptography::X509Certificates::X509ChainStatus& __get__current() ;

constexpr ::System::Security::Cryptography::X509Certificates::X509ChainStatus const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Security::Cryptography::X509Certificates::X509ChainStatus get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Security::Cryptography::X509Certificates::X509ChainStatus", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  _list, int32_t  _index, int32_t  _version, ::System::Security::Cryptography::X509Certificates::X509ChainStatus  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4309 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::XR::UsageHint> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::XR::UsageHint  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::XR::UsageHint  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::XR::UsageHint>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::XR::UsageHint  value) ;

constexpr ::UnityEngine::InputSystem::XR::UsageHint& __get__current() ;

constexpr ::UnityEngine::InputSystem::XR::UsageHint const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::XR::UsageHint get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::XR::UsageHint", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::XR::UsageHint  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4303 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::TreeInstance> : public ::bs_hook::ValueTypeWrapper<0x38> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x38};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::TreeInstance  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::TreeInstance  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TreeInstance>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::TreeInstance  value) ;

constexpr ::UnityEngine::TreeInstance& __get__current() ;

constexpr ::UnityEngine::TreeInstance const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TreeInstance get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::TreeInstance", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::TreeInstance  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x38>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4302 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::HoudiniEngineUnity::TransformData> : public ::bs_hook::ValueTypeWrapper<0x60> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x60};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::HoudiniEngineUnity::TransformData  _current;

 __declspec(property(get=get_Current)) ::HoudiniEngineUnity::TransformData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::TransformData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::HoudiniEngineUnity::TransformData  value) ;

constexpr ::HoudiniEngineUnity::TransformData& __get__current() ;

constexpr ::HoudiniEngineUnity::TransformData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::TransformData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::HoudiniEngineUnity::TransformData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>*  _list, int32_t  _index, int32_t  _version, ::HoudiniEngineUnity::TransformData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x60>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4278 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Rendering::SubMeshDescriptor> : public ::bs_hook::ValueTypeWrapper<0x40> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x40};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Rendering::SubMeshDescriptor  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Rendering::SubMeshDescriptor  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rendering::SubMeshDescriptor>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Rendering::SubMeshDescriptor  value) ;

constexpr ::UnityEngine::Rendering::SubMeshDescriptor& __get__current() ;

constexpr ::UnityEngine::Rendering::SubMeshDescriptor const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rendering::SubMeshDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Rendering::SubMeshDescriptor", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Rendering::SubMeshDescriptor  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x40>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4277 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::StyleVariable> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::StyleVariable  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::StyleVariable  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleVariable>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::StyleVariable  value) ;

constexpr ::UnityEngine::UIElements::StyleVariable& __get__current() ;

constexpr ::UnityEngine::UIElements::StyleVariable const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleVariable get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::StyleVariable", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::StyleVariable  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4276 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StyleValueManaged> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  value) ;

constexpr ::UnityEngine::UIElements::StyleSheets::StyleValueManaged& __get__current() ;

constexpr ::UnityEngine::UIElements::StyleSheets::StyleValueManaged const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StyleValueManaged get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::StyleSheets::StyleValueManaged", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4275 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StyleValue> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::StyleSheets::StyleValue  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::StyleSheets::StyleValue  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::StyleSheets::StyleValue  value) ;

constexpr ::UnityEngine::UIElements::StyleSheets::StyleValue& __get__current() ;

constexpr ::UnityEngine::UIElements::StyleSheets::StyleValue const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StyleValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::StyleSheets::StyleValue", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::StyleSheets::StyleValue  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4274 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  value) ;

constexpr ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken& __get__current() ;

constexpr ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4273 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::StyleSelectorPart> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::StyleSelectorPart  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::StyleSelectorPart  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSelectorPart>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::StyleSelectorPart  value) ;

constexpr ::UnityEngine::UIElements::StyleSelectorPart& __get__current() ;

constexpr ::UnityEngine::UIElements::StyleSelectorPart const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSelectorPart get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::StyleSelectorPart", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::StyleSelectorPart  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4271 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StylePropertyValue> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  value) ;

constexpr ::UnityEngine::UIElements::StyleSheets::StylePropertyValue& __get__current() ;

constexpr ::UnityEngine::UIElements::StyleSheets::StylePropertyValue const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StylePropertyValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::StyleSheets::StylePropertyValue", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4263 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::RuleMatcher> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::RuleMatcher  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::RuleMatcher  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::RuleMatcher>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::RuleMatcher  value) ;

constexpr ::UnityEngine::UIElements::RuleMatcher& __get__current() ;

constexpr ::UnityEngine::UIElements::RuleMatcher const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::RuleMatcher get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::RuleMatcher", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::RuleMatcher  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4261 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::UIR::RenderChainTextEntry> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::UIR::RenderChainTextEntry  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::UIR::RenderChainTextEntry  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::UIR::RenderChainTextEntry  value) ;

constexpr ::UnityEngine::UIElements::UIR::RenderChainTextEntry& __get__current() ;

constexpr ::UnityEngine::UIElements::UIR::RenderChainTextEntry const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::RenderChainTextEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::UIR::RenderChainTextEntry", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::UIR::RenderChainTextEntry  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4255 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::RaycastHit2D> : public ::bs_hook::ValueTypeWrapper<0x38> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x38};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::RaycastHit2D  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::RaycastHit2D  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::RaycastHit2D>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::RaycastHit2D  value) ;

constexpr ::UnityEngine::RaycastHit2D& __get__current() ;

constexpr ::UnityEngine::RaycastHit2D const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::RaycastHit2D get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::RaycastHit2D", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::RaycastHit2D  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x38>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4238 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ResourceManagement::Util::ObjectInitializationData> : public ::bs_hook::ValueTypeWrapper<0x40> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x40};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  value) ;

constexpr ::UnityEngine::ResourceManagement::Util::ObjectInitializationData& __get__current() ;

constexpr ::UnityEngine::ResourceManagement::Util::ObjectInitializationData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Util::ObjectInitializationData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ResourceManagement::Util::ObjectInitializationData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x40>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4231 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::MultiplayerAvatarData> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::MultiplayerAvatarData  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::MultiplayerAvatarData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::MultiplayerAvatarData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::MultiplayerAvatarData  value) ;

constexpr ::GlobalNamespace::MultiplayerAvatarData& __get__current() ;

constexpr ::GlobalNamespace::MultiplayerAvatarData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::MultiplayerAvatarData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::MultiplayerAvatarData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::MultiplayerAvatarData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4227 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::MidiParser::MidiEvent> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::MidiParser::MidiEvent>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::MidiParser::MidiEvent  _current;

 __declspec(property(get=get_Current)) ::MidiParser::MidiEvent  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::MidiParser::MidiEvent>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::MidiParser::MidiEvent>*  value) ;

constexpr ::System::Collections::Generic::List_1<::MidiParser::MidiEvent>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::MidiParser::MidiEvent>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::MidiParser::MidiEvent  value) ;

constexpr ::MidiParser::MidiEvent& __get__current() ;

constexpr ::MidiParser::MidiEvent const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::MidiParser::MidiEvent>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::MidiParser::MidiEvent get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::MidiParser::MidiEvent>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::MidiParser::MidiEvent", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::MidiParser::MidiEvent>*  _list, int32_t  _index, int32_t  _version, ::MidiParser::MidiEvent  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4213 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::Newtonsoft::Json::JsonPosition> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::Newtonsoft::Json::JsonPosition  _current;

 __declspec(property(get=get_Current)) ::Newtonsoft::Json::JsonPosition  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::JsonPosition>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>*  value) ;

constexpr ::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::Newtonsoft::Json::JsonPosition  value) ;

constexpr ::Newtonsoft::Json::JsonPosition& __get__current() ;

constexpr ::Newtonsoft::Json::JsonPosition const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Newtonsoft::Json::JsonPosition get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::Newtonsoft::Json::JsonPosition", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>*  _list, int32_t  _index, int32_t  _version, ::Newtonsoft::Json::JsonPosition  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4212 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Timeline::IntervalTreeNode> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Timeline::IntervalTreeNode  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Timeline::IntervalTreeNode  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::IntervalTreeNode>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Timeline::IntervalTreeNode  value) ;

constexpr ::UnityEngine::Timeline::IntervalTreeNode& __get__current() ;

constexpr ::UnityEngine::Timeline::IntervalTreeNode const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::IntervalTreeNode get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Timeline::IntervalTreeNode", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Timeline::IntervalTreeNode  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4164 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::HoudiniEngineUnity::HAPI_PartInfo> : public ::bs_hook::ValueTypeWrapper<0x40> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x40};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::HoudiniEngineUnity::HAPI_PartInfo  _current;

 __declspec(property(get=get_Current)) ::HoudiniEngineUnity::HAPI_PartInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::HAPI_PartInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::HoudiniEngineUnity::HAPI_PartInfo  value) ;

constexpr ::HoudiniEngineUnity::HAPI_PartInfo& __get__current() ;

constexpr ::HoudiniEngineUnity::HAPI_PartInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::HAPI_PartInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::HoudiniEngineUnity::HAPI_PartInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>*  _list, int32_t  _index, int32_t  _version, ::HoudiniEngineUnity::HAPI_PartInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x40>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4151 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  _current;

 __declspec(property(get=get_Current)) ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  value) ;

constexpr ::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  value) ;

constexpr ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot& __get__current() ;

constexpr ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  _list, int32_t  _index, int32_t  _version, ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4145 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::ComputedTransitionProperty> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::ComputedTransitionProperty  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::ComputedTransitionProperty  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::ComputedTransitionProperty  value) ;

constexpr ::UnityEngine::UIElements::ComputedTransitionProperty& __get__current() ;

constexpr ::UnityEngine::UIElements::ComputedTransitionProperty const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::ComputedTransitionProperty get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::ComputedTransitionProperty", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::ComputedTransitionProperty  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4136 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::BezierCurve> : public ::bs_hook::ValueTypeWrapper<0x40> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x40};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::BezierCurve  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::BezierCurve  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::BezierCurve>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::BezierCurve  value) ;

constexpr ::GlobalNamespace::BezierCurve& __get__current() ;

constexpr ::GlobalNamespace::BezierCurve const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::BezierCurve get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::BezierCurve", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::BezierCurve  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x40>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4125 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::AnimatorClipInfo> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::AnimatorClipInfo  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::AnimatorClipInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::AnimatorClipInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::AnimatorClipInfo  value) ;

constexpr ::UnityEngine::AnimatorClipInfo& __get__current() ;

constexpr ::UnityEngine::AnimatorClipInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::AnimatorClipInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::AnimatorClipInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::AnimatorClipInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 4082 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  _current;

 __declspec(property(get=get_Current)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  value) ;

constexpr ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>& __get__current() ;

constexpr ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  _list, int32_t  _index, int32_t  _version, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3970 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo> : public ::bs_hook::ValueTypeWrapper<0x30> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x30};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  value) ;

constexpr ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo& __get__current() ;

constexpr ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x30>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3621 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo> : public ::bs_hook::ValueTypeWrapper<0x48> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x48};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  value) ;

constexpr ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo& __get__current() ;

constexpr ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x48>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3620 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIVertex> : public ::bs_hook::ValueTypeWrapper<0x80> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x80};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIVertex>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIVertex  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIVertex  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIVertex>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIVertex>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIVertex  value) ;

constexpr ::UnityEngine::UIVertex& __get__current() ;

constexpr ::UnityEngine::UIVertex const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIVertex get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIVertex>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIVertex", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIVertex  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x80>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3619 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UILineInfo> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UILineInfo  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UILineInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UILineInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UILineInfo  value) ;

constexpr ::UnityEngine::UILineInfo& __get__current() ;

constexpr ::UnityEngine::UILineInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UILineInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UILineInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UILineInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3618 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UICharInfo> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UICharInfo  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UICharInfo  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UICharInfo>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UICharInfo  value) ;

constexpr ::UnityEngine::UICharInfo& __get__current() ;

constexpr ::UnityEngine::UICharInfo const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UICharInfo get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UICharInfo", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UICharInfo  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3604 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ProBuilder::BezierPoint> : public ::bs_hook::ValueTypeWrapper<0x48> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x48};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ProBuilder::BezierPoint  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ProBuilder::BezierPoint  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::BezierPoint>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ProBuilder::BezierPoint  value) ;

constexpr ::UnityEngine::ProBuilder::BezierPoint& __get__current() ;

constexpr ::UnityEngine::ProBuilder::BezierPoint const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::BezierPoint get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ProBuilder::BezierPoint", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ProBuilder::BezierPoint  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x48>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3591 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::ArraySegment_1<uint8_t>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::ArraySegment_1<uint8_t>  _current;

 __declspec(property(get=get_Current)) ::System::ArraySegment_1<uint8_t>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::ArraySegment_1<uint8_t>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::ArraySegment_1<uint8_t>  value) ;

constexpr ::System::ArraySegment_1<uint8_t>& __get__current() ;

constexpr ::System::ArraySegment_1<uint8_t> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ArraySegment_1<uint8_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::ArraySegment_1<uint8_t>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>*  _list, int32_t  _index, int32_t  _version, ::System::ArraySegment_1<uint8_t>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3386 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> : public ::bs_hook::ValueTypeWrapper<0x58> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x58};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  value) ;

constexpr ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue& __get__current() ;

constexpr ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x58>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3372 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ProBuilder::Triangle> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ProBuilder::Triangle  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ProBuilder::Triangle  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::Triangle>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ProBuilder::Triangle  value) ;

constexpr ::UnityEngine::ProBuilder::Triangle& __get__current() ;

constexpr ::UnityEngine::ProBuilder::Triangle const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::Triangle get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ProBuilder::Triangle", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ProBuilder::Triangle  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3368 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::TimeValue> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::TimeValue  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::TimeValue  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::TimeValue>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::TimeValue  value) ;

constexpr ::UnityEngine::UIElements::TimeValue& __get__current() ;

constexpr ::UnityEngine::UIElements::TimeValue const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::TimeValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::TimeValue", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::TimeValue  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3345 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Rect> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Rect>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Rect  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Rect  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rect>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Rect>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Rect>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Rect>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Rect  value) ;

constexpr ::UnityEngine::Rect& __get__current() ;

constexpr ::UnityEngine::Rect const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Rect>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rect get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Rect>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Rect", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Rect>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Rect  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3342 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Quaternion> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Quaternion  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Quaternion  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Quaternion>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Quaternion  value) ;

constexpr ::UnityEngine::Quaternion& __get__current() ;

constexpr ::UnityEngine::Quaternion const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Quaternion get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Quaternion", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Quaternion>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Quaternion  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3333 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Playables::Playable> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Playables::Playable  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Playables::Playable  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::Playable>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Playables::Playable  value) ;

constexpr ::UnityEngine::Playables::Playable& __get__current() ;

constexpr ::UnityEngine::Playables::Playable const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Playables::Playable get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Playables::Playable", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Playables::Playable  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3316 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Matrix4x4> : public ::bs_hook::ValueTypeWrapper<0x50> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x50};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Matrix4x4  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Matrix4x4  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Matrix4x4>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Matrix4x4  value) ;

constexpr ::UnityEngine::Matrix4x4& __get__current() ;

constexpr ::UnityEngine::Matrix4x4 const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Matrix4x4 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Matrix4x4", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Matrix4x4  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x50>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3314 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::ManipulatorActivationFilter> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::ManipulatorActivationFilter  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::ManipulatorActivationFilter  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::ManipulatorActivationFilter  value) ;

constexpr ::UnityEngine::UIElements::ManipulatorActivationFilter& __get__current() ;

constexpr ::UnityEngine::UIElements::ManipulatorActivationFilter const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::ManipulatorActivationFilter get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::ManipulatorActivationFilter", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::ManipulatorActivationFilter  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3301 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::Layouts::InputDeviceDescription> : public ::bs_hook::ValueTypeWrapper<0x48> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x48};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  value) ;

constexpr ::UnityEngine::InputSystem::Layouts::InputDeviceDescription& __get__current() ;

constexpr ::UnityEngine::InputSystem::Layouts::InputDeviceDescription const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Layouts::InputDeviceDescription get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::Layouts::InputDeviceDescription", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x48>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3291 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::TextCore::GlyphRect> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::TextCore::GlyphRect  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::TextCore::GlyphRect  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::GlyphRect>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::TextCore::GlyphRect  value) ;

constexpr ::UnityEngine::TextCore::GlyphRect& __get__current() ;

constexpr ::UnityEngine::TextCore::GlyphRect const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::GlyphRect get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::TextCore::GlyphRect", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::TextCore::GlyphRect  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3290 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> : public ::bs_hook::ValueTypeWrapper<0x40> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x40};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  value) ;

constexpr ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord& __get__current() ;

constexpr ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x40>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3282 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::EasingFunction> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::EasingFunction  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::EasingFunction  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::EasingFunction>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::EasingFunction  value) ;

constexpr ::UnityEngine::UIElements::EasingFunction& __get__current() ;

constexpr ::UnityEngine::UIElements::EasingFunction const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::EasingFunction get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::EasingFunction", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::EasingFunction  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3131 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::Zenject::TypeValuePair> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::Zenject::TypeValuePair  _current;

 __declspec(property(get=get_Current)) ::Zenject::TypeValuePair  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::Zenject::TypeValuePair>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*  value) ;

constexpr ::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::Zenject::TypeValuePair  value) ;

constexpr ::Zenject::TypeValuePair& __get__current() ;

constexpr ::Zenject::TypeValuePair const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::TypeValuePair get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::Zenject::TypeValuePair", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*  _list, int32_t  _index, int32_t  _version, ::Zenject::TypeValuePair  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3121 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::SceneManagement::Scene> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::SceneManagement::Scene  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::SceneManagement::Scene  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::SceneManagement::Scene>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::SceneManagement::Scene  value) ;

constexpr ::UnityEngine::SceneManagement::Scene& __get__current() ;

constexpr ::UnityEngine::SceneManagement::Scene const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::SceneManagement::Scene get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::SceneManagement::Scene", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::SceneManagement::Scene  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3116 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Playables::PlayableBinding> : public ::bs_hook::ValueTypeWrapper<0x30> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x30};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Playables::PlayableBinding  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Playables::PlayableBinding  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Playables::PlayableBinding  value) ;

constexpr ::UnityEngine::Playables::PlayableBinding& __get__current() ;

constexpr ::UnityEngine::Playables::PlayableBinding const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Playables::PlayableBinding get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Playables::PlayableBinding", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Playables::PlayableBinding  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x30>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3114 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::NamedValue> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::Utilities::NamedValue  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::Utilities::NamedValue  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::Utilities::NamedValue  value) ;

constexpr ::UnityEngine::InputSystem::Utilities::NamedValue& __get__current() ;

constexpr ::UnityEngine::InputSystem::Utilities::NamedValue const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::NamedValue get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::Utilities::NamedValue", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::Utilities::NamedValue  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3113 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::NameAndParameters> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::Utilities::NameAndParameters  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::Utilities::NameAndParameters  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::Utilities::NameAndParameters  value) ;

constexpr ::UnityEngine::InputSystem::Utilities::NameAndParameters& __get__current() ;

constexpr ::UnityEngine::InputSystem::Utilities::NameAndParameters const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::NameAndParameters get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::Utilities::NameAndParameters", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::Utilities::NameAndParameters  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3105 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::InputBinding> : public ::bs_hook::ValueTypeWrapper<0x68> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x68};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::InputBinding  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::InputBinding  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::InputBinding  value) ;

constexpr ::UnityEngine::InputSystem::InputBinding& __get__current() ;

constexpr ::UnityEngine::InputSystem::InputBinding const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::InputBinding get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::InputBinding", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::InputBinding  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x68>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3081 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::Zenject::BindingId> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::Zenject::BindingId>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::Zenject::BindingId  _current;

 __declspec(property(get=get_Current)) ::Zenject::BindingId  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::Zenject::BindingId>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::Zenject::BindingId>*  value) ;

constexpr ::System::Collections::Generic::List_1<::Zenject::BindingId>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::Zenject::BindingId>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::Zenject::BindingId  value) ;

constexpr ::Zenject::BindingId& __get__current() ;

constexpr ::Zenject::BindingId const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::Zenject::BindingId>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::BindingId get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::Zenject::BindingId>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::Zenject::BindingId", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::Zenject::BindingId>*  _list, int32_t  _index, int32_t  _version, ::Zenject::BindingId  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3058 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  _current;

 __declspec(property(get=get_Current)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

constexpr ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>& __get__current() ;

constexpr ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  _list, int32_t  _index, int32_t  _version, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 3057 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  _current;

 __declspec(property(get=get_Current)) ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  value) ;

constexpr ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>& __get__current() ;

constexpr ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  _list, int32_t  _index, int32_t  _version, ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2738 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Text::RegularExpressions::__RegexCharClass__SingleRange> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  _current;

 __declspec(property(get=get_Current)) ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  value) ;

constexpr ::System::Text::RegularExpressions::__RegexCharClass__SingleRange& __get__current() ;

constexpr ::System::Text::RegularExpressions::__RegexCharClass__SingleRange const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Text::RegularExpressions::__RegexCharClass__SingleRange get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Text::RegularExpressions::__RegexCharClass__SingleRange", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  _list, int32_t  _index, int32_t  _version, ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2711 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::TimeSpan> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::TimeSpan>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::TimeSpan  _current;

 __declspec(property(get=get_Current)) ::System::TimeSpan  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::TimeSpan>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::TimeSpan>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::TimeSpan>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::TimeSpan>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::TimeSpan  value) ;

constexpr ::System::TimeSpan& __get__current() ;

constexpr ::System::TimeSpan const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::TimeSpan>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::TimeSpan get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::TimeSpan>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::TimeSpan", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::TimeSpan>*  _list, int32_t  _index, int32_t  _version, ::System::TimeSpan  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2710 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::Substring> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::Utilities::Substring  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::Utilities::Substring  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::Substring>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::Utilities::Substring  value) ;

constexpr ::UnityEngine::InputSystem::Utilities::Substring& __get__current() ;

constexpr ::UnityEngine::InputSystem::Utilities::Substring const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::Substring get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::Utilities::Substring", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::Utilities::Substring  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2707 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<int8_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<int8_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) int8_t  _current;

 __declspec(property(get=get_Current)) int8_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<int8_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<int8_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<int8_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<int8_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<int8_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(int8_t  value) ;

constexpr int8_t& __get__current() ;

constexpr int8_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<int8_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline int8_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<int8_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "int8_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<int8_t>*  _list, int32_t  _index, int32_t  _version, int8_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2704 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<double_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<double_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) double_t  _current;

 __declspec(property(get=get_Current)) double_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<double_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<double_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<double_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<double_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<double_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(double_t  value) ;

constexpr double_t& __get__current() ;

constexpr double_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<double_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline double_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<double_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "double_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<double_t>*  _list, int32_t  _index, int32_t  _version, double_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2703 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Decimal> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Decimal>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Decimal  _current;

 __declspec(property(get=get_Current)) ::System::Decimal  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Decimal>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Decimal>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Decimal>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Decimal>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Decimal  value) ;

constexpr ::System::Decimal& __get__current() ;

constexpr ::System::Decimal const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Decimal>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Decimal get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Decimal>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Decimal", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Decimal>*  _list, int32_t  _index, int32_t  _version, ::System::Decimal  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2702 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::DateTimeOffset> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::DateTimeOffset>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::DateTimeOffset  _current;

 __declspec(property(get=get_Current)) ::System::DateTimeOffset  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::DateTimeOffset>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::DateTimeOffset>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::DateTimeOffset>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::DateTimeOffset>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::DateTimeOffset  value) ;

constexpr ::System::DateTimeOffset& __get__current() ;

constexpr ::System::DateTimeOffset const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::DateTimeOffset>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::DateTimeOffset get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::DateTimeOffset>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::DateTimeOffset", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::DateTimeOffset>*  _list, int32_t  _index, int32_t  _version, ::System::DateTimeOffset  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2701 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::DateTime> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::DateTime>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::DateTime  _current;

 __declspec(property(get=get_Current)) ::System::DateTime  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::DateTime>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::DateTime>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::DateTime>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::DateTime>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::DateTime  value) ;

constexpr ::System::DateTime& __get__current() ;

constexpr ::System::DateTime const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::DateTime>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::DateTime get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::DateTime>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::DateTime", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::DateTime>*  _list, int32_t  _index, int32_t  _version, ::System::DateTime  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2598 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::Utilities::InternedString> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::Utilities::InternedString  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::Utilities::InternedString  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::InternedString>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::Utilities::InternedString  value) ;

constexpr ::UnityEngine::InputSystem::Utilities::InternedString& __get__current() ;

constexpr ::UnityEngine::InputSystem::Utilities::InternedString const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::InternedString get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::Utilities::InternedString", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::Utilities::InternedString  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2593 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ProBuilder::EdgeLookup> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ProBuilder::EdgeLookup  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ProBuilder::EdgeLookup  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::EdgeLookup>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ProBuilder::EdgeLookup  value) ;

constexpr ::UnityEngine::ProBuilder::EdgeLookup& __get__current() ;

constexpr ::UnityEngine::ProBuilder::EdgeLookup const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::EdgeLookup get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ProBuilder::EdgeLookup", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ProBuilder::EdgeLookup  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2592 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ProBuilder::Edge> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ProBuilder::Edge  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ProBuilder::Edge  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::Edge>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ProBuilder::Edge  value) ;

constexpr ::UnityEngine::ProBuilder::Edge& __get__current() ;

constexpr ::UnityEngine::ProBuilder::Edge const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::Edge get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ProBuilder::Edge", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ProBuilder::Edge  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1698 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  value) ;

constexpr ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry& __get__current() ;

constexpr ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1693 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::StylePropertyName> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::StylePropertyName  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::StylePropertyName  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StylePropertyName>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::StylePropertyName  value) ;

constexpr ::UnityEngine::UIElements::StylePropertyName& __get__current() ;

constexpr ::UnityEngine::UIElements::StylePropertyName const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StylePropertyName get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::StylePropertyName", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::StylePropertyName  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1058 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult> : public ::bs_hook::ValueTypeWrapper<0x30> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x30};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  _current;

 __declspec(property(get=get_Current)) ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  value) ;

constexpr ::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  value) ;

constexpr ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult& __get__current() ;

constexpr ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  _list, int32_t  _index, int32_t  _version, ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x30>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1057 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData> : public ::bs_hook::ValueTypeWrapper<0x30> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x30};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  value) ;

constexpr ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData& __get__current() ;

constexpr ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x30>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1055 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  value) ;

constexpr ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry& __get__current() ;

constexpr ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1054 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::__OVRRaycaster__RaycastHit> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::__OVRRaycaster__RaycastHit  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::__OVRRaycaster__RaycastHit  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::__OVRRaycaster__RaycastHit  value) ;

constexpr ::GlobalNamespace::__OVRRaycaster__RaycastHit& __get__current() ;

constexpr ::GlobalNamespace::__OVRRaycaster__RaycastHit const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRRaycaster__RaycastHit get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::__OVRRaycaster__RaycastHit", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::__OVRRaycaster__RaycastHit  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1051 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  value) ;

constexpr ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord& __get__current() ;

constexpr ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1050 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::EventSystems::RaycastResult> : public ::bs_hook::ValueTypeWrapper<0x58> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x58};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::EventSystems::RaycastResult  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::EventSystems::RaycastResult  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::EventSystems::RaycastResult>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::EventSystems::RaycastResult  value) ;

constexpr ::UnityEngine::EventSystems::RaycastResult& __get__current() ;

constexpr ::UnityEngine::EventSystems::RaycastResult const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::EventSystems::RaycastResult get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::EventSystems::RaycastResult", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::EventSystems::RaycastResult  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x58>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1048 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::OVRSpaceUser> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::OVRSpaceUser  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::OVRSpaceUser  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::OVRSpaceUser>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::OVRSpaceUser  value) ;

constexpr ::GlobalNamespace::OVRSpaceUser& __get__current() ;

constexpr ::GlobalNamespace::OVRSpaceUser const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::OVRSpaceUser get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::OVRSpaceUser", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::OVRSpaceUser  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1041 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  value) ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>& __get__current() ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 1040 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  value) ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>& __get__current() ;

constexpr ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 980 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::GlobalNamespace::OVRAnchor> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::GlobalNamespace::OVRAnchor  _current;

 __declspec(property(get=get_Current)) ::GlobalNamespace::OVRAnchor  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::OVRAnchor>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*  value) ;

constexpr ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::GlobalNamespace::OVRAnchor  value) ;

constexpr ::GlobalNamespace::OVRAnchor& __get__current() ;

constexpr ::GlobalNamespace::OVRAnchor const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::OVRAnchor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::GlobalNamespace::OVRAnchor", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>*  _list, int32_t  _index, int32_t  _version, ::GlobalNamespace::OVRAnchor  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::cordl_internals::is_or_is_backed_by<int32_t> T>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 974 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<T> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<T>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) T  _current;

 __declspec(property(get=get_Current)) T  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<T>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<T>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<T>*  value) ;

constexpr ::System::Collections::Generic::List_1<T>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<T>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(T  value) ;

constexpr T& __get__current() ;

constexpr T const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<T>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline T get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<T>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "T", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<T>*  _list, int32_t  _index, int32_t  _version, T  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 757 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Rendering::VertexAttributeDescriptor> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Rendering::VertexAttributeDescriptor  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Rendering::VertexAttributeDescriptor  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Rendering::VertexAttributeDescriptor  value) ;

constexpr ::UnityEngine::Rendering::VertexAttributeDescriptor& __get__current() ;

constexpr ::UnityEngine::Rendering::VertexAttributeDescriptor const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rendering::VertexAttributeDescriptor get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Rendering::VertexAttributeDescriptor", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Rendering::VertexAttributeDescriptor  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 755 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Vector4> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Vector4  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Vector4  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector4>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Vector4>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Vector4>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Vector4  value) ;

constexpr ::UnityEngine::Vector4& __get__current() ;

constexpr ::UnityEngine::Vector4 const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Vector4>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector4 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Vector4>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Vector4", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Vector4>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Vector4  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 754 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Vector3Int> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Vector3Int  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Vector3Int  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector3Int>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Vector3Int  value) ;

constexpr ::UnityEngine::Vector3Int& __get__current() ;

constexpr ::UnityEngine::Vector3Int const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector3Int get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Vector3Int", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Vector3Int  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 753 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<uint32_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<uint32_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) uint32_t  _current;

 __declspec(property(get=get_Current)) uint32_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<uint32_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<uint32_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<uint32_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<uint32_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(uint32_t  value) ;

constexpr uint32_t& __get__current() ;

constexpr uint32_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<uint32_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint32_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<uint32_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "uint32_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<uint32_t>*  _list, int32_t  _index, int32_t  _version, uint32_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 752 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<uint16_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<uint16_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) uint16_t  _current;

 __declspec(property(get=get_Current)) uint16_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<uint16_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<uint16_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<uint16_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<uint16_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(uint16_t  value) ;

constexpr uint16_t& __get__current() ;

constexpr uint16_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<uint16_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint16_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<uint16_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "uint16_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<uint16_t>*  _list, int32_t  _index, int32_t  _version, uint16_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 745 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<int16_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<int16_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) int16_t  _current;

 __declspec(property(get=get_Current)) int16_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<int16_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<int16_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<int16_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<int16_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<int16_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(int16_t  value) ;

constexpr int16_t& __get__current() ;

constexpr int16_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<int16_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline int16_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<int16_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "int16_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<int16_t>*  _list, int32_t  _index, int32_t  _version, int16_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 742 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Color32> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Color32>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Color32  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Color32  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Color32>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Color32>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Color32>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Color32>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Color32  value) ;

constexpr ::UnityEngine::Color32& __get__current() ;

constexpr ::UnityEngine::Color32 const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Color32>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Color32 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Color32>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Color32", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Color32>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Color32  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 741 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<uint8_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<uint8_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) uint8_t  _current;

 __declspec(property(get=get_Current)) uint8_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<uint8_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<uint8_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<uint8_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<uint8_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(uint8_t  value) ;

constexpr uint8_t& __get__current() ;

constexpr uint8_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<uint8_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint8_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<uint8_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "uint8_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<uint8_t>*  _list, int32_t  _index, int32_t  _version, uint8_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 739 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::BoneWeight> : public ::bs_hook::ValueTypeWrapper<0x30> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x30};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::BoneWeight  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::BoneWeight  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::BoneWeight>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::BoneWeight  value) ;

constexpr ::UnityEngine::BoneWeight& __get__current() ;

constexpr ::UnityEngine::BoneWeight const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::BoneWeight get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::BoneWeight", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::BoneWeight  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x30>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 417 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::XR::XRNodeState> : public ::bs_hook::ValueTypeWrapper<0x70> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x70};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::XR::XRNodeState  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::XR::XRNodeState  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::XR::XRNodeState>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::XR::XRNodeState  value) ;

constexpr ::UnityEngine::XR::XRNodeState& __get__current() ;

constexpr ::UnityEngine::XR::XRNodeState const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::XR::XRNodeState get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::XR::XRNodeState", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::XR::XRNodeState  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x70>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 412 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Vector3> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Vector3  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Vector3  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector3>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Vector3  value) ;

constexpr ::UnityEngine::Vector3& __get__current() ;

constexpr ::UnityEngine::Vector3 const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector3 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Vector3>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Vector3", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Vector3  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 411 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Vector2> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Vector2  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Vector2  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector2>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Vector2>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Vector2  value) ;

constexpr ::UnityEngine::Vector2& __get__current() ;

constexpr ::UnityEngine::Vector2 const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Vector2>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector2 get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Vector2>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Vector2", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Vector2>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Vector2  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 407 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<uint64_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<uint64_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) uint64_t  _current;

 __declspec(property(get=get_Current)) uint64_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<uint64_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<uint64_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<uint64_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<uint64_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(uint64_t  value) ;

constexpr uint64_t& __get__current() ;

constexpr uint64_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<uint64_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint64_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<uint64_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "uint64_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<uint64_t>*  _list, int32_t  _index, int32_t  _version, uint64_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 391 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<float_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<float_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) float_t  _current;

 __declspec(property(get=get_Current)) float_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<float_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<float_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<float_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<float_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<float_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(float_t  value) ;

constexpr float_t& __get__current() ;

constexpr float_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<float_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline float_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<float_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "float_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<float_t>*  _list, int32_t  _index, int32_t  _version, float_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 333 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<int64_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<int64_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) int64_t  _current;

 __declspec(property(get=get_Current)) int64_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<int64_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<int64_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<int64_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<int64_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<int64_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(int64_t  value) ;

constexpr int64_t& __get__current() ;

constexpr int64_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<int64_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline int64_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<int64_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "int64_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<int64_t>*  _list, int32_t  _index, int32_t  _version, int64_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 330 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::InputSystem::LowLevel::InputEventPtr> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::InputSystem::LowLevel::InputEventPtr  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::InputSystem::LowLevel::InputEventPtr  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::InputSystem::LowLevel::InputEventPtr  value) ;

constexpr ::UnityEngine::InputSystem::LowLevel::InputEventPtr& __get__current() ;

constexpr ::UnityEngine::InputSystem::LowLevel::InputEventPtr const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::LowLevel::InputEventPtr get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::InputSystem::LowLevel::InputEventPtr", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::InputSystem::LowLevel::InputEventPtr  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 314 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::System::Guid> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::System::Guid>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::System::Guid  _current;

 __declspec(property(get=get_Current)) ::System::Guid  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::System::Guid>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::System::Guid>*  value) ;

constexpr ::System::Collections::Generic::List_1<::System::Guid>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::System::Guid>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::System::Guid  value) ;

constexpr ::System::Guid& __get__current() ;

constexpr ::System::Guid const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::System::Guid>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Guid get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::System::Guid>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::System::Guid", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::System::Guid>*  _list, int32_t  _index, int32_t  _version, ::System::Guid  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 302 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> : public ::bs_hook::ValueTypeWrapper<0x40> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x40};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  value) ;

constexpr ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent& __get__current() ;

constexpr ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x40>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 293 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::Color> : public ::bs_hook::ValueTypeWrapper<0x20> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x20};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::Color>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::Color  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::Color  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Color>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::Color>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::Color>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::Color>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::Color  value) ;

constexpr ::UnityEngine::Color& __get__current() ;

constexpr ::UnityEngine::Color const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::Color>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Color get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::Color>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::Color", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::Color>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::Color  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x20>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 292 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<char16_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<char16_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) char16_t  _current;

 __declspec(property(get=get_Current)) char16_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<char16_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<char16_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<char16_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<char16_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<char16_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(char16_t  value) ;

constexpr char16_t& __get__current() ;

constexpr char16_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<char16_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline char16_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<char16_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "char16_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<char16_t>*  _list, int32_t  _index, int32_t  _version, char16_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 275 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> : public ::bs_hook::ValueTypeWrapper<0x28> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x28};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  _current;

 __declspec(property(get=get_Current)) ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  value) ;

constexpr ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  value) ;

constexpr ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle& __get__current() ;

constexpr ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  _list, int32_t  _index, int32_t  _version, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x28>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 105 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<bool> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<bool>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) bool  _current;

 __declspec(property(get=get_Current)) bool  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<bool>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<bool>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<bool>*  value) ;

constexpr ::System::Collections::Generic::List_1<bool>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<bool>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(bool  value) ;

constexpr bool& __get__current() ;

constexpr bool const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<bool>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<bool>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "bool", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<bool>*  _list, int32_t  _index, int32_t  _version, bool  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 98 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<int32_t> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<int32_t>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) int32_t  _current;

 __declspec(property(get=get_Current)) int32_t  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<int32_t>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<int32_t>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<int32_t>*  value) ;

constexpr ::System::Collections::Generic::List_1<int32_t>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<int32_t>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(int32_t  value) ;

constexpr int32_t& __get__current() ;

constexpr int32_t const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<int32_t>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<int32_t>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "int32_t", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<int32_t>*  _list, int32_t  _index, int32_t  _version, int32_t  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: ::Enumerator
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T>
// Is value type: true
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3842))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3842), inst: 2 })
// CS Name: ::List`1::Enumerator<T>
struct CORDL_TYPE __List_1__Enumerator<T> : public ::bs_hook::ValueTypeWrapper<0x18> {
public:
// Declarations
/// @brief The size of the true value type
static constexpr auto  __IL2CPP_VALUE_TYPE_SIZE{0x18};

/// @brief Field _list offset 0x0
 __declspec(property(get=__get__list, put=__set__list)) ::System::Collections::Generic::List_1<T>*  _list;

/// @brief Field _index offset 0x8
 __declspec(property(get=__get__index, put=__set__index)) int32_t  _index;

/// @brief Field _version offset 0xc
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _current offset 0x10
 __declspec(property(get=__get__current, put=__set__current)) T  _current;

 __declspec(property(get=get_Current)) T  Current;

 __declspec(property(get=System_Collections_IEnumerator_get_Current)) ::System::Object*  System_Collections_IEnumerator_Current;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerator_1<T>"
constexpr operator  ::System::Collections::Generic::IEnumerator_1<T>*() ;

/// @brief Convert operator to "::System::IDisposable"
constexpr operator  ::System::IDisposable*() ;

/// @brief Convert operator to "::System::Collections::IEnumerator"
constexpr operator  ::System::Collections::IEnumerator*() ;

constexpr void __set__list(::System::Collections::Generic::List_1<T>*  value) ;

constexpr ::System::Collections::Generic::List_1<T>* __get__list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::List_1<T>*> __get__list() const;

constexpr void __set__index(int32_t  value) ;

constexpr int32_t& __get__index() ;

constexpr int32_t const& __get__index() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__current(T  value) ;

constexpr T& __get__current() ;

constexpr T const& __get__current() const;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::List_1<T>*  list) ;

/// @brief Method Dispose addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Dispose() ;

/// @brief Method MoveNext addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool MoveNext() ;

/// @brief Method MoveNextRare addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool MoveNextRare() ;

/// @brief Method get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline T get_Current() ;

/// @brief Method System.Collections.IEnumerator.get_Current addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IEnumerator_get_Current() ;

/// @brief Method System.Collections.IEnumerator.Reset addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IEnumerator_Reset() ;

// Ctor Parameters [CppParam { name: "_list", ty: "::System::Collections::Generic::List_1<T>*", modifiers: "", def_value: None }, CppParam { name: "_index", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_version", ty: "int32_t", modifiers: "", def_value: None }, CppParam { name: "_current", ty: "T", modifiers: "", def_value: None }]
constexpr __List_1__Enumerator(::System::Collections::Generic::List_1<T>*  _list, int32_t  _index, int32_t  _version, T  _current) noexcept;

// Ctor Parameters [CppParam { name: "instance", ty: "std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>", modifiers: "", def_value: None }]
// @brief Constructor that lets you initialize the internal array explicitly
constexpr explicit __List_1__Enumerator(std::array<std::byte, __IL2CPP_VALUE_TYPE_SIZE>  instance) noexcept : ::bs_hook::ValueTypeWrapper<0x18>(instance) {
}

// Ctor Parameters []
// @brief default ctor
 __List_1__Enumerator()  = default;


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = true;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6442 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair Find(::System::Predicate_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* FindAll(::System::Predicate_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair FindLast(::System::Predicate_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::cordl_internals::is_or_is_backed_by<uint16_t> T>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6441 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<T> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<T>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<T,::Array<T>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) T  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<T>"
constexpr operator  ::System::Collections::Generic::IList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<T>"
constexpr operator  ::System::Collections::Generic::ICollection_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<T>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<T>*() noexcept;

constexpr void __set__items(::ArrayW<T,::Array<T>*>  value) ;

constexpr ::ArrayW<T,::Array<T>*>& __get__items() ;

constexpr ::ArrayW<T,::Array<T>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<T,::Array<T>*>  value) ;

static inline ::ArrayW<T,::Array<T>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<T>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<T>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<T>* New_ctor(::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline T get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, T  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(T  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(T  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<T>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, T  item, ::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(T  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(T  item, ::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(T  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<T,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<T,::Array<T>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<T,::Array<T>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<T>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline T Find(::System::Predicate_1<T>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<T>* FindAll(::System::Predicate_1<T>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<T>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<T>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline T FindLast(::System::Predicate_1<T>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<T>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<T> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<T>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<T>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(T  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, T  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(T  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<T>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<T>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<T,::Array<T>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<T>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::cordl_internals::is_or_is_backed_by<int32_t> T1_cordlgen_0,::cordl_internals::is_or_is_backed_by<int32_t> T2_cordlgen_1,::il2cpp_utils::il2cpp_reference_type T3_cordlgen_2>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6440 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*>  value) ;

constexpr ::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*>& __get__items() ;

constexpr ::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*>  value) ;

static inline ::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  item, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  item, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2> Find(::System::Predicate_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* FindAll(::System::Predicate_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2> FindLast(::System::Predicate_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6439 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*>  value) ;

constexpr ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*>& __get__items() ;

constexpr ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*>  value) ;

static inline ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  item, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  item, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3> Find(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* FindAll(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3> FindLast(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T2_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6438 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*>  value) ;

constexpr ::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*>& __get__items() ;

constexpr ::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*>  value) ;

static inline ::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<int32_t,T2_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ValueTuple_2<int32_t,T2_cordlgen_0> Find(::System::Predicate_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* FindAll(::System::Predicate_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ValueTuple_2<int32_t,T2_cordlgen_0> FindLast(::System::Predicate_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::ValueTuple_2<int32_t,T2_cordlgen_0>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6437 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  value) ;

static inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1> Find(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* FindAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1> FindLast(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6436 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*>  value) ;

static inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t> Find(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* FindAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t> FindLast(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6435 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*>  value) ;

static inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge> Find(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* FindAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge> FindLast(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6434 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1> Find(::System::Predicate_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* FindAll(::System::Predicate_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1> FindLast(::System::Predicate_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6433 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

constexpr void __set__items(::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*>  value) ;

constexpr ::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*>& __get__items() ;

constexpr ::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*>  value) ;

static inline ::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  item, ::System::Collections::Generic::IComparer_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  item, ::System::Collections::Generic::IComparer_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex> Find(::System::Predicate_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* FindAll(::System::Predicate_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex> FindLast(::System::Predicate_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6432 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::Unity::Collections::NativeArray_1<uint16_t>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::Unity::Collections::NativeArray_1<uint16_t>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::Unity::Collections::NativeArray_1<uint16_t>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

constexpr void __set__items(::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*>  value) ;

constexpr ::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*>& __get__items() ;

constexpr ::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*>  value) ;

static inline ::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<uint16_t>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<uint16_t>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Unity::Collections::NativeArray_1<uint16_t> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::Unity::Collections::NativeArray_1<uint16_t>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::Unity::Collections::NativeArray_1<uint16_t>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::Unity::Collections::NativeArray_1<uint16_t>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<uint16_t>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Unity::Collections::NativeArray_1<uint16_t>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::Unity::Collections::NativeArray_1<uint16_t>  item, ::System::Collections::Generic::IComparer_1<::Unity::Collections::NativeArray_1<uint16_t>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Unity::Collections::NativeArray_1<uint16_t>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Unity::Collections::NativeArray_1<uint16_t>  item, ::System::Collections::Generic::IComparer_1<::Unity::Collections::NativeArray_1<uint16_t>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Unity::Collections::NativeArray_1<uint16_t>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::Unity::Collections::NativeArray_1<uint16_t>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::Unity::Collections::NativeArray_1<uint16_t>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Unity::Collections::NativeArray_1<uint16_t> Find(::System::Predicate_1<::Unity::Collections::NativeArray_1<uint16_t>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>* FindAll(::System::Predicate_1<::Unity::Collections::NativeArray_1<uint16_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::Unity::Collections::NativeArray_1<uint16_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::Unity::Collections::NativeArray_1<uint16_t>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Unity::Collections::NativeArray_1<uint16_t> FindLast(::System::Predicate_1<::Unity::Collections::NativeArray_1<uint16_t>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::Unity::Collections::NativeArray_1<uint16_t>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::Unity::Collections::NativeArray_1<uint16_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Unity::Collections::NativeArray_1<uint16_t>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Unity::Collections::NativeArray_1<uint16_t>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Unity::Collections::NativeArray_1<uint16_t>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::Unity::Collections::NativeArray_1<uint16_t>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<uint16_t>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::Unity::Collections::NativeArray_1<uint16_t>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::Unity::Collections::NativeArray_1<uint16_t>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::Unity::Collections::NativeArray_1<uint16_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::Unity::Collections::NativeArray_1<uint16_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::Unity::Collections::NativeArray_1<uint16_t>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<uint16_t>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6431 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*>  value) ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*>& __get__items() ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*>  value) ;

static inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> Find(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* FindAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> FindLast(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6430 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*>  value) ;

static inline ::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0> Find(::System::Predicate_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* FindAll(::System::Predicate_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0> FindLast(::System::Predicate_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6424 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*>  value) ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*>& __get__items() ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*>  value) ;

static inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0> Find(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* FindAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0> FindLast(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6423 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Collections::DictionaryEntry> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::DictionaryEntry>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Collections::DictionaryEntry  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::DictionaryEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::DictionaryEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::DictionaryEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::DictionaryEntry>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*>  value) ;

constexpr ::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*>& __get__items() ;

constexpr ::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*>  value) ;

static inline ::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::DictionaryEntry>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::DictionaryEntry>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::DictionaryEntry get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Collections::DictionaryEntry  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Collections::DictionaryEntry  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Collections::DictionaryEntry  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Collections::DictionaryEntry>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::DictionaryEntry>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Collections::DictionaryEntry  item, ::System::Collections::Generic::IComparer_1<::System::Collections::DictionaryEntry>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::DictionaryEntry  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::DictionaryEntry  item, ::System::Collections::Generic::IComparer_1<::System::Collections::DictionaryEntry>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::DictionaryEntry  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Collections::DictionaryEntry,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Collections::DictionaryEntry>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::DictionaryEntry Find(::System::Predicate_1<::System::Collections::DictionaryEntry>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>* FindAll(::System::Predicate_1<::System::Collections::DictionaryEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Collections::DictionaryEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Collections::DictionaryEntry>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::DictionaryEntry FindLast(::System::Predicate_1<::System::Collections::DictionaryEntry>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Collections::DictionaryEntry>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::DictionaryEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::DictionaryEntry>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::DictionaryEntry>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::DictionaryEntry  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Collections::DictionaryEntry  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Collections::DictionaryEntry>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Collections::DictionaryEntry  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Collections::DictionaryEntry>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Collections::DictionaryEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Collections::DictionaryEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Collections::DictionaryEntry>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Collections::DictionaryEntry>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6152 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::Zenject::__PoolableManager__PoolableInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::Zenject::__PoolableManager__PoolableInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::Zenject::__PoolableManager__PoolableInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*>  value) ;

constexpr ::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*>& __get__items() ;

constexpr ::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*>  value) ;

static inline ::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::__PoolableManager__PoolableInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::__PoolableManager__PoolableInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__PoolableManager__PoolableInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::Zenject::__PoolableManager__PoolableInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::Zenject::__PoolableManager__PoolableInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::Zenject::__PoolableManager__PoolableInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::Zenject::__PoolableManager__PoolableInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::__PoolableManager__PoolableInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::Zenject::__PoolableManager__PoolableInfo  item, ::System::Collections::Generic::IComparer_1<::Zenject::__PoolableManager__PoolableInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::__PoolableManager__PoolableInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::__PoolableManager__PoolableInfo  item, ::System::Collections::Generic::IComparer_1<::Zenject::__PoolableManager__PoolableInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::__PoolableManager__PoolableInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::Zenject::__PoolableManager__PoolableInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::Zenject::__PoolableManager__PoolableInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::__PoolableManager__PoolableInfo Find(::System::Predicate_1<::Zenject::__PoolableManager__PoolableInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>* FindAll(::System::Predicate_1<::Zenject::__PoolableManager__PoolableInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::Zenject::__PoolableManager__PoolableInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::Zenject::__PoolableManager__PoolableInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::__PoolableManager__PoolableInfo FindLast(::System::Predicate_1<::Zenject::__PoolableManager__PoolableInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::Zenject::__PoolableManager__PoolableInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::Zenject::__PoolableManager__PoolableInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::__PoolableManager__PoolableInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::__PoolableManager__PoolableInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::__PoolableManager__PoolableInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::Zenject::__PoolableManager__PoolableInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::Zenject::__PoolableManager__PoolableInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::Zenject::__PoolableManager__PoolableInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::Zenject::__PoolableManager__PoolableInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::Zenject::__PoolableManager__PoolableInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::Zenject::__PoolableManager__PoolableInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::Zenject::__PoolableManager__PoolableInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::Zenject::__PoolableManager__PoolableInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6151 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

constexpr void __set__items(::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  value) ;

constexpr ::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>& __get__items() ;

constexpr ::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  value) ;

static inline ::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> Find(::System::Predicate_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* FindAll(::System::Predicate_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> FindLast(::System::Predicate_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6150 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*>  value) ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*>& __get__items() ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*>  value) ;

static inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0> Find(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* FindAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0> FindLast(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 6003 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData Find(::System::Predicate_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* FindAll(::System::Predicate_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData FindLast(::System::Predicate_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 5983 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::HoudiniEngineUnity::HAPI_GeoInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::HoudiniEngineUnity::HAPI_GeoInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::HoudiniEngineUnity::HAPI_GeoInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*>  value) ;

constexpr ::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*>& __get__items() ;

constexpr ::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*>  value) ;

static inline ::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::HAPI_GeoInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::HoudiniEngineUnity::HAPI_GeoInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::HoudiniEngineUnity::HAPI_GeoInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::HoudiniEngineUnity::HAPI_GeoInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::HoudiniEngineUnity::HAPI_GeoInfo  item, ::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::HoudiniEngineUnity::HAPI_GeoInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::HoudiniEngineUnity::HAPI_GeoInfo  item, ::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::HoudiniEngineUnity::HAPI_GeoInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::HoudiniEngineUnity::HAPI_GeoInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::HoudiniEngineUnity::HAPI_GeoInfo Find(::System::Predicate_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>* FindAll(::System::Predicate_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::HoudiniEngineUnity::HAPI_GeoInfo FindLast(::System::Predicate_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::HoudiniEngineUnity::HAPI_GeoInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::HAPI_GeoInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_GeoInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::HoudiniEngineUnity::HAPI_GeoInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::HoudiniEngineUnity::HAPI_GeoInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::HoudiniEngineUnity::HAPI_GeoInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 5059 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  value) ;

constexpr ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>& __get__items() ;

constexpr ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  value) ;

static inline ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1> Find(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* FindAll(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1> FindLast(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4457 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher Find(::System::Predicate_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* FindAll(::System::Predicate_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher FindLast(::System::Predicate_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4455 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData Find(::System::Predicate_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* FindAll(::System::Predicate_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData FindLast(::System::Predicate_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4454 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry Find(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry FindLast(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4453 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition Find(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition FindLast(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4451 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::__UnitySynchronizationContext__WorkRequest>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::__UnitySynchronizationContext__WorkRequest  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*>  value) ;

constexpr ::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*>  value) ;

static inline ::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__UnitySynchronizationContext__WorkRequest get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::__UnitySynchronizationContext__WorkRequest  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::__UnitySynchronizationContext__WorkRequest  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::__UnitySynchronizationContext__WorkRequest  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::__UnitySynchronizationContext__WorkRequest  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::__UnitySynchronizationContext__WorkRequest  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::__UnitySynchronizationContext__WorkRequest  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::__UnitySynchronizationContext__WorkRequest  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::__UnitySynchronizationContext__WorkRequest,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::__UnitySynchronizationContext__WorkRequest Find(::System::Predicate_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* FindAll(::System::Predicate_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::__UnitySynchronizationContext__WorkRequest FindLast(::System::Predicate_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::__UnitySynchronizationContext__WorkRequest> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::__UnitySynchronizationContext__WorkRequest  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::__UnitySynchronizationContext__WorkRequest  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::__UnitySynchronizationContext__WorkRequest  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4450 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate Find(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate FindLast(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4449 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree Find(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree FindLast(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4448 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry Find(::System::Predicate_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry FindLast(::System::Predicate_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4447 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper Find(::System::Predicate_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper FindLast(::System::Predicate_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4446 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*>  value) ;

constexpr ::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*>  value) ;

static inline ::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData Find(::System::Predicate_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* FindAll(::System::Predicate_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData FindLast(::System::Predicate_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4443 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TextureRegistry__TextureInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__TextureRegistry__TextureInfo Find(::System::Predicate_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__TextureRegistry__TextureInfo FindLast(::System::Predicate_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__TextureRegistry__TextureInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4442 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

constexpr void __set__items(::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*>  value) ;

constexpr ::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*>& __get__items() ;

constexpr ::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*>  value) ;

static inline ::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* New_ctor(::System::Collections::Generic::IEnumerable_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  item, ::System::Collections::Generic::IComparer_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  item, ::System::Collections::Generic::IComparer_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame Find(::System::Predicate_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* FindAll(::System::Predicate_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame FindLast(::System::Predicate_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4441 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*>  value) ;

constexpr ::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*>  value) ;

static inline ::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap Find(::System::Predicate_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* FindAll(::System::Predicate_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap FindLast(::System::Predicate_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4440 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride Find(::System::Predicate_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride FindLast(::System::Predicate_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4435 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction Find(::System::Predicate_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* FindAll(::System::Predicate_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction FindLast(::System::Predicate_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4430 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*>  value) ;

static inline ::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest Find(::System::Predicate_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* FindAll(::System::Predicate_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest FindLast(::System::Predicate_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4429 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData Find(::System::Predicate_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData FindLast(::System::Predicate_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4411 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

constexpr void __set__items(::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*>  value) ;

constexpr ::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*>& __get__items() ;

constexpr ::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*>  value) ;

static inline ::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* New_ctor(::System::Collections::Generic::IEnumerable_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  item, ::System::Collections::Generic::IComparer_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  item, ::System::Collections::Generic::IComparer_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast Find(::System::Predicate_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* FindAll(::System::Predicate_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast FindLast(::System::Predicate_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4410 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog Find(::System::Predicate_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* FindAll(::System::Predicate_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog FindLast(::System::Predicate_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4409 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit Find(::System::Predicate_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* FindAll(::System::Predicate_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit FindLast(::System::Predicate_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4407 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor Find(::System::Predicate_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* FindAll(::System::Predicate_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor FindLast(::System::Predicate_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4404 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry Find(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* FindAll(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry FindLast(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4403 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition Find(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* FindAll(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition FindLast(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4398 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue Find(::System::Predicate_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* FindAll(::System::Predicate_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue FindLast(::System::Predicate_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4388 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper Find(::System::Predicate_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper FindLast(::System::Predicate_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4387 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem Find(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem FindLast(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4386 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson Find(::System::Predicate_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson FindLast(::System::Predicate_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4383 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData Find(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData FindLast(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4382 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor Find(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor FindLast(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4381 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor Find(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor FindLast(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4373 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::Tayx::Graphy::__GraphyDebugger__DebugCondition>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::Tayx::Graphy::__GraphyDebugger__DebugCondition  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

constexpr void __set__items(::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*>  value) ;

constexpr ::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*>& __get__items() ;

constexpr ::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*>  value) ;

static inline ::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* New_ctor(::System::Collections::Generic::IEnumerable_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Tayx::Graphy::__GraphyDebugger__DebugCondition get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::Tayx::Graphy::__GraphyDebugger__DebugCondition  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::Tayx::Graphy::__GraphyDebugger__DebugCondition  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::Tayx::Graphy::__GraphyDebugger__DebugCondition  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::Tayx::Graphy::__GraphyDebugger__DebugCondition  item, ::System::Collections::Generic::IComparer_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Tayx::Graphy::__GraphyDebugger__DebugCondition  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Tayx::Graphy::__GraphyDebugger__DebugCondition  item, ::System::Collections::Generic::IComparer_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Tayx::Graphy::__GraphyDebugger__DebugCondition  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::Tayx::Graphy::__GraphyDebugger__DebugCondition,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Tayx::Graphy::__GraphyDebugger__DebugCondition Find(::System::Predicate_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* FindAll(::System::Predicate_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Tayx::Graphy::__GraphyDebugger__DebugCondition FindLast(::System::Predicate_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::Tayx::Graphy::__GraphyDebugger__DebugCondition> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Tayx::Graphy::__GraphyDebugger__DebugCondition  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::Tayx::Graphy::__GraphyDebugger__DebugCondition  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::Tayx::Graphy::__GraphyDebugger__DebugCondition  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4369 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::__FocusController__FocusedElement> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__FocusController__FocusedElement>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::__FocusController__FocusedElement  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__FocusController__FocusedElement get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::__FocusController__FocusedElement  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::__FocusController__FocusedElement  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::__FocusController__FocusedElement  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::__FocusController__FocusedElement  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__FocusController__FocusedElement  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__FocusController__FocusedElement  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__FocusController__FocusedElement  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::__FocusController__FocusedElement,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__FocusController__FocusedElement Find(::System::Predicate_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__FocusController__FocusedElement FindLast(::System::Predicate_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__FocusController__FocusedElement> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__FocusController__FocusedElement  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::__FocusController__FocusedElement  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::__FocusController__FocusedElement  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4358 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

constexpr void __set__items(::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*>  value) ;

constexpr ::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*>& __get__items() ;

constexpr ::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*>  value) ;

static inline ::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* New_ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__DisposeBlock__SpawnedObjectPoolPair get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  item, ::System::Collections::Generic::IComparer_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  item, ::System::Collections::Generic::IComparer_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::__DisposeBlock__SpawnedObjectPoolPair Find(::System::Predicate_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* FindAll(::System::Predicate_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::__DisposeBlock__SpawnedObjectPoolPair FindLast(::System::Predicate_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::Zenject::__DisposeBlock__SpawnedObjectPoolPair> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4356 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::Zenject::__DisposableManager__DisposableInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::Zenject::__DisposableManager__DisposableInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::Zenject::__DisposableManager__DisposableInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*>  value) ;

constexpr ::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*>& __get__items() ;

constexpr ::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*>  value) ;

static inline ::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposableManager__DisposableInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposableManager__DisposableInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__DisposableManager__DisposableInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::Zenject::__DisposableManager__DisposableInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::Zenject::__DisposableManager__DisposableInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::Zenject::__DisposableManager__DisposableInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposableManager__DisposableInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::__DisposableManager__DisposableInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::Zenject::__DisposableManager__DisposableInfo  item, ::System::Collections::Generic::IComparer_1<::Zenject::__DisposableManager__DisposableInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::__DisposableManager__DisposableInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::__DisposableManager__DisposableInfo  item, ::System::Collections::Generic::IComparer_1<::Zenject::__DisposableManager__DisposableInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::__DisposableManager__DisposableInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::Zenject::__DisposableManager__DisposableInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::Zenject::__DisposableManager__DisposableInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::__DisposableManager__DisposableInfo Find(::System::Predicate_1<::Zenject::__DisposableManager__DisposableInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>* FindAll(::System::Predicate_1<::Zenject::__DisposableManager__DisposableInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::Zenject::__DisposableManager__DisposableInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::Zenject::__DisposableManager__DisposableInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::__DisposableManager__DisposableInfo FindLast(::System::Predicate_1<::Zenject::__DisposableManager__DisposableInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::Zenject::__DisposableManager__DisposableInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::Zenject::__DisposableManager__DisposableInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::__DisposableManager__DisposableInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::__DisposableManager__DisposableInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::__DisposableManager__DisposableInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::Zenject::__DisposableManager__DisposableInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposableManager__DisposableInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::Zenject::__DisposableManager__DisposableInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::Zenject::__DisposableManager__DisposableInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::Zenject::__DisposableManager__DisposableInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::Zenject::__DisposableManager__DisposableInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::Zenject::__DisposableManager__DisposableInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposableManager__DisposableInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4353 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__DebugConsoleController__ConsoleMessage get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__DebugConsoleController__ConsoleMessage Find(::System::Predicate_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* FindAll(::System::Predicate_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__DebugConsoleController__ConsoleMessage FindLast(::System::Predicate_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__DebugConsoleController__ConsoleMessage> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4349 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::__Camera__RenderRequest> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::__Camera__RenderRequest>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::__Camera__RenderRequest  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*>  value) ;

constexpr ::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*>  value) ;

static inline ::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__Camera__RenderRequest>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__Camera__RenderRequest>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__Camera__RenderRequest get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::__Camera__RenderRequest  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::__Camera__RenderRequest  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::__Camera__RenderRequest  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__Camera__RenderRequest>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::__Camera__RenderRequest>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::__Camera__RenderRequest  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::__Camera__RenderRequest>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::__Camera__RenderRequest  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::__Camera__RenderRequest  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::__Camera__RenderRequest>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::__Camera__RenderRequest  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::__Camera__RenderRequest,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::__Camera__RenderRequest>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::__Camera__RenderRequest Find(::System::Predicate_1<::UnityEngine::__Camera__RenderRequest>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>* FindAll(::System::Predicate_1<::UnityEngine::__Camera__RenderRequest>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::__Camera__RenderRequest>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::__Camera__RenderRequest>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::__Camera__RenderRequest FindLast(::System::Predicate_1<::UnityEngine::__Camera__RenderRequest>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::__Camera__RenderRequest>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::__Camera__RenderRequest> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::__Camera__RenderRequest>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::__Camera__RenderRequest>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::__Camera__RenderRequest  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::__Camera__RenderRequest  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::__Camera__RenderRequest>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::__Camera__RenderRequest  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::__Camera__RenderRequest>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::__Camera__RenderRequest>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::__Camera__RenderRequest>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::__Camera__RenderRequest>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__Camera__RenderRequest>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4345 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page Find(::System::Predicate_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page FindLast(::System::Predicate_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4344 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::__BeforeRenderHelper__OrderBlock>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::__BeforeRenderHelper__OrderBlock  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*>  value) ;

constexpr ::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*>  value) ;

static inline ::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__BeforeRenderHelper__OrderBlock get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::__BeforeRenderHelper__OrderBlock  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::__BeforeRenderHelper__OrderBlock  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::__BeforeRenderHelper__OrderBlock  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::__BeforeRenderHelper__OrderBlock  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::__BeforeRenderHelper__OrderBlock  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::__BeforeRenderHelper__OrderBlock  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::__BeforeRenderHelper__OrderBlock  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::__BeforeRenderHelper__OrderBlock,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::__BeforeRenderHelper__OrderBlock Find(::System::Predicate_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* FindAll(::System::Predicate_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::__BeforeRenderHelper__OrderBlock FindLast(::System::Predicate_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::__BeforeRenderHelper__OrderBlock> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::__BeforeRenderHelper__OrderBlock  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::__BeforeRenderHelper__OrderBlock  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::__BeforeRenderHelper__OrderBlock  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4322 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__BeatLine__HighlightData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__BeatLine__HighlightData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__BeatLine__HighlightData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatLine__HighlightData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatLine__HighlightData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__BeatLine__HighlightData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__BeatLine__HighlightData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__BeatLine__HighlightData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__BeatLine__HighlightData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatLine__HighlightData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__BeatLine__HighlightData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__BeatLine__HighlightData  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__BeatLine__HighlightData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__BeatLine__HighlightData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__BeatLine__HighlightData  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__BeatLine__HighlightData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__BeatLine__HighlightData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__BeatLine__HighlightData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__BeatLine__HighlightData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__BeatLine__HighlightData Find(::System::Predicate_1<::GlobalNamespace::__BeatLine__HighlightData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>* FindAll(::System::Predicate_1<::GlobalNamespace::__BeatLine__HighlightData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__BeatLine__HighlightData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__BeatLine__HighlightData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__BeatLine__HighlightData FindLast(::System::Predicate_1<::GlobalNamespace::__BeatLine__HighlightData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__BeatLine__HighlightData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__BeatLine__HighlightData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__BeatLine__HighlightData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__BeatLine__HighlightData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__BeatLine__HighlightData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__BeatLine__HighlightData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatLine__HighlightData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__BeatLine__HighlightData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__BeatLine__HighlightData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__BeatLine__HighlightData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__BeatLine__HighlightData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__BeatLine__HighlightData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatLine__HighlightData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4320 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*>  value) ;

static inline ::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo Find(::System::Predicate_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* FindAll(::System::Predicate_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo FindLast(::System::Predicate_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4316 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::XR::XRFeatureDescriptor get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::XR::XRFeatureDescriptor Find(::System::Predicate_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::XR::XRFeatureDescriptor FindLast(::System::Predicate_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::XR::XRFeatureDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4315 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Security::Cryptography::X509Certificates::X509ChainStatus>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Security::Cryptography::X509Certificates::X509ChainStatus  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>  value) ;

constexpr ::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>& __get__items() ;

constexpr ::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>  value) ;

static inline ::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Security::Cryptography::X509Certificates::X509ChainStatus get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Security::Cryptography::X509Certificates::X509ChainStatus  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Security::Cryptography::X509Certificates::X509ChainStatus  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Security::Cryptography::X509Certificates::X509ChainStatus  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Security::Cryptography::X509Certificates::X509ChainStatus  item, ::System::Collections::Generic::IComparer_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Security::Cryptography::X509Certificates::X509ChainStatus  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Security::Cryptography::X509Certificates::X509ChainStatus  item, ::System::Collections::Generic::IComparer_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Security::Cryptography::X509Certificates::X509ChainStatus  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Security::Cryptography::X509Certificates::X509ChainStatus,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Security::Cryptography::X509Certificates::X509ChainStatus Find(::System::Predicate_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* FindAll(::System::Predicate_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Security::Cryptography::X509Certificates::X509ChainStatus FindLast(::System::Predicate_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Security::Cryptography::X509Certificates::X509ChainStatus> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Security::Cryptography::X509Certificates::X509ChainStatus  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Security::Cryptography::X509Certificates::X509ChainStatus  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Security::Cryptography::X509Certificates::X509ChainStatus  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4309 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::XR::UsageHint> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::XR::UsageHint>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::XR::UsageHint  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::UsageHint>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::UsageHint>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::XR::UsageHint get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::XR::UsageHint  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::XR::UsageHint  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::XR::UsageHint  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::UsageHint>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::XR::UsageHint>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::XR::UsageHint  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::XR::UsageHint>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::XR::UsageHint  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::XR::UsageHint  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::XR::UsageHint>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::XR::UsageHint  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::XR::UsageHint,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::XR::UsageHint>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::XR::UsageHint Find(::System::Predicate_1<::UnityEngine::InputSystem::XR::UsageHint>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::XR::UsageHint>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::XR::UsageHint>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::XR::UsageHint>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::XR::UsageHint FindLast(::System::Predicate_1<::UnityEngine::InputSystem::XR::UsageHint>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::XR::UsageHint>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::XR::UsageHint> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::XR::UsageHint>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::XR::UsageHint>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::XR::UsageHint  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::XR::UsageHint  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::UsageHint>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::XR::UsageHint  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::XR::UsageHint>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::XR::UsageHint>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::XR::UsageHint>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::XR::UsageHint>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::UsageHint>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4303 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::TreeInstance> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::TreeInstance>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::TreeInstance  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::TreeInstance>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TreeInstance>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TreeInstance>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TreeInstance>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*>  value) ;

constexpr ::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*>  value) ;

static inline ::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TreeInstance>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TreeInstance>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TreeInstance get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::TreeInstance  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::TreeInstance  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::TreeInstance  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TreeInstance>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::TreeInstance>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::TreeInstance  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::TreeInstance>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::TreeInstance  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::TreeInstance  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::TreeInstance>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::TreeInstance  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::TreeInstance,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::TreeInstance>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::TreeInstance Find(::System::Predicate_1<::UnityEngine::TreeInstance>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>* FindAll(::System::Predicate_1<::UnityEngine::TreeInstance>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::TreeInstance>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::TreeInstance>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::TreeInstance FindLast(::System::Predicate_1<::UnityEngine::TreeInstance>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::TreeInstance>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::TreeInstance> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TreeInstance>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::TreeInstance>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::TreeInstance  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::TreeInstance  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TreeInstance>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::TreeInstance  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::TreeInstance>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::TreeInstance>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::TreeInstance>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::TreeInstance>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TreeInstance>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4302 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::HoudiniEngineUnity::TransformData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::HoudiniEngineUnity::TransformData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::HoudiniEngineUnity::TransformData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::TransformData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::TransformData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::TransformData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::TransformData>*() noexcept;

constexpr void __set__items(::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*>  value) ;

constexpr ::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*>& __get__items() ;

constexpr ::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*>  value) ;

static inline ::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::TransformData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::TransformData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::TransformData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::HoudiniEngineUnity::TransformData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::HoudiniEngineUnity::TransformData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::HoudiniEngineUnity::TransformData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::TransformData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::HoudiniEngineUnity::TransformData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::HoudiniEngineUnity::TransformData  item, ::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::TransformData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::HoudiniEngineUnity::TransformData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::HoudiniEngineUnity::TransformData  item, ::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::TransformData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::HoudiniEngineUnity::TransformData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::HoudiniEngineUnity::TransformData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::HoudiniEngineUnity::TransformData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::HoudiniEngineUnity::TransformData Find(::System::Predicate_1<::HoudiniEngineUnity::TransformData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>* FindAll(::System::Predicate_1<::HoudiniEngineUnity::TransformData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::HoudiniEngineUnity::TransformData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::HoudiniEngineUnity::TransformData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::HoudiniEngineUnity::TransformData FindLast(::System::Predicate_1<::HoudiniEngineUnity::TransformData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::HoudiniEngineUnity::TransformData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::HoudiniEngineUnity::TransformData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::TransformData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::TransformData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::HoudiniEngineUnity::TransformData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::HoudiniEngineUnity::TransformData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::TransformData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::HoudiniEngineUnity::TransformData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::HoudiniEngineUnity::TransformData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::TransformData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::TransformData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::HoudiniEngineUnity::TransformData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::TransformData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4278 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Rendering::SubMeshDescriptor> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Rendering::SubMeshDescriptor>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Rendering::SubMeshDescriptor  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*>  value) ;

static inline ::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::SubMeshDescriptor>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::SubMeshDescriptor>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rendering::SubMeshDescriptor get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Rendering::SubMeshDescriptor  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Rendering::SubMeshDescriptor  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Rendering::SubMeshDescriptor  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::SubMeshDescriptor>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Rendering::SubMeshDescriptor>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Rendering::SubMeshDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Rendering::SubMeshDescriptor>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Rendering::SubMeshDescriptor  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Rendering::SubMeshDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Rendering::SubMeshDescriptor>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Rendering::SubMeshDescriptor  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Rendering::SubMeshDescriptor,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Rendering::SubMeshDescriptor>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Rendering::SubMeshDescriptor Find(::System::Predicate_1<::UnityEngine::Rendering::SubMeshDescriptor>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>* FindAll(::System::Predicate_1<::UnityEngine::Rendering::SubMeshDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Rendering::SubMeshDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Rendering::SubMeshDescriptor>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Rendering::SubMeshDescriptor FindLast(::System::Predicate_1<::UnityEngine::Rendering::SubMeshDescriptor>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Rendering::SubMeshDescriptor>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Rendering::SubMeshDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rendering::SubMeshDescriptor>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::SubMeshDescriptor>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Rendering::SubMeshDescriptor  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Rendering::SubMeshDescriptor  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::SubMeshDescriptor>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Rendering::SubMeshDescriptor  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Rendering::SubMeshDescriptor>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Rendering::SubMeshDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Rendering::SubMeshDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Rendering::SubMeshDescriptor>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::SubMeshDescriptor>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4277 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::StyleVariable> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleVariable>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::StyleVariable  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleVariable>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleVariable>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleVariable get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::StyleVariable  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::StyleVariable  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::StyleVariable  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleVariable>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleVariable>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::StyleVariable  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleVariable>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleVariable  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleVariable  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleVariable>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleVariable  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::StyleVariable,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::StyleVariable>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleVariable Find(::System::Predicate_1<::UnityEngine::UIElements::StyleVariable>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::StyleVariable>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::StyleVariable>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::StyleVariable>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleVariable FindLast(::System::Predicate_1<::UnityEngine::UIElements::StyleVariable>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::StyleVariable>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleVariable> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleVariable>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleVariable>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleVariable  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::StyleVariable  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleVariable>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::StyleVariable  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::StyleVariable>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleVariable>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleVariable>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::StyleVariable>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleVariable>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4276 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StyleValueManaged get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::StyleValueManaged Find(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::StyleValueManaged FindLast(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StyleValueManaged> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4275 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::StyleSheets::StyleValue> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StyleValue>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::StyleSheets::StyleValue  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StyleValue get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StyleValue  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::StyleSheets::StyleValue  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::StyleSheets::StyleValue  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::StyleSheets::StyleValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::StyleValue  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::StyleValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::StyleValue  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::StyleSheets::StyleValue,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::StyleValue Find(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::StyleValue FindLast(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StyleValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::StyleValue  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StyleValue  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::StyleSheets::StyleValue  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4274 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken Find(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken FindLast(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4273 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::StyleSelectorPart> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSelectorPart>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::StyleSelectorPart  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSelectorPart>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSelectorPart>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSelectorPart get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSelectorPart  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::StyleSelectorPart  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::StyleSelectorPart  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSelectorPart>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSelectorPart>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::StyleSelectorPart  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSelectorPart>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSelectorPart  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSelectorPart  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSelectorPart>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSelectorPart  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::StyleSelectorPart,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::StyleSelectorPart>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSelectorPart Find(::System::Predicate_1<::UnityEngine::UIElements::StyleSelectorPart>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSelectorPart>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::StyleSelectorPart>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::StyleSelectorPart>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSelectorPart FindLast(::System::Predicate_1<::UnityEngine::UIElements::StyleSelectorPart>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::StyleSelectorPart>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSelectorPart> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSelectorPart>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSelectorPart>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSelectorPart  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::StyleSelectorPart  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSelectorPart>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::StyleSelectorPart  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSelectorPart>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSelectorPart>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSelectorPart>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::StyleSelectorPart>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSelectorPart>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4271 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StylePropertyValue get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::StylePropertyValue Find(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::StylePropertyValue FindLast(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::StylePropertyValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4263 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::RuleMatcher> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::RuleMatcher>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::RuleMatcher  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::RuleMatcher>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::RuleMatcher>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::RuleMatcher get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::RuleMatcher  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::RuleMatcher  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::RuleMatcher  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::RuleMatcher>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::RuleMatcher>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::RuleMatcher  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::RuleMatcher>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::RuleMatcher  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::RuleMatcher  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::RuleMatcher>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::RuleMatcher  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::RuleMatcher,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::RuleMatcher>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::RuleMatcher Find(::System::Predicate_1<::UnityEngine::UIElements::RuleMatcher>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::RuleMatcher>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::RuleMatcher>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::RuleMatcher>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::RuleMatcher FindLast(::System::Predicate_1<::UnityEngine::UIElements::RuleMatcher>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::RuleMatcher>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::RuleMatcher> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::RuleMatcher>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::RuleMatcher>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::RuleMatcher  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::RuleMatcher  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::RuleMatcher>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::RuleMatcher  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::RuleMatcher>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::RuleMatcher>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::RuleMatcher>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::RuleMatcher>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::RuleMatcher>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4261 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::RenderChainTextEntry>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::UIR::RenderChainTextEntry  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::RenderChainTextEntry get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::RenderChainTextEntry  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::UIR::RenderChainTextEntry  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::UIR::RenderChainTextEntry  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::UIR::RenderChainTextEntry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::RenderChainTextEntry  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::RenderChainTextEntry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::RenderChainTextEntry  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::UIR::RenderChainTextEntry,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::RenderChainTextEntry Find(::System::Predicate_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::RenderChainTextEntry FindLast(::System::Predicate_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::RenderChainTextEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::RenderChainTextEntry  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::UIR::RenderChainTextEntry  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::UIR::RenderChainTextEntry  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4255 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::RaycastHit2D> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::RaycastHit2D>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::RaycastHit2D  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::RaycastHit2D>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::RaycastHit2D>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::RaycastHit2D>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::RaycastHit2D>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*>  value) ;

constexpr ::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*>  value) ;

static inline ::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::RaycastHit2D>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::RaycastHit2D>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::RaycastHit2D get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::RaycastHit2D  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::RaycastHit2D  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::RaycastHit2D  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::RaycastHit2D>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::RaycastHit2D>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::RaycastHit2D  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::RaycastHit2D>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::RaycastHit2D  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::RaycastHit2D  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::RaycastHit2D>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::RaycastHit2D  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::RaycastHit2D,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::RaycastHit2D>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::RaycastHit2D Find(::System::Predicate_1<::UnityEngine::RaycastHit2D>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* FindAll(::System::Predicate_1<::UnityEngine::RaycastHit2D>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::RaycastHit2D>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::RaycastHit2D>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::RaycastHit2D FindLast(::System::Predicate_1<::UnityEngine::RaycastHit2D>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::RaycastHit2D>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::RaycastHit2D> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::RaycastHit2D>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::RaycastHit2D  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::RaycastHit2D  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::RaycastHit2D>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::RaycastHit2D  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::RaycastHit2D>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::RaycastHit2D>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::RaycastHit2D>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::RaycastHit2D>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::RaycastHit2D>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4238 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*>  value) ;

static inline ::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Util::ObjectInitializationData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::Util::ObjectInitializationData Find(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* FindAll(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::Util::ObjectInitializationData FindLast(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::Util::ObjectInitializationData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4231 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::MultiplayerAvatarData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::MultiplayerAvatarData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::MultiplayerAvatarData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::MultiplayerAvatarData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::MultiplayerAvatarData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::MultiplayerAvatarData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::MultiplayerAvatarData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::MultiplayerAvatarData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::MultiplayerAvatarData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::MultiplayerAvatarData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::MultiplayerAvatarData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::MultiplayerAvatarData  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::MultiplayerAvatarData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::MultiplayerAvatarData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::MultiplayerAvatarData  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::MultiplayerAvatarData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::MultiplayerAvatarData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::MultiplayerAvatarData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::MultiplayerAvatarData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::MultiplayerAvatarData Find(::System::Predicate_1<::GlobalNamespace::MultiplayerAvatarData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>* FindAll(::System::Predicate_1<::GlobalNamespace::MultiplayerAvatarData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::MultiplayerAvatarData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::MultiplayerAvatarData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::MultiplayerAvatarData FindLast(::System::Predicate_1<::GlobalNamespace::MultiplayerAvatarData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::MultiplayerAvatarData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::MultiplayerAvatarData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::MultiplayerAvatarData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::MultiplayerAvatarData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::MultiplayerAvatarData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::MultiplayerAvatarData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::MultiplayerAvatarData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::MultiplayerAvatarData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::MultiplayerAvatarData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::MultiplayerAvatarData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::MultiplayerAvatarData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::MultiplayerAvatarData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::MultiplayerAvatarData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4227 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::MidiParser::MidiEvent> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::MidiParser::MidiEvent>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::MidiParser::MidiEvent  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::MidiParser::MidiEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::MidiParser::MidiEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::MidiParser::MidiEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::MidiParser::MidiEvent>*() noexcept;

constexpr void __set__items(::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*>  value) ;

constexpr ::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*>& __get__items() ;

constexpr ::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*>  value) ;

static inline ::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::MidiParser::MidiEvent>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::MidiParser::MidiEvent>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::MidiParser::MidiEvent>* New_ctor(::System::Collections::Generic::IEnumerable_1<::MidiParser::MidiEvent>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::MidiParser::MidiEvent>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::MidiParser::MidiEvent get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::MidiParser::MidiEvent  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::MidiParser::MidiEvent  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::MidiParser::MidiEvent  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::MidiParser::MidiEvent>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::MidiParser::MidiEvent>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::MidiParser::MidiEvent  item, ::System::Collections::Generic::IComparer_1<::MidiParser::MidiEvent>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::MidiParser::MidiEvent  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::MidiParser::MidiEvent  item, ::System::Collections::Generic::IComparer_1<::MidiParser::MidiEvent>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::MidiParser::MidiEvent  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::MidiParser::MidiEvent,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::MidiParser::MidiEvent>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::MidiParser::MidiEvent Find(::System::Predicate_1<::MidiParser::MidiEvent>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::MidiParser::MidiEvent>* FindAll(::System::Predicate_1<::MidiParser::MidiEvent>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::MidiParser::MidiEvent>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::MidiParser::MidiEvent>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::MidiParser::MidiEvent FindLast(::System::Predicate_1<::MidiParser::MidiEvent>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::MidiParser::MidiEvent>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::MidiParser::MidiEvent> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::MidiParser::MidiEvent>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::MidiParser::MidiEvent>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::MidiParser::MidiEvent  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::MidiParser::MidiEvent  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::MidiParser::MidiEvent>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::MidiParser::MidiEvent  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::MidiParser::MidiEvent>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::MidiParser::MidiEvent>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::MidiParser::MidiEvent>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::MidiParser::MidiEvent>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::MidiParser::MidiEvent>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4213 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::Newtonsoft::Json::JsonPosition> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::Newtonsoft::Json::JsonPosition>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::Newtonsoft::Json::JsonPosition  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

constexpr void __set__items(::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*>  value) ;

constexpr ::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*>& __get__items() ;

constexpr ::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*>  value) ;

static inline ::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>* New_ctor(::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::JsonPosition>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::JsonPosition>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Newtonsoft::Json::JsonPosition get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::Newtonsoft::Json::JsonPosition  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::Newtonsoft::Json::JsonPosition  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::Newtonsoft::Json::JsonPosition  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::JsonPosition>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Newtonsoft::Json::JsonPosition>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::Newtonsoft::Json::JsonPosition  item, ::System::Collections::Generic::IComparer_1<::Newtonsoft::Json::JsonPosition>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Newtonsoft::Json::JsonPosition  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Newtonsoft::Json::JsonPosition  item, ::System::Collections::Generic::IComparer_1<::Newtonsoft::Json::JsonPosition>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Newtonsoft::Json::JsonPosition  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::Newtonsoft::Json::JsonPosition,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::Newtonsoft::Json::JsonPosition>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Newtonsoft::Json::JsonPosition Find(::System::Predicate_1<::Newtonsoft::Json::JsonPosition>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>* FindAll(::System::Predicate_1<::Newtonsoft::Json::JsonPosition>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::Newtonsoft::Json::JsonPosition>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::Newtonsoft::Json::JsonPosition>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Newtonsoft::Json::JsonPosition FindLast(::System::Predicate_1<::Newtonsoft::Json::JsonPosition>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::Newtonsoft::Json::JsonPosition>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::Newtonsoft::Json::JsonPosition> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::JsonPosition>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Newtonsoft::Json::JsonPosition  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::Newtonsoft::Json::JsonPosition  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::JsonPosition>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::Newtonsoft::Json::JsonPosition  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::Newtonsoft::Json::JsonPosition>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::Newtonsoft::Json::JsonPosition>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::Newtonsoft::Json::JsonPosition>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::Newtonsoft::Json::JsonPosition>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::JsonPosition>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4212 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Timeline::IntervalTreeNode> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Timeline::IntervalTreeNode>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Timeline::IntervalTreeNode  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*>  value) ;

static inline ::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IntervalTreeNode>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IntervalTreeNode>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::IntervalTreeNode get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Timeline::IntervalTreeNode  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Timeline::IntervalTreeNode  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Timeline::IntervalTreeNode  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IntervalTreeNode>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Timeline::IntervalTreeNode>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Timeline::IntervalTreeNode  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::IntervalTreeNode>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Timeline::IntervalTreeNode  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Timeline::IntervalTreeNode  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::IntervalTreeNode>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Timeline::IntervalTreeNode  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Timeline::IntervalTreeNode,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Timeline::IntervalTreeNode>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Timeline::IntervalTreeNode Find(::System::Predicate_1<::UnityEngine::Timeline::IntervalTreeNode>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>* FindAll(::System::Predicate_1<::UnityEngine::Timeline::IntervalTreeNode>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Timeline::IntervalTreeNode>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Timeline::IntervalTreeNode>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Timeline::IntervalTreeNode FindLast(::System::Predicate_1<::UnityEngine::Timeline::IntervalTreeNode>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Timeline::IntervalTreeNode>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Timeline::IntervalTreeNode> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::IntervalTreeNode>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IntervalTreeNode>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Timeline::IntervalTreeNode  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Timeline::IntervalTreeNode  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IntervalTreeNode>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Timeline::IntervalTreeNode  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Timeline::IntervalTreeNode>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::IntervalTreeNode>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::IntervalTreeNode>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Timeline::IntervalTreeNode>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IntervalTreeNode>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4164 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::HoudiniEngineUnity::HAPI_PartInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::HoudiniEngineUnity::HAPI_PartInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::HoudiniEngineUnity::HAPI_PartInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*>  value) ;

constexpr ::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*>& __get__items() ;

constexpr ::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*>  value) ;

static inline ::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_PartInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_PartInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::HAPI_PartInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::HoudiniEngineUnity::HAPI_PartInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::HoudiniEngineUnity::HAPI_PartInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::HoudiniEngineUnity::HAPI_PartInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_PartInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_PartInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::HoudiniEngineUnity::HAPI_PartInfo  item, ::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::HAPI_PartInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::HoudiniEngineUnity::HAPI_PartInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::HoudiniEngineUnity::HAPI_PartInfo  item, ::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::HAPI_PartInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::HoudiniEngineUnity::HAPI_PartInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::HoudiniEngineUnity::HAPI_PartInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::HoudiniEngineUnity::HAPI_PartInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::HoudiniEngineUnity::HAPI_PartInfo Find(::System::Predicate_1<::HoudiniEngineUnity::HAPI_PartInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>* FindAll(::System::Predicate_1<::HoudiniEngineUnity::HAPI_PartInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::HoudiniEngineUnity::HAPI_PartInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::HoudiniEngineUnity::HAPI_PartInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::HoudiniEngineUnity::HAPI_PartInfo FindLast(::System::Predicate_1<::HoudiniEngineUnity::HAPI_PartInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::HoudiniEngineUnity::HAPI_PartInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::HoudiniEngineUnity::HAPI_PartInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::HAPI_PartInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HAPI_PartInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::HoudiniEngineUnity::HAPI_PartInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::HoudiniEngineUnity::HAPI_PartInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_PartInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::HoudiniEngineUnity::HAPI_PartInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::HoudiniEngineUnity::HAPI_PartInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::HAPI_PartInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::HoudiniEngineUnity::HAPI_PartInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::HoudiniEngineUnity::HAPI_PartInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_PartInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4151 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

constexpr void __set__items(::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*>  value) ;

constexpr ::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*>& __get__items() ;

constexpr ::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*>  value) ;

static inline ::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* New_ctor(::System::Collections::Generic::IEnumerable_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  item, ::System::Collections::Generic::IComparer_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  item, ::System::Collections::Generic::IComparer_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot Find(::System::Predicate_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* FindAll(::System::Predicate_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot FindLast(::System::Predicate_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4145 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::ComputedTransitionProperty> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::ComputedTransitionProperty>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::ComputedTransitionProperty  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::ComputedTransitionProperty get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::ComputedTransitionProperty  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::ComputedTransitionProperty  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::ComputedTransitionProperty  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::ComputedTransitionProperty  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::ComputedTransitionProperty  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::ComputedTransitionProperty  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::ComputedTransitionProperty  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::ComputedTransitionProperty,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::ComputedTransitionProperty Find(::System::Predicate_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::ComputedTransitionProperty FindLast(::System::Predicate_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::ComputedTransitionProperty> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::ComputedTransitionProperty>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ComputedTransitionProperty>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::ComputedTransitionProperty  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::ComputedTransitionProperty  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::ComputedTransitionProperty  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4136 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::BezierCurve> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::BezierCurve>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::BezierCurve  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::BezierCurve>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::BezierCurve>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BezierCurve>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::BezierCurve>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::BezierCurve>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::BezierCurve>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::BezierCurve get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::BezierCurve  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::BezierCurve  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::BezierCurve  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::BezierCurve>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::BezierCurve>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::BezierCurve  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::BezierCurve>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::BezierCurve  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::BezierCurve  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::BezierCurve>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::BezierCurve  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::BezierCurve,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::BezierCurve>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::BezierCurve Find(::System::Predicate_1<::GlobalNamespace::BezierCurve>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>* FindAll(::System::Predicate_1<::GlobalNamespace::BezierCurve>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::BezierCurve>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::BezierCurve>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::BezierCurve FindLast(::System::Predicate_1<::GlobalNamespace::BezierCurve>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::BezierCurve>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::BezierCurve> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::BezierCurve>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::BezierCurve  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::BezierCurve  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::BezierCurve>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::BezierCurve  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::BezierCurve>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::BezierCurve>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::BezierCurve>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::BezierCurve>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::BezierCurve>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4125 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::AnimatorClipInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::AnimatorClipInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::AnimatorClipInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*>  value) ;

constexpr ::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*>  value) ;

static inline ::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimatorClipInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimatorClipInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::AnimatorClipInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::AnimatorClipInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::AnimatorClipInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::AnimatorClipInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimatorClipInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::AnimatorClipInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::AnimatorClipInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::AnimatorClipInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::AnimatorClipInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::AnimatorClipInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::AnimatorClipInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::AnimatorClipInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::AnimatorClipInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::AnimatorClipInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::AnimatorClipInfo Find(::System::Predicate_1<::UnityEngine::AnimatorClipInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>* FindAll(::System::Predicate_1<::UnityEngine::AnimatorClipInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::AnimatorClipInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::AnimatorClipInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::AnimatorClipInfo FindLast(::System::Predicate_1<::UnityEngine::AnimatorClipInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::AnimatorClipInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::AnimatorClipInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::AnimatorClipInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::AnimatorClipInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::AnimatorClipInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::AnimatorClipInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimatorClipInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::AnimatorClipInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::AnimatorClipInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::AnimatorClipInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::AnimatorClipInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::AnimatorClipInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimatorClipInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 4082 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*>  value) ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*>& __get__items() ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*>  value) ;

static inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0> Find(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* FindAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0> FindLast(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3970 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*>  value) ;

static inline ::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo Find(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* FindAll(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo FindLast(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3621 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo Find(::System::Predicate_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo FindLast(::System::Predicate_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3620 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIVertex> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIVertex>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIVertex  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIVertex>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIVertex>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIVertex>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIVertex>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIVertex>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIVertex>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIVertex get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIVertex  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIVertex  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIVertex  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIVertex>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIVertex>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIVertex  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIVertex>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIVertex  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIVertex  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIVertex>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIVertex  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIVertex,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIVertex>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIVertex Find(::System::Predicate_1<::UnityEngine::UIVertex>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* FindAll(::System::Predicate_1<::UnityEngine::UIVertex>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIVertex>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIVertex>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIVertex FindLast(::System::Predicate_1<::UnityEngine::UIVertex>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIVertex>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIVertex> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIVertex>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIVertex  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIVertex  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIVertex>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIVertex  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIVertex>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIVertex>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIVertex>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIVertex>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIVertex>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3619 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UILineInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UILineInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UILineInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UILineInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UILineInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UILineInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UILineInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*>  value) ;

static inline ::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UILineInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UILineInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UILineInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UILineInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UILineInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UILineInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UILineInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UILineInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UILineInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UILineInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UILineInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UILineInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UILineInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UILineInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UILineInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UILineInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UILineInfo Find(::System::Predicate_1<::UnityEngine::UILineInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>* FindAll(::System::Predicate_1<::UnityEngine::UILineInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UILineInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UILineInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UILineInfo FindLast(::System::Predicate_1<::UnityEngine::UILineInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UILineInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UILineInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UILineInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UILineInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UILineInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UILineInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UILineInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UILineInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UILineInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UILineInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UILineInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UILineInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3618 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UICharInfo> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UICharInfo>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UICharInfo  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UICharInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UICharInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UICharInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UICharInfo>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*>  value) ;

static inline ::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UICharInfo>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UICharInfo>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UICharInfo get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UICharInfo  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UICharInfo  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UICharInfo  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UICharInfo>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UICharInfo>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UICharInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UICharInfo>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UICharInfo  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UICharInfo  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UICharInfo>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UICharInfo  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UICharInfo,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UICharInfo>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UICharInfo Find(::System::Predicate_1<::UnityEngine::UICharInfo>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>* FindAll(::System::Predicate_1<::UnityEngine::UICharInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UICharInfo>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UICharInfo>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UICharInfo FindLast(::System::Predicate_1<::UnityEngine::UICharInfo>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UICharInfo>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UICharInfo> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UICharInfo>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UICharInfo  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UICharInfo  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UICharInfo>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UICharInfo  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UICharInfo>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UICharInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UICharInfo>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UICharInfo>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UICharInfo>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3604 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ProBuilder::BezierPoint> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::BezierPoint>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ProBuilder::BezierPoint  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*>  value) ;

static inline ::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::BezierPoint>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::BezierPoint>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::BezierPoint get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ProBuilder::BezierPoint  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ProBuilder::BezierPoint  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ProBuilder::BezierPoint  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::BezierPoint>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::BezierPoint>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ProBuilder::BezierPoint  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::BezierPoint>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::BezierPoint  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::BezierPoint  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::BezierPoint>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::BezierPoint  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ProBuilder::BezierPoint,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ProBuilder::BezierPoint>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::BezierPoint Find(::System::Predicate_1<::UnityEngine::ProBuilder::BezierPoint>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>* FindAll(::System::Predicate_1<::UnityEngine::ProBuilder::BezierPoint>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ProBuilder::BezierPoint>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ProBuilder::BezierPoint>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::BezierPoint FindLast(::System::Predicate_1<::UnityEngine::ProBuilder::BezierPoint>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ProBuilder::BezierPoint>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::BezierPoint> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::BezierPoint>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::BezierPoint>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::BezierPoint  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ProBuilder::BezierPoint  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::BezierPoint>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ProBuilder::BezierPoint  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ProBuilder::BezierPoint>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::BezierPoint>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::BezierPoint>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ProBuilder::BezierPoint>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::BezierPoint>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3591 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::ArraySegment_1<uint8_t>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::ArraySegment_1<uint8_t>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::ArraySegment_1<uint8_t>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*>  value) ;

constexpr ::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*>& __get__items() ;

constexpr ::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*>  value) ;

static inline ::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::ArraySegment_1<uint8_t>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::ArraySegment_1<uint8_t>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ArraySegment_1<uint8_t> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::ArraySegment_1<uint8_t>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::ArraySegment_1<uint8_t>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::ArraySegment_1<uint8_t>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::ArraySegment_1<uint8_t>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ArraySegment_1<uint8_t>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::ArraySegment_1<uint8_t>  item, ::System::Collections::Generic::IComparer_1<::System::ArraySegment_1<uint8_t>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ArraySegment_1<uint8_t>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::ArraySegment_1<uint8_t>  item, ::System::Collections::Generic::IComparer_1<::System::ArraySegment_1<uint8_t>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ArraySegment_1<uint8_t>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::ArraySegment_1<uint8_t>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::ArraySegment_1<uint8_t>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ArraySegment_1<uint8_t> Find(::System::Predicate_1<::System::ArraySegment_1<uint8_t>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>* FindAll(::System::Predicate_1<::System::ArraySegment_1<uint8_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::ArraySegment_1<uint8_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::ArraySegment_1<uint8_t>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::ArraySegment_1<uint8_t> FindLast(::System::Predicate_1<::System::ArraySegment_1<uint8_t>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::ArraySegment_1<uint8_t>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::ArraySegment_1<uint8_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ArraySegment_1<uint8_t>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::ArraySegment_1<uint8_t>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ArraySegment_1<uint8_t>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::ArraySegment_1<uint8_t>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::ArraySegment_1<uint8_t>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::ArraySegment_1<uint8_t>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::ArraySegment_1<uint8_t>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::ArraySegment_1<uint8_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::ArraySegment_1<uint8_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::ArraySegment_1<uint8_t>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::ArraySegment_1<uint8_t>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3386 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue Find(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue FindLast(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3372 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ProBuilder::Triangle> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::Triangle>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ProBuilder::Triangle  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*>  value) ;

static inline ::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Triangle>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Triangle>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::Triangle get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ProBuilder::Triangle  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ProBuilder::Triangle  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ProBuilder::Triangle  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Triangle>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::Triangle>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ProBuilder::Triangle  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::Triangle>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::Triangle  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::Triangle  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::Triangle>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::Triangle  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ProBuilder::Triangle,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ProBuilder::Triangle>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::Triangle Find(::System::Predicate_1<::UnityEngine::ProBuilder::Triangle>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>* FindAll(::System::Predicate_1<::UnityEngine::ProBuilder::Triangle>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ProBuilder::Triangle>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ProBuilder::Triangle>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::Triangle FindLast(::System::Predicate_1<::UnityEngine::ProBuilder::Triangle>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ProBuilder::Triangle>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::Triangle> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::Triangle>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Triangle>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::Triangle  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ProBuilder::Triangle  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Triangle>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ProBuilder::Triangle  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ProBuilder::Triangle>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::Triangle>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::Triangle>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ProBuilder::Triangle>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Triangle>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3368 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::TimeValue> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::TimeValue>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::TimeValue  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TimeValue>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TimeValue>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::TimeValue get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::TimeValue  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::TimeValue  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::TimeValue  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TimeValue>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::TimeValue>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::TimeValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::TimeValue>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::TimeValue  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::TimeValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::TimeValue>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::TimeValue  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::TimeValue,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::TimeValue>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::TimeValue Find(::System::Predicate_1<::UnityEngine::UIElements::TimeValue>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::TimeValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::TimeValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::TimeValue>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::TimeValue FindLast(::System::Predicate_1<::UnityEngine::UIElements::TimeValue>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::TimeValue>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::TimeValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::TimeValue>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::TimeValue>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::TimeValue  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::TimeValue  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TimeValue>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::TimeValue  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::TimeValue>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::TimeValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::TimeValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::TimeValue>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TimeValue>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3345 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Rect> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Rect>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Rect  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Rect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Rect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rect>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rect>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*>  value) ;

static inline ::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Rect>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Rect>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Rect>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rect>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rect>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rect get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Rect  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Rect  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Rect  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rect>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Rect>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Rect  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Rect>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Rect  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Rect  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Rect>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Rect  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Rect,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Rect>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Rect Find(::System::Predicate_1<::UnityEngine::Rect>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Rect>* FindAll(::System::Predicate_1<::UnityEngine::Rect>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Rect>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Rect>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Rect FindLast(::System::Predicate_1<::UnityEngine::Rect>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Rect>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Rect> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rect>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Rect>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Rect  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Rect  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rect>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Rect  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Rect>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Rect>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Rect>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Rect>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rect>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3342 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Quaternion> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Quaternion>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Quaternion  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Quaternion>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Quaternion>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Quaternion>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Quaternion>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*>  value) ;

static inline ::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Quaternion>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Quaternion>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Quaternion get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Quaternion  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Quaternion  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Quaternion  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Quaternion>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Quaternion>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Quaternion  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Quaternion>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Quaternion  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Quaternion  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Quaternion>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Quaternion  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Quaternion,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Quaternion>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Quaternion Find(::System::Predicate_1<::UnityEngine::Quaternion>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>* FindAll(::System::Predicate_1<::UnityEngine::Quaternion>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Quaternion>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Quaternion>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Quaternion FindLast(::System::Predicate_1<::UnityEngine::Quaternion>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Quaternion>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Quaternion> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Quaternion>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Quaternion>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Quaternion  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Quaternion  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Quaternion>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Quaternion  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Quaternion>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Quaternion>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Quaternion>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Quaternion>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Quaternion>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3333 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Playables::Playable> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Playables::Playable>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Playables::Playable  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Playables::Playable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::Playable>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Playables::Playable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Playables::Playable>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*>  value) ;

static inline ::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::Playable>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::Playable>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Playables::Playable get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Playables::Playable  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Playables::Playable  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Playables::Playable  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::Playable>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Playables::Playable>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Playables::Playable  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Playables::Playable>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Playables::Playable  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Playables::Playable  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Playables::Playable>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Playables::Playable  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Playables::Playable,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Playables::Playable>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Playables::Playable Find(::System::Predicate_1<::UnityEngine::Playables::Playable>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* FindAll(::System::Predicate_1<::UnityEngine::Playables::Playable>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Playables::Playable>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Playables::Playable>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Playables::Playable FindLast(::System::Predicate_1<::UnityEngine::Playables::Playable>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Playables::Playable>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Playables::Playable> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::Playable>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Playables::Playable  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Playables::Playable  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::Playable>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Playables::Playable  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Playables::Playable>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Playables::Playable>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Playables::Playable>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Playables::Playable>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::Playable>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3316 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Matrix4x4> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Matrix4x4>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Matrix4x4  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Matrix4x4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Matrix4x4>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Matrix4x4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Matrix4x4>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*>  value) ;

static inline ::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Matrix4x4>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Matrix4x4>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Matrix4x4 get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Matrix4x4  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Matrix4x4  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Matrix4x4  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Matrix4x4>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Matrix4x4>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Matrix4x4  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Matrix4x4>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Matrix4x4  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Matrix4x4  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Matrix4x4>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Matrix4x4  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Matrix4x4,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Matrix4x4>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Matrix4x4 Find(::System::Predicate_1<::UnityEngine::Matrix4x4>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* FindAll(::System::Predicate_1<::UnityEngine::Matrix4x4>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Matrix4x4>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Matrix4x4>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Matrix4x4 FindLast(::System::Predicate_1<::UnityEngine::Matrix4x4>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Matrix4x4>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Matrix4x4> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Matrix4x4>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Matrix4x4>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Matrix4x4  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Matrix4x4  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Matrix4x4>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Matrix4x4  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Matrix4x4>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Matrix4x4>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Matrix4x4>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Matrix4x4>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Matrix4x4>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3314 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::ManipulatorActivationFilter> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::ManipulatorActivationFilter>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::ManipulatorActivationFilter  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::ManipulatorActivationFilter get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::ManipulatorActivationFilter  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::ManipulatorActivationFilter  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::ManipulatorActivationFilter  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::ManipulatorActivationFilter  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::ManipulatorActivationFilter  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::ManipulatorActivationFilter  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::ManipulatorActivationFilter  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::ManipulatorActivationFilter,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::ManipulatorActivationFilter Find(::System::Predicate_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::ManipulatorActivationFilter FindLast(::System::Predicate_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::ManipulatorActivationFilter> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::ManipulatorActivationFilter  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::ManipulatorActivationFilter  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::ManipulatorActivationFilter  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3301 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Layouts::InputDeviceDescription get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Layouts::InputDeviceDescription Find(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Layouts::InputDeviceDescription FindLast(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Layouts::InputDeviceDescription> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3291 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::TextCore::GlyphRect> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::TextCore::GlyphRect>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::TextCore::GlyphRect  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*>  value) ;

constexpr ::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*>  value) ;

static inline ::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::GlyphRect>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::GlyphRect>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::GlyphRect get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::TextCore::GlyphRect  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::TextCore::GlyphRect  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::TextCore::GlyphRect  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::GlyphRect>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::TextCore::GlyphRect>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::TextCore::GlyphRect  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::GlyphRect>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::TextCore::GlyphRect  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::TextCore::GlyphRect  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::GlyphRect>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::TextCore::GlyphRect  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::TextCore::GlyphRect,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::TextCore::GlyphRect>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::TextCore::GlyphRect Find(::System::Predicate_1<::UnityEngine::TextCore::GlyphRect>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* FindAll(::System::Predicate_1<::UnityEngine::TextCore::GlyphRect>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::TextCore::GlyphRect>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::TextCore::GlyphRect>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::TextCore::GlyphRect FindLast(::System::Predicate_1<::UnityEngine::TextCore::GlyphRect>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::TextCore::GlyphRect>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::TextCore::GlyphRect> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::GlyphRect>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::TextCore::GlyphRect  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::TextCore::GlyphRect  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::GlyphRect>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::TextCore::GlyphRect  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::TextCore::GlyphRect>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::GlyphRect>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::GlyphRect>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::TextCore::GlyphRect>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::GlyphRect>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3290 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*>  value) ;

constexpr ::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*>  value) ;

static inline ::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord Find(::System::Predicate_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* FindAll(::System::Predicate_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord FindLast(::System::Predicate_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3282 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::EasingFunction> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::EasingFunction>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::EasingFunction  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::EasingFunction>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::EasingFunction>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::EasingFunction get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::EasingFunction  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::EasingFunction  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::EasingFunction  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::EasingFunction>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::EasingFunction>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::EasingFunction  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::EasingFunction>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::EasingFunction  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::EasingFunction  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::EasingFunction>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::EasingFunction  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::EasingFunction,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::EasingFunction>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::EasingFunction Find(::System::Predicate_1<::UnityEngine::UIElements::EasingFunction>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::EasingFunction>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::EasingFunction>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::EasingFunction>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::EasingFunction FindLast(::System::Predicate_1<::UnityEngine::UIElements::EasingFunction>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::EasingFunction>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::EasingFunction> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::EasingFunction>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::EasingFunction>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::EasingFunction  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::EasingFunction  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::EasingFunction>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::EasingFunction  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::EasingFunction>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::EasingFunction>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::EasingFunction>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::EasingFunction>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::EasingFunction>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3131 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::Zenject::TypeValuePair> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::Zenject::TypeValuePair>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::Zenject::TypeValuePair  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::TypeValuePair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::TypeValuePair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::TypeValuePair>*() noexcept;

constexpr void __set__items(::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*>  value) ;

constexpr ::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*>& __get__items() ;

constexpr ::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*>  value) ;

static inline ::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* New_ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::TypeValuePair get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::Zenject::TypeValuePair  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::Zenject::TypeValuePair  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::Zenject::TypeValuePair  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::TypeValuePair>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::Zenject::TypeValuePair  item, ::System::Collections::Generic::IComparer_1<::Zenject::TypeValuePair>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::TypeValuePair  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::TypeValuePair  item, ::System::Collections::Generic::IComparer_1<::Zenject::TypeValuePair>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::TypeValuePair  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::Zenject::TypeValuePair,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::Zenject::TypeValuePair>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::TypeValuePair Find(::System::Predicate_1<::Zenject::TypeValuePair>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* FindAll(::System::Predicate_1<::Zenject::TypeValuePair>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::Zenject::TypeValuePair>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::Zenject::TypeValuePair>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::TypeValuePair FindLast(::System::Predicate_1<::Zenject::TypeValuePair>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::Zenject::TypeValuePair>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::Zenject::TypeValuePair> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::TypeValuePair>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::TypeValuePair  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::Zenject::TypeValuePair  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::Zenject::TypeValuePair  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::Zenject::TypeValuePair>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::Zenject::TypeValuePair>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::Zenject::TypeValuePair>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::Zenject::TypeValuePair>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3121 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::SceneManagement::Scene> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::SceneManagement::Scene>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::SceneManagement::Scene  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*>  value) ;

constexpr ::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*>  value) ;

static inline ::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::SceneManagement::Scene>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::SceneManagement::Scene>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::SceneManagement::Scene get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::SceneManagement::Scene  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::SceneManagement::Scene  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::SceneManagement::Scene  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::SceneManagement::Scene>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::SceneManagement::Scene>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::SceneManagement::Scene  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::SceneManagement::Scene>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::SceneManagement::Scene  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::SceneManagement::Scene  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::SceneManagement::Scene>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::SceneManagement::Scene  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::SceneManagement::Scene,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::SceneManagement::Scene>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::SceneManagement::Scene Find(::System::Predicate_1<::UnityEngine::SceneManagement::Scene>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>* FindAll(::System::Predicate_1<::UnityEngine::SceneManagement::Scene>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::SceneManagement::Scene>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::SceneManagement::Scene>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::SceneManagement::Scene FindLast(::System::Predicate_1<::UnityEngine::SceneManagement::Scene>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::SceneManagement::Scene>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::SceneManagement::Scene> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::SceneManagement::Scene>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::SceneManagement::Scene>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::SceneManagement::Scene  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::SceneManagement::Scene  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::SceneManagement::Scene>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::SceneManagement::Scene  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::SceneManagement::Scene>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::SceneManagement::Scene>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::SceneManagement::Scene>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::SceneManagement::Scene>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::SceneManagement::Scene>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3116 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Playables::PlayableBinding> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Playables::PlayableBinding>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Playables::PlayableBinding  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*>  value) ;

static inline ::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Playables::PlayableBinding get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Playables::PlayableBinding  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Playables::PlayableBinding  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Playables::PlayableBinding  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Playables::PlayableBinding>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Playables::PlayableBinding  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Playables::PlayableBinding>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Playables::PlayableBinding  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Playables::PlayableBinding  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Playables::PlayableBinding>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Playables::PlayableBinding  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Playables::PlayableBinding,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Playables::PlayableBinding>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Playables::PlayableBinding Find(::System::Predicate_1<::UnityEngine::Playables::PlayableBinding>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>* FindAll(::System::Predicate_1<::UnityEngine::Playables::PlayableBinding>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Playables::PlayableBinding>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Playables::PlayableBinding>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Playables::PlayableBinding FindLast(::System::Predicate_1<::UnityEngine::Playables::PlayableBinding>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Playables::PlayableBinding>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Playables::PlayableBinding> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableBinding>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Playables::PlayableBinding  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Playables::PlayableBinding  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Playables::PlayableBinding  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Playables::PlayableBinding>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Playables::PlayableBinding>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Playables::PlayableBinding>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Playables::PlayableBinding>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3114 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::Utilities::NamedValue> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::NamedValue>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::Utilities::NamedValue  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::NamedValue get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::NamedValue  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::Utilities::NamedValue  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::Utilities::NamedValue  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::Utilities::NamedValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::NamedValue  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::NamedValue  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::NamedValue  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::Utilities::NamedValue,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::NamedValue Find(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::NamedValue FindLast(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::NamedValue> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::NamedValue>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NamedValue>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::NamedValue  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::NamedValue  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::Utilities::NamedValue  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3113 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::NameAndParameters>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::Utilities::NameAndParameters  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::NameAndParameters get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::NameAndParameters  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::Utilities::NameAndParameters  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::Utilities::NameAndParameters  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::Utilities::NameAndParameters  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::NameAndParameters  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::NameAndParameters  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::NameAndParameters  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::Utilities::NameAndParameters,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::NameAndParameters Find(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::NameAndParameters FindLast(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::NameAndParameters> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::NameAndParameters  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::NameAndParameters  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::Utilities::NameAndParameters  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3105 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::InputBinding> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::InputBinding>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::InputBinding  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::InputBinding get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::InputBinding  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::InputBinding  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::InputBinding  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::InputBinding>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::InputBinding  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::InputBinding>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::InputBinding  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::InputBinding  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::InputBinding>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::InputBinding  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::InputBinding,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::InputBinding>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::InputBinding Find(::System::Predicate_1<::UnityEngine::InputSystem::InputBinding>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::InputBinding>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::InputBinding>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::InputBinding>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::InputBinding FindLast(::System::Predicate_1<::UnityEngine::InputSystem::InputBinding>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::InputBinding>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::InputBinding> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputBinding>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::InputBinding  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::InputBinding  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::InputBinding  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::InputBinding>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::InputBinding>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::InputBinding>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::InputBinding>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3081 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::Zenject::BindingId> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::Zenject::BindingId>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::Zenject::BindingId  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::BindingId>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::BindingId>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::BindingId>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::BindingId>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::BindingId>*() noexcept;

constexpr void __set__items(::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*>  value) ;

constexpr ::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*>& __get__items() ;

constexpr ::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*>  value) ;

static inline ::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::Zenject::BindingId>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::Zenject::BindingId>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::Zenject::BindingId>* New_ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::BindingId>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::Zenject::BindingId>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::BindingId get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::Zenject::BindingId  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::Zenject::BindingId  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::Zenject::BindingId  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::Zenject::BindingId>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::BindingId>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::Zenject::BindingId  item, ::System::Collections::Generic::IComparer_1<::Zenject::BindingId>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::BindingId  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::Zenject::BindingId  item, ::System::Collections::Generic::IComparer_1<::Zenject::BindingId>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::BindingId  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::Zenject::BindingId,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::Zenject::BindingId>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::BindingId Find(::System::Predicate_1<::Zenject::BindingId>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::BindingId>* FindAll(::System::Predicate_1<::Zenject::BindingId>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::Zenject::BindingId>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::Zenject::BindingId>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::Zenject::BindingId FindLast(::System::Predicate_1<::Zenject::BindingId>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::Zenject::BindingId>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::Zenject::BindingId> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::BindingId>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::Zenject::BindingId>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::BindingId  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::Zenject::BindingId  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::Zenject::BindingId>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::Zenject::BindingId  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::Zenject::BindingId>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::Zenject::BindingId>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::Zenject::BindingId>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::Zenject::BindingId>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::Zenject::BindingId>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3058 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  value) ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>& __get__items() ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  value) ;

static inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> Find(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* FindAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> FindLast(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 3057 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*>  value) ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*>& __get__items() ;

constexpr ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*>  value) ;

static inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  item, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> Find(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* FindAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> FindLast(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2738 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*>  value) ;

constexpr ::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*>& __get__items() ;

constexpr ::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*>  value) ;

static inline ::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Text::RegularExpressions::__RegexCharClass__SingleRange get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  item, ::System::Collections::Generic::IComparer_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  item, ::System::Collections::Generic::IComparer_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Text::RegularExpressions::__RegexCharClass__SingleRange Find(::System::Predicate_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* FindAll(::System::Predicate_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Text::RegularExpressions::__RegexCharClass__SingleRange FindLast(::System::Predicate_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Text::RegularExpressions::__RegexCharClass__SingleRange> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2711 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::TimeSpan> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::TimeSpan>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::TimeSpan  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::TimeSpan>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::TimeSpan>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::TimeSpan>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::TimeSpan>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::TimeSpan>*() noexcept;

constexpr void __set__items(::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*>  value) ;

constexpr ::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*>& __get__items() ;

constexpr ::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*>  value) ;

static inline ::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::TimeSpan>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::TimeSpan>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::TimeSpan>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::TimeSpan>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::TimeSpan>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::TimeSpan get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::TimeSpan  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::TimeSpan  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::TimeSpan  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::TimeSpan>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::TimeSpan>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::TimeSpan  item, ::System::Collections::Generic::IComparer_1<::System::TimeSpan>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::TimeSpan  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::TimeSpan  item, ::System::Collections::Generic::IComparer_1<::System::TimeSpan>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::TimeSpan  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::TimeSpan,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::TimeSpan>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::TimeSpan Find(::System::Predicate_1<::System::TimeSpan>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::TimeSpan>* FindAll(::System::Predicate_1<::System::TimeSpan>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::TimeSpan>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::TimeSpan>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::TimeSpan FindLast(::System::Predicate_1<::System::TimeSpan>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::TimeSpan>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::TimeSpan> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::TimeSpan>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::TimeSpan>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::TimeSpan  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::TimeSpan  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::TimeSpan>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::TimeSpan  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::TimeSpan>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::TimeSpan>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::TimeSpan>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::TimeSpan>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::TimeSpan>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2710 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::Utilities::Substring> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::Substring>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::Utilities::Substring  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::Substring get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::Substring  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::Utilities::Substring  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::Utilities::Substring  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::Substring>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::Utilities::Substring  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::Substring>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::Substring  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::Substring  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::Substring>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::Substring  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::Utilities::Substring,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::Substring>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::Substring Find(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::Substring>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::Substring>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::Substring>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::Utilities::Substring>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::Substring FindLast(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::Substring>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::Utilities::Substring>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::Substring> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::Substring>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::Substring>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::Substring  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::Substring  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::Utilities::Substring  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::Substring>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::Substring>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::Substring>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::Utilities::Substring>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2707 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<int8_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<int8_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<int8_t,::Array<int8_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) int8_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<int8_t>"
constexpr operator  ::System::Collections::Generic::IList_1<int8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<int8_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<int8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<int8_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<int8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<int8_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<int8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<int8_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<int8_t>*() noexcept;

constexpr void __set__items(::ArrayW<int8_t,::Array<int8_t>*>  value) ;

constexpr ::ArrayW<int8_t,::Array<int8_t>*>& __get__items() ;

constexpr ::ArrayW<int8_t,::Array<int8_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<int8_t,::Array<int8_t>*>  value) ;

static inline ::ArrayW<int8_t,::Array<int8_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<int8_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<int8_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<int8_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<int8_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<int8_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int8_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, int8_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(int8_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(int8_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<int8_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<int8_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, int8_t  item, ::System::Collections::Generic::IComparer_1<int8_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int8_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int8_t  item, ::System::Collections::Generic::IComparer_1<int8_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(int8_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<int8_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<int8_t,::Array<int8_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<int8_t,::Array<int8_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<int8_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline int8_t Find(::System::Predicate_1<int8_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<int8_t>* FindAll(::System::Predicate_1<int8_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<int8_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<int8_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline int8_t FindLast(::System::Predicate_1<int8_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<int8_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<int8_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<int8_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<int8_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(int8_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, int8_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<int8_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(int8_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<int8_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<int8_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<int8_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<int8_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<int8_t,::Array<int8_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<int8_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2704 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<double_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<double_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<double_t,::Array<double_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) double_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<double_t>"
constexpr operator  ::System::Collections::Generic::IList_1<double_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<double_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<double_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<double_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<double_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<double_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<double_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<double_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<double_t>*() noexcept;

constexpr void __set__items(::ArrayW<double_t,::Array<double_t>*>  value) ;

constexpr ::ArrayW<double_t,::Array<double_t>*>& __get__items() ;

constexpr ::ArrayW<double_t,::Array<double_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<double_t,::Array<double_t>*>  value) ;

static inline ::ArrayW<double_t,::Array<double_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<double_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<double_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<double_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<double_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<double_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline double_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, double_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(double_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(double_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<double_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<double_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, double_t  item, ::System::Collections::Generic::IComparer_1<double_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(double_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(double_t  item, ::System::Collections::Generic::IComparer_1<double_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(double_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<double_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<double_t,::Array<double_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<double_t,::Array<double_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<double_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline double_t Find(::System::Predicate_1<double_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<double_t>* FindAll(::System::Predicate_1<double_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<double_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<double_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline double_t FindLast(::System::Predicate_1<double_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<double_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<double_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<double_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<double_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(double_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, double_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<double_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(double_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<double_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<double_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<double_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<double_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<double_t,::Array<double_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<double_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2703 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Decimal> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Decimal>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Decimal,::Array<::System::Decimal>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Decimal  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Decimal>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Decimal>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Decimal>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Decimal>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Decimal>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Decimal,::Array<::System::Decimal>*>  value) ;

constexpr ::ArrayW<::System::Decimal,::Array<::System::Decimal>*>& __get__items() ;

constexpr ::ArrayW<::System::Decimal,::Array<::System::Decimal>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Decimal,::Array<::System::Decimal>*>  value) ;

static inline ::ArrayW<::System::Decimal,::Array<::System::Decimal>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Decimal>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Decimal>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Decimal>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Decimal>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Decimal>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Decimal get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Decimal  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Decimal  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Decimal  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Decimal>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Decimal>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Decimal  item, ::System::Collections::Generic::IComparer_1<::System::Decimal>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Decimal  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Decimal  item, ::System::Collections::Generic::IComparer_1<::System::Decimal>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Decimal  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Decimal,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Decimal,::Array<::System::Decimal>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Decimal,::Array<::System::Decimal>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Decimal>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Decimal Find(::System::Predicate_1<::System::Decimal>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Decimal>* FindAll(::System::Predicate_1<::System::Decimal>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Decimal>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Decimal>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Decimal FindLast(::System::Predicate_1<::System::Decimal>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Decimal>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Decimal> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Decimal>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Decimal>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Decimal  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Decimal  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Decimal>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Decimal  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Decimal>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Decimal>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Decimal>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Decimal>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Decimal,::Array<::System::Decimal>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Decimal>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2702 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::DateTimeOffset> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::DateTimeOffset>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::DateTimeOffset  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::DateTimeOffset>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::DateTimeOffset>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::DateTimeOffset>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::DateTimeOffset>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::DateTimeOffset>*() noexcept;

constexpr void __set__items(::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*>  value) ;

constexpr ::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*>& __get__items() ;

constexpr ::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*>  value) ;

static inline ::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::DateTimeOffset>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::DateTimeOffset>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::DateTimeOffset>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::DateTimeOffset>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::DateTimeOffset>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::DateTimeOffset get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::DateTimeOffset  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::DateTimeOffset  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::DateTimeOffset  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::DateTimeOffset>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::DateTimeOffset>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::DateTimeOffset  item, ::System::Collections::Generic::IComparer_1<::System::DateTimeOffset>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::DateTimeOffset  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::DateTimeOffset  item, ::System::Collections::Generic::IComparer_1<::System::DateTimeOffset>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::DateTimeOffset  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::DateTimeOffset,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::DateTimeOffset>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::DateTimeOffset Find(::System::Predicate_1<::System::DateTimeOffset>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::DateTimeOffset>* FindAll(::System::Predicate_1<::System::DateTimeOffset>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::DateTimeOffset>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::DateTimeOffset>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::DateTimeOffset FindLast(::System::Predicate_1<::System::DateTimeOffset>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::DateTimeOffset>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::DateTimeOffset> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::DateTimeOffset>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::DateTimeOffset>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::DateTimeOffset  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::DateTimeOffset  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::DateTimeOffset>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::DateTimeOffset  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::DateTimeOffset>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::DateTimeOffset>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::DateTimeOffset>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::DateTimeOffset>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::DateTimeOffset>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2701 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::DateTime> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::DateTime>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::DateTime,::Array<::System::DateTime>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::DateTime  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::DateTime>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::DateTime>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::DateTime>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::DateTime>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::DateTime>*() noexcept;

constexpr void __set__items(::ArrayW<::System::DateTime,::Array<::System::DateTime>*>  value) ;

constexpr ::ArrayW<::System::DateTime,::Array<::System::DateTime>*>& __get__items() ;

constexpr ::ArrayW<::System::DateTime,::Array<::System::DateTime>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::DateTime,::Array<::System::DateTime>*>  value) ;

static inline ::ArrayW<::System::DateTime,::Array<::System::DateTime>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::DateTime>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::DateTime>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::DateTime>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::DateTime>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::DateTime>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::DateTime get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::DateTime  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::DateTime  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::DateTime  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::DateTime>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::DateTime>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::DateTime  item, ::System::Collections::Generic::IComparer_1<::System::DateTime>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::DateTime  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::DateTime  item, ::System::Collections::Generic::IComparer_1<::System::DateTime>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::DateTime  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::DateTime,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::DateTime,::Array<::System::DateTime>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::DateTime,::Array<::System::DateTime>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::DateTime>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::DateTime Find(::System::Predicate_1<::System::DateTime>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::DateTime>* FindAll(::System::Predicate_1<::System::DateTime>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::DateTime>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::DateTime>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::DateTime FindLast(::System::Predicate_1<::System::DateTime>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::DateTime>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::DateTime> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::DateTime>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::DateTime>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::DateTime  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::DateTime  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::DateTime>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::DateTime  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::DateTime>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::DateTime>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::DateTime>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::DateTime>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::DateTime,::Array<::System::DateTime>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::DateTime>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2598 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::Utilities::InternedString> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::InternedString>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::Utilities::InternedString  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::InternedString get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::InternedString  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::Utilities::InternedString  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::Utilities::InternedString  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::InternedString>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::Utilities::InternedString  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::InternedString>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::InternedString  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::Utilities::InternedString  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::InternedString>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::InternedString  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::Utilities::InternedString,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::InternedString>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::InternedString Find(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::InternedString>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::InternedString>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::InternedString>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::Utilities::InternedString>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::Utilities::InternedString FindLast(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::InternedString>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::Utilities::InternedString>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::Utilities::InternedString> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::InternedString>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Utilities::InternedString>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::InternedString  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::InternedString  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::Utilities::InternedString  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::Utilities::InternedString>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::InternedString>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::Utilities::InternedString>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::Utilities::InternedString>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2593 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ProBuilder::EdgeLookup> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::EdgeLookup>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ProBuilder::EdgeLookup  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*>  value) ;

static inline ::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::EdgeLookup>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::EdgeLookup>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::EdgeLookup get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ProBuilder::EdgeLookup  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ProBuilder::EdgeLookup  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ProBuilder::EdgeLookup  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::EdgeLookup>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::EdgeLookup>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ProBuilder::EdgeLookup  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::EdgeLookup>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::EdgeLookup  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::EdgeLookup  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::EdgeLookup>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::EdgeLookup  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ProBuilder::EdgeLookup,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ProBuilder::EdgeLookup>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::EdgeLookup Find(::System::Predicate_1<::UnityEngine::ProBuilder::EdgeLookup>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>* FindAll(::System::Predicate_1<::UnityEngine::ProBuilder::EdgeLookup>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ProBuilder::EdgeLookup>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ProBuilder::EdgeLookup>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::EdgeLookup FindLast(::System::Predicate_1<::UnityEngine::ProBuilder::EdgeLookup>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ProBuilder::EdgeLookup>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::EdgeLookup> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::EdgeLookup>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::EdgeLookup>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::EdgeLookup  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ProBuilder::EdgeLookup  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::EdgeLookup>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ProBuilder::EdgeLookup  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ProBuilder::EdgeLookup>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::EdgeLookup>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::EdgeLookup>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ProBuilder::EdgeLookup>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::EdgeLookup>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2592 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ProBuilder::Edge> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::Edge>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ProBuilder::Edge  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*>  value) ;

static inline ::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::Edge get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ProBuilder::Edge  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ProBuilder::Edge  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ProBuilder::Edge  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ProBuilder::Edge  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::Edge>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::Edge  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::Edge  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::Edge>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::Edge  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ProBuilder::Edge,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ProBuilder::Edge>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::Edge Find(::System::Predicate_1<::UnityEngine::ProBuilder::Edge>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>* FindAll(::System::Predicate_1<::UnityEngine::ProBuilder::Edge>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ProBuilder::Edge>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ProBuilder::Edge>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::Edge FindLast(::System::Predicate_1<::UnityEngine::ProBuilder::Edge>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ProBuilder::Edge>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::Edge> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::Edge>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::Edge>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::Edge  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ProBuilder::Edge  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ProBuilder::Edge  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ProBuilder::Edge>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::Edge>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::Edge>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ProBuilder::Edge>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1698 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry Find(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry FindLast(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1693 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::StylePropertyName> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StylePropertyName>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::StylePropertyName  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StylePropertyName>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StylePropertyName>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StylePropertyName get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::StylePropertyName  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::StylePropertyName  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::StylePropertyName  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StylePropertyName>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StylePropertyName>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::StylePropertyName  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StylePropertyName>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StylePropertyName  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StylePropertyName  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StylePropertyName>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StylePropertyName  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::StylePropertyName,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::StylePropertyName>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StylePropertyName Find(::System::Predicate_1<::UnityEngine::UIElements::StylePropertyName>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::StylePropertyName>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::StylePropertyName>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::StylePropertyName>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StylePropertyName FindLast(::System::Predicate_1<::UnityEngine::UIElements::StylePropertyName>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::StylePropertyName>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StylePropertyName> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StylePropertyName>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StylePropertyName>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StylePropertyName  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::StylePropertyName  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StylePropertyName>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::StylePropertyName  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::StylePropertyName>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StylePropertyName>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StylePropertyName>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::StylePropertyName>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StylePropertyName>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1058 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

constexpr void __set__items(::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*>  value) ;

constexpr ::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*>& __get__items() ;

constexpr ::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*>  value) ;

static inline ::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* New_ctor(::System::Collections::Generic::IEnumerable_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  item, ::System::Collections::Generic::IComparer_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  item, ::System::Collections::Generic::IComparer_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult Find(::System::Predicate_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* FindAll(::System::Predicate_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult FindLast(::System::Predicate_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1057 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData Find(::System::Predicate_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData FindLast(::System::Predicate_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1055 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*>  value) ;

static inline ::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry Find(::System::Predicate_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* FindAll(::System::Predicate_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry FindLast(::System::Predicate_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1054 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__OVRRaycaster__RaycastHit>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::__OVRRaycaster__RaycastHit  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRRaycaster__RaycastHit get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::__OVRRaycaster__RaycastHit  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::__OVRRaycaster__RaycastHit  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::__OVRRaycaster__RaycastHit  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::__OVRRaycaster__RaycastHit  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__OVRRaycaster__RaycastHit  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::__OVRRaycaster__RaycastHit  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__OVRRaycaster__RaycastHit  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::__OVRRaycaster__RaycastHit,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__OVRRaycaster__RaycastHit Find(::System::Predicate_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* FindAll(::System::Predicate_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::__OVRRaycaster__RaycastHit FindLast(::System::Predicate_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::__OVRRaycaster__RaycastHit> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__OVRRaycaster__RaycastHit  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::__OVRRaycaster__RaycastHit  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::__OVRRaycaster__RaycastHit  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1051 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*>  value) ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*>  value) ;

static inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord Find(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* FindAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord FindLast(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1050 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::EventSystems::RaycastResult> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::EventSystems::RaycastResult>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::EventSystems::RaycastResult  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*>  value) ;

constexpr ::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*>  value) ;

static inline ::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::EventSystems::RaycastResult>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::EventSystems::RaycastResult>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::EventSystems::RaycastResult get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::EventSystems::RaycastResult  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::EventSystems::RaycastResult  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::EventSystems::RaycastResult  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::EventSystems::RaycastResult>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::EventSystems::RaycastResult>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::EventSystems::RaycastResult  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::EventSystems::RaycastResult>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::EventSystems::RaycastResult  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::EventSystems::RaycastResult  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::EventSystems::RaycastResult>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::EventSystems::RaycastResult  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::EventSystems::RaycastResult,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::EventSystems::RaycastResult>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::EventSystems::RaycastResult Find(::System::Predicate_1<::UnityEngine::EventSystems::RaycastResult>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* FindAll(::System::Predicate_1<::UnityEngine::EventSystems::RaycastResult>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::EventSystems::RaycastResult>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::EventSystems::RaycastResult>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::EventSystems::RaycastResult FindLast(::System::Predicate_1<::UnityEngine::EventSystems::RaycastResult>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::EventSystems::RaycastResult>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::EventSystems::RaycastResult> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::EventSystems::RaycastResult>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::EventSystems::RaycastResult  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::EventSystems::RaycastResult  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::EventSystems::RaycastResult>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::EventSystems::RaycastResult  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::EventSystems::RaycastResult>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::EventSystems::RaycastResult>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::EventSystems::RaycastResult>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::EventSystems::RaycastResult>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::EventSystems::RaycastResult>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1048 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::OVRSpaceUser> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::OVRSpaceUser>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::OVRSpaceUser  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::OVRSpaceUser get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::OVRSpaceUser  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::OVRSpaceUser  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::OVRSpaceUser  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::OVRSpaceUser>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::OVRSpaceUser  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::OVRSpaceUser>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::OVRSpaceUser  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::OVRSpaceUser  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::OVRSpaceUser>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::OVRSpaceUser  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::OVRSpaceUser,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::OVRSpaceUser>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::OVRSpaceUser Find(::System::Predicate_1<::GlobalNamespace::OVRSpaceUser>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>* FindAll(::System::Predicate_1<::GlobalNamespace::OVRSpaceUser>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::OVRSpaceUser>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::OVRSpaceUser>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::OVRSpaceUser FindLast(::System::Predicate_1<::GlobalNamespace::OVRSpaceUser>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::OVRSpaceUser>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::OVRSpaceUser> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::OVRSpaceUser>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRSpaceUser>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::OVRSpaceUser  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::OVRSpaceUser  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::OVRSpaceUser  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::OVRSpaceUser>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::OVRSpaceUser>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::OVRSpaceUser>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::OVRSpaceUser>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1041 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*>  value) ;

static inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2> Find(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* FindAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2> FindLast(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 1040 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*>  value) ;

static inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> Find(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* FindAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> FindLast(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 980 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::GlobalNamespace::OVRAnchor> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::OVRAnchor>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::GlobalNamespace::OVRAnchor  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::OVRAnchor>*() noexcept;

constexpr void __set__items(::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*>  value) ;

constexpr ::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*>& __get__items() ;

constexpr ::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*>  value) ;

static inline ::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* New_ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRAnchor>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRAnchor>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::OVRAnchor get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::GlobalNamespace::OVRAnchor  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::GlobalNamespace::OVRAnchor  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::GlobalNamespace::OVRAnchor  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRAnchor>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::OVRAnchor>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::GlobalNamespace::OVRAnchor  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::OVRAnchor>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::OVRAnchor  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::GlobalNamespace::OVRAnchor  item, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::OVRAnchor>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::OVRAnchor  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::GlobalNamespace::OVRAnchor,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::GlobalNamespace::OVRAnchor>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::OVRAnchor Find(::System::Predicate_1<::GlobalNamespace::OVRAnchor>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* FindAll(::System::Predicate_1<::GlobalNamespace::OVRAnchor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::GlobalNamespace::OVRAnchor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::GlobalNamespace::OVRAnchor>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::GlobalNamespace::OVRAnchor FindLast(::System::Predicate_1<::GlobalNamespace::OVRAnchor>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::GlobalNamespace::OVRAnchor>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::GlobalNamespace::OVRAnchor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::OVRAnchor>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::GlobalNamespace::OVRAnchor>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::OVRAnchor  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::GlobalNamespace::OVRAnchor  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRAnchor>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::GlobalNamespace::OVRAnchor  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::GlobalNamespace::OVRAnchor>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::GlobalNamespace::OVRAnchor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::GlobalNamespace::OVRAnchor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::GlobalNamespace::OVRAnchor>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRAnchor>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::cordl_internals::is_or_is_backed_by<int32_t> T>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 974 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<T> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<T>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<T,::Array<T>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) T  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<T>"
constexpr operator  ::System::Collections::Generic::IList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<T>"
constexpr operator  ::System::Collections::Generic::ICollection_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<T>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<T>*() noexcept;

constexpr void __set__items(::ArrayW<T,::Array<T>*>  value) ;

constexpr ::ArrayW<T,::Array<T>*>& __get__items() ;

constexpr ::ArrayW<T,::Array<T>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<T,::Array<T>*>  value) ;

static inline ::ArrayW<T,::Array<T>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<T>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<T>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<T>* New_ctor(::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline T get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, T  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(T  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(T  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<T>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, T  item, ::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(T  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(T  item, ::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(T  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<T,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<T,::Array<T>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<T,::Array<T>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<T>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline T Find(::System::Predicate_1<T>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<T>* FindAll(::System::Predicate_1<T>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<T>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<T>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline T FindLast(::System::Predicate_1<T>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<T>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<T> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<T>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<T>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(T  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, T  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(T  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<T>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<T>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<T,::Array<T>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<T>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 757 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Rendering::VertexAttributeDescriptor> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Rendering::VertexAttributeDescriptor>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Rendering::VertexAttributeDescriptor  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*>  value) ;

static inline ::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rendering::VertexAttributeDescriptor get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Rendering::VertexAttributeDescriptor  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Rendering::VertexAttributeDescriptor  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Rendering::VertexAttributeDescriptor  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Rendering::VertexAttributeDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Rendering::VertexAttributeDescriptor  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Rendering::VertexAttributeDescriptor  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Rendering::VertexAttributeDescriptor  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Rendering::VertexAttributeDescriptor,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Rendering::VertexAttributeDescriptor Find(::System::Predicate_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* FindAll(::System::Predicate_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Rendering::VertexAttributeDescriptor FindLast(::System::Predicate_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Rendering::VertexAttributeDescriptor> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Rendering::VertexAttributeDescriptor  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Rendering::VertexAttributeDescriptor  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Rendering::VertexAttributeDescriptor  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 755 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Vector4> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Vector4>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Vector4  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Vector4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Vector4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector4>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector4>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*>  value) ;

static inline ::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector4>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector4>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector4 get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Vector4  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Vector4  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Vector4  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector4>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector4>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Vector4  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector4>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Vector4  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Vector4  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector4>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Vector4  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Vector4,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Vector4>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Vector4 Find(::System::Predicate_1<::UnityEngine::Vector4>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* FindAll(::System::Predicate_1<::UnityEngine::Vector4>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Vector4>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Vector4>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Vector4 FindLast(::System::Predicate_1<::UnityEngine::Vector4>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Vector4>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Vector4> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector4>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Vector4  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Vector4  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector4>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Vector4  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Vector4>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Vector4>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector4>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Vector4>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector4>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 754 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Vector3Int> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Vector3Int>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Vector3Int  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Vector3Int>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3Int>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3Int>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector3Int>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*>  value) ;

static inline ::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3Int>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3Int>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector3Int get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Vector3Int  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Vector3Int  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Vector3Int  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3Int>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector3Int>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Vector3Int  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector3Int>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Vector3Int  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Vector3Int  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector3Int>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Vector3Int  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Vector3Int,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Vector3Int>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Vector3Int Find(::System::Predicate_1<::UnityEngine::Vector3Int>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>* FindAll(::System::Predicate_1<::UnityEngine::Vector3Int>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Vector3Int>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Vector3Int>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Vector3Int FindLast(::System::Predicate_1<::UnityEngine::Vector3Int>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Vector3Int>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Vector3Int> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector3Int>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3Int>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Vector3Int  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Vector3Int  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3Int>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Vector3Int  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Vector3Int>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Vector3Int>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector3Int>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Vector3Int>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3Int>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 753 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<uint32_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<uint32_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<uint32_t,::Array<uint32_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) uint32_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::IList_1<uint32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<uint32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<uint32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<uint32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<uint32_t>*() noexcept;

constexpr void __set__items(::ArrayW<uint32_t,::Array<uint32_t>*>  value) ;

constexpr ::ArrayW<uint32_t,::Array<uint32_t>*>& __get__items() ;

constexpr ::ArrayW<uint32_t,::Array<uint32_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<uint32_t,::Array<uint32_t>*>  value) ;

static inline ::ArrayW<uint32_t,::Array<uint32_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<uint32_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<uint32_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<uint32_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<uint32_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<uint32_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint32_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, uint32_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(uint32_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(uint32_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<uint32_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<uint32_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, uint32_t  item, ::System::Collections::Generic::IComparer_1<uint32_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(uint32_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(uint32_t  item, ::System::Collections::Generic::IComparer_1<uint32_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(uint32_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<uint32_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<uint32_t,::Array<uint32_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<uint32_t,::Array<uint32_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<uint32_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline uint32_t Find(::System::Predicate_1<uint32_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<uint32_t>* FindAll(::System::Predicate_1<uint32_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<uint32_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<uint32_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline uint32_t FindLast(::System::Predicate_1<uint32_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<uint32_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<uint32_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<uint32_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<uint32_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(uint32_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, uint32_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<uint32_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(uint32_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<uint32_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<uint32_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<uint32_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<uint32_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<uint32_t,::Array<uint32_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<uint32_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 752 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<uint16_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<uint16_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<uint16_t,::Array<uint16_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) uint16_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::IList_1<uint16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<uint16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<uint16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<uint16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<uint16_t>*() noexcept;

constexpr void __set__items(::ArrayW<uint16_t,::Array<uint16_t>*>  value) ;

constexpr ::ArrayW<uint16_t,::Array<uint16_t>*>& __get__items() ;

constexpr ::ArrayW<uint16_t,::Array<uint16_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<uint16_t,::Array<uint16_t>*>  value) ;

static inline ::ArrayW<uint16_t,::Array<uint16_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<uint16_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<uint16_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<uint16_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<uint16_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<uint16_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint16_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, uint16_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(uint16_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(uint16_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<uint16_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<uint16_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, uint16_t  item, ::System::Collections::Generic::IComparer_1<uint16_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(uint16_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(uint16_t  item, ::System::Collections::Generic::IComparer_1<uint16_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(uint16_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<uint16_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<uint16_t,::Array<uint16_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<uint16_t,::Array<uint16_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<uint16_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline uint16_t Find(::System::Predicate_1<uint16_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<uint16_t>* FindAll(::System::Predicate_1<uint16_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<uint16_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<uint16_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline uint16_t FindLast(::System::Predicate_1<uint16_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<uint16_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<uint16_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<uint16_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<uint16_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(uint16_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, uint16_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<uint16_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(uint16_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<uint16_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<uint16_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<uint16_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<uint16_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<uint16_t,::Array<uint16_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<uint16_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 745 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<int16_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<int16_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<int16_t,::Array<int16_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) int16_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<int16_t>"
constexpr operator  ::System::Collections::Generic::IList_1<int16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<int16_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<int16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<int16_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<int16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<int16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<int16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<int16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<int16_t>*() noexcept;

constexpr void __set__items(::ArrayW<int16_t,::Array<int16_t>*>  value) ;

constexpr ::ArrayW<int16_t,::Array<int16_t>*>& __get__items() ;

constexpr ::ArrayW<int16_t,::Array<int16_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<int16_t,::Array<int16_t>*>  value) ;

static inline ::ArrayW<int16_t,::Array<int16_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<int16_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<int16_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<int16_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<int16_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<int16_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int16_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, int16_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(int16_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(int16_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<int16_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<int16_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, int16_t  item, ::System::Collections::Generic::IComparer_1<int16_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int16_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int16_t  item, ::System::Collections::Generic::IComparer_1<int16_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(int16_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<int16_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<int16_t,::Array<int16_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<int16_t,::Array<int16_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<int16_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline int16_t Find(::System::Predicate_1<int16_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<int16_t>* FindAll(::System::Predicate_1<int16_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<int16_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<int16_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline int16_t FindLast(::System::Predicate_1<int16_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<int16_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<int16_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<int16_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<int16_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(int16_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, int16_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<int16_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(int16_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<int16_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<int16_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<int16_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<int16_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<int16_t,::Array<int16_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<int16_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 742 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Color32> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Color32>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Color32  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Color32>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Color32>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color32>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Color32>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Color32>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*>  value) ;

static inline ::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Color32>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Color32>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Color32>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color32>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color32>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Color32 get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Color32  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Color32  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Color32  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color32>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Color32>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Color32  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Color32>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Color32  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Color32  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Color32>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Color32  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Color32,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Color32>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Color32 Find(::System::Predicate_1<::UnityEngine::Color32>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Color32>* FindAll(::System::Predicate_1<::UnityEngine::Color32>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Color32>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Color32>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Color32 FindLast(::System::Predicate_1<::UnityEngine::Color32>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Color32>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Color32> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Color32>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Color32>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Color32  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Color32  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color32>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Color32  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Color32>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Color32>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Color32>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Color32>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color32>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 741 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<uint8_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<uint8_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<uint8_t,::Array<uint8_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) uint8_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::IList_1<uint8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<uint8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<uint8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<uint8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<uint8_t>*() noexcept;

constexpr void __set__items(::ArrayW<uint8_t,::Array<uint8_t>*>  value) ;

constexpr ::ArrayW<uint8_t,::Array<uint8_t>*>& __get__items() ;

constexpr ::ArrayW<uint8_t,::Array<uint8_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<uint8_t,::Array<uint8_t>*>  value) ;

static inline ::ArrayW<uint8_t,::Array<uint8_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<uint8_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<uint8_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<uint8_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<uint8_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<uint8_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint8_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, uint8_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(uint8_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(uint8_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<uint8_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<uint8_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, uint8_t  item, ::System::Collections::Generic::IComparer_1<uint8_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(uint8_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(uint8_t  item, ::System::Collections::Generic::IComparer_1<uint8_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(uint8_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<uint8_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<uint8_t,::Array<uint8_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<uint8_t,::Array<uint8_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<uint8_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline uint8_t Find(::System::Predicate_1<uint8_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<uint8_t>* FindAll(::System::Predicate_1<uint8_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<uint8_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<uint8_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline uint8_t FindLast(::System::Predicate_1<uint8_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<uint8_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<uint8_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<uint8_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<uint8_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(uint8_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, uint8_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<uint8_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(uint8_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<uint8_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<uint8_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<uint8_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<uint8_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<uint8_t,::Array<uint8_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<uint8_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 739 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::BoneWeight> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::BoneWeight>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::BoneWeight  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::BoneWeight>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::BoneWeight>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::BoneWeight>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::BoneWeight>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*>  value) ;

constexpr ::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*>  value) ;

static inline ::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::BoneWeight>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::BoneWeight>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::BoneWeight get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::BoneWeight  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::BoneWeight  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::BoneWeight  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::BoneWeight>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::BoneWeight>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::BoneWeight  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::BoneWeight>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::BoneWeight  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::BoneWeight  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::BoneWeight>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::BoneWeight  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::BoneWeight,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::BoneWeight>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::BoneWeight Find(::System::Predicate_1<::UnityEngine::BoneWeight>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>* FindAll(::System::Predicate_1<::UnityEngine::BoneWeight>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::BoneWeight>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::BoneWeight>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::BoneWeight FindLast(::System::Predicate_1<::UnityEngine::BoneWeight>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::BoneWeight>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::BoneWeight> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::BoneWeight>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::BoneWeight>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::BoneWeight  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::BoneWeight  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::BoneWeight>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::BoneWeight  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::BoneWeight>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::BoneWeight>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::BoneWeight>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::BoneWeight>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::BoneWeight>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 417 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::XR::XRNodeState> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::XR::XRNodeState>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::XR::XRNodeState  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::XR::XRNodeState>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::XRNodeState>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::XR::XRNodeState>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::XR::XRNodeState>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*>  value) ;

constexpr ::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*>  value) ;

static inline ::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::XRNodeState>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::XRNodeState>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::XR::XRNodeState get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::XR::XRNodeState  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::XR::XRNodeState  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::XR::XRNodeState  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::XRNodeState>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::XR::XRNodeState>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::XR::XRNodeState  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::XR::XRNodeState>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::XR::XRNodeState  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::XR::XRNodeState  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::XR::XRNodeState>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::XR::XRNodeState  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::XR::XRNodeState,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::XR::XRNodeState>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::XR::XRNodeState Find(::System::Predicate_1<::UnityEngine::XR::XRNodeState>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* FindAll(::System::Predicate_1<::UnityEngine::XR::XRNodeState>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::XR::XRNodeState>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::XR::XRNodeState>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::XR::XRNodeState FindLast(::System::Predicate_1<::UnityEngine::XR::XRNodeState>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::XR::XRNodeState>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::XR::XRNodeState> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::XR::XRNodeState>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::XR::XRNodeState  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::XR::XRNodeState  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::XRNodeState>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::XR::XRNodeState  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::XR::XRNodeState>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::XR::XRNodeState>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::XR::XRNodeState>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::XR::XRNodeState>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::XRNodeState>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 412 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Vector3> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Vector3>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Vector3  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Vector3>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Vector3>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector3>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>  value) ;

static inline ::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector3 get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Vector3  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Vector3  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Vector3  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector3>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Vector3  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector3>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Vector3  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Vector3  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector3>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Vector3  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Vector3,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Vector3>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Vector3 Find(::System::Predicate_1<::UnityEngine::Vector3>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* FindAll(::System::Predicate_1<::UnityEngine::Vector3>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Vector3>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Vector3>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Vector3 FindLast(::System::Predicate_1<::UnityEngine::Vector3>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Vector3>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Vector3> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector3>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Vector3  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Vector3  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Vector3  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Vector3>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Vector3>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector3>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Vector3>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 411 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Vector2> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Vector2>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Vector2  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Vector2>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Vector2>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector2>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector2>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector2>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>  value) ;

static inline ::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector2>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector2>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector2 get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Vector2  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Vector2  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Vector2  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector2>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector2>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Vector2  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector2>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Vector2  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Vector2  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector2>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Vector2  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Vector2,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Vector2>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Vector2 Find(::System::Predicate_1<::UnityEngine::Vector2>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* FindAll(::System::Predicate_1<::UnityEngine::Vector2>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Vector2>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Vector2>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Vector2 FindLast(::System::Predicate_1<::UnityEngine::Vector2>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Vector2>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Vector2> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector2>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Vector2  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Vector2  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector2>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Vector2  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Vector2>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Vector2>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Vector2>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Vector2>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector2>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 407 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<uint64_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<uint64_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<uint64_t,::Array<uint64_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) uint64_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::IList_1<uint64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<uint64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<uint64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<uint64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<uint64_t>*() noexcept;

constexpr void __set__items(::ArrayW<uint64_t,::Array<uint64_t>*>  value) ;

constexpr ::ArrayW<uint64_t,::Array<uint64_t>*>& __get__items() ;

constexpr ::ArrayW<uint64_t,::Array<uint64_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<uint64_t,::Array<uint64_t>*>  value) ;

static inline ::ArrayW<uint64_t,::Array<uint64_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<uint64_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<uint64_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<uint64_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<uint64_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<uint64_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint64_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, uint64_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(uint64_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(uint64_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<uint64_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<uint64_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, uint64_t  item, ::System::Collections::Generic::IComparer_1<uint64_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(uint64_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(uint64_t  item, ::System::Collections::Generic::IComparer_1<uint64_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(uint64_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<uint64_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<uint64_t,::Array<uint64_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<uint64_t,::Array<uint64_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<uint64_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline uint64_t Find(::System::Predicate_1<uint64_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<uint64_t>* FindAll(::System::Predicate_1<uint64_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<uint64_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<uint64_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline uint64_t FindLast(::System::Predicate_1<uint64_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<uint64_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<uint64_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<uint64_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<uint64_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(uint64_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, uint64_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<uint64_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(uint64_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<uint64_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<uint64_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<uint64_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<uint64_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<uint64_t,::Array<uint64_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<uint64_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 391 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<float_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<float_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<float_t,::Array<float_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) float_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<float_t>"
constexpr operator  ::System::Collections::Generic::IList_1<float_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<float_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<float_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<float_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<float_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<float_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<float_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<float_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<float_t>*() noexcept;

constexpr void __set__items(::ArrayW<float_t,::Array<float_t>*>  value) ;

constexpr ::ArrayW<float_t,::Array<float_t>*>& __get__items() ;

constexpr ::ArrayW<float_t,::Array<float_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<float_t,::Array<float_t>*>  value) ;

static inline ::ArrayW<float_t,::Array<float_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<float_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<float_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<float_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<float_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<float_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline float_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, float_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(float_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(float_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<float_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<float_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, float_t  item, ::System::Collections::Generic::IComparer_1<float_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(float_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(float_t  item, ::System::Collections::Generic::IComparer_1<float_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(float_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<float_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<float_t,::Array<float_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<float_t,::Array<float_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<float_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline float_t Find(::System::Predicate_1<float_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<float_t>* FindAll(::System::Predicate_1<float_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<float_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<float_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline float_t FindLast(::System::Predicate_1<float_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<float_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<float_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<float_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<float_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(float_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, float_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<float_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(float_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<float_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<float_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<float_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<float_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<float_t,::Array<float_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<float_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 333 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<int64_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<int64_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<int64_t,::Array<int64_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) int64_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<int64_t>"
constexpr operator  ::System::Collections::Generic::IList_1<int64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<int64_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<int64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<int64_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<int64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<int64_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<int64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<int64_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<int64_t>*() noexcept;

constexpr void __set__items(::ArrayW<int64_t,::Array<int64_t>*>  value) ;

constexpr ::ArrayW<int64_t,::Array<int64_t>*>& __get__items() ;

constexpr ::ArrayW<int64_t,::Array<int64_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<int64_t,::Array<int64_t>*>  value) ;

static inline ::ArrayW<int64_t,::Array<int64_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<int64_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<int64_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<int64_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<int64_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<int64_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int64_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, int64_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(int64_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(int64_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<int64_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<int64_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, int64_t  item, ::System::Collections::Generic::IComparer_1<int64_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int64_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int64_t  item, ::System::Collections::Generic::IComparer_1<int64_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(int64_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<int64_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<int64_t,::Array<int64_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<int64_t,::Array<int64_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<int64_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline int64_t Find(::System::Predicate_1<int64_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<int64_t>* FindAll(::System::Predicate_1<int64_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<int64_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<int64_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline int64_t FindLast(::System::Predicate_1<int64_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<int64_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<int64_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<int64_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<int64_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(int64_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, int64_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<int64_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(int64_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<int64_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<int64_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<int64_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<int64_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<int64_t,::Array<int64_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<int64_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 330 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::LowLevel::InputEventPtr>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::InputSystem::LowLevel::InputEventPtr  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*>  value) ;

constexpr ::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*>  value) ;

static inline ::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::LowLevel::InputEventPtr get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::InputSystem::LowLevel::InputEventPtr  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::InputSystem::LowLevel::InputEventPtr  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::InputSystem::LowLevel::InputEventPtr  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::InputSystem::LowLevel::InputEventPtr  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::LowLevel::InputEventPtr  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::InputSystem::LowLevel::InputEventPtr  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::LowLevel::InputEventPtr  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::LowLevel::InputEventPtr Find(::System::Predicate_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* FindAll(::System::Predicate_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::InputSystem::LowLevel::InputEventPtr FindLast(::System::Predicate_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::InputSystem::LowLevel::InputEventPtr> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::LowLevel::InputEventPtr  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::InputSystem::LowLevel::InputEventPtr  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::InputSystem::LowLevel::InputEventPtr  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 314 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::System::Guid> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::System::Guid>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::System::Guid,::Array<::System::Guid>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::System::Guid  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Guid>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Guid>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Guid>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Guid>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Guid>*() noexcept;

constexpr void __set__items(::ArrayW<::System::Guid,::Array<::System::Guid>*>  value) ;

constexpr ::ArrayW<::System::Guid,::Array<::System::Guid>*>& __get__items() ;

constexpr ::ArrayW<::System::Guid,::Array<::System::Guid>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::System::Guid,::Array<::System::Guid>*>  value) ;

static inline ::ArrayW<::System::Guid,::Array<::System::Guid>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::System::Guid>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::System::Guid>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::System::Guid>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Guid>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::System::Guid>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Guid get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::System::Guid  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::System::Guid  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::System::Guid  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::System::Guid>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Guid>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::System::Guid  item, ::System::Collections::Generic::IComparer_1<::System::Guid>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Guid  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::System::Guid  item, ::System::Collections::Generic::IComparer_1<::System::Guid>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Guid  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::System::Guid,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::System::Guid,::Array<::System::Guid>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Guid,::Array<::System::Guid>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::System::Guid>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Guid Find(::System::Predicate_1<::System::Guid>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Guid>* FindAll(::System::Predicate_1<::System::Guid>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::System::Guid>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::System::Guid>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Guid FindLast(::System::Predicate_1<::System::Guid>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::System::Guid>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::System::Guid> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Guid>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::System::Guid>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Guid  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::System::Guid  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::System::Guid>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::System::Guid  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::System::Guid>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::System::Guid>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::System::Guid>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::System::Guid>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::System::Guid,::Array<::System::Guid>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::System::Guid>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 302 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*>  value) ;

static inline ::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent Find(::System::Predicate_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* FindAll(::System::Predicate_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent FindLast(::System::Predicate_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 293 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::Color> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Color>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::Color  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Color>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Color>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Color>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Color>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*>  value) ;

constexpr ::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*>  value) ;

static inline ::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Color>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Color>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::Color>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Color get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::Color  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::Color  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::Color  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Color>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::Color  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Color>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Color  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::Color  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::Color>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Color  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::Color,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::Color>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Color Find(::System::Predicate_1<::UnityEngine::Color>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Color>* FindAll(::System::Predicate_1<::UnityEngine::Color>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::Color>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::Color>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::Color FindLast(::System::Predicate_1<::UnityEngine::Color>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::Color>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::Color> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Color>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::Color>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Color  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::Color  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::Color  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::Color>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::Color>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::Color>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::Color>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 292 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<char16_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<char16_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<char16_t,::Array<char16_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) char16_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<char16_t>"
constexpr operator  ::System::Collections::Generic::IList_1<char16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<char16_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<char16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<char16_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<char16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<char16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<char16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<char16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<char16_t>*() noexcept;

constexpr void __set__items(::ArrayW<char16_t,::Array<char16_t>*>  value) ;

constexpr ::ArrayW<char16_t,::Array<char16_t>*>& __get__items() ;

constexpr ::ArrayW<char16_t,::Array<char16_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<char16_t,::Array<char16_t>*>  value) ;

static inline ::ArrayW<char16_t,::Array<char16_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<char16_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<char16_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<char16_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<char16_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<char16_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline char16_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, char16_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(char16_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(char16_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<char16_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<char16_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, char16_t  item, ::System::Collections::Generic::IComparer_1<char16_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(char16_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(char16_t  item, ::System::Collections::Generic::IComparer_1<char16_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(char16_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<char16_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<char16_t,::Array<char16_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<char16_t,::Array<char16_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<char16_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline char16_t Find(::System::Predicate_1<char16_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<char16_t>* FindAll(::System::Predicate_1<char16_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<char16_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<char16_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline char16_t FindLast(::System::Predicate_1<char16_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<char16_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<char16_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<char16_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<char16_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(char16_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, char16_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<char16_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(char16_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<char16_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<char16_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<char16_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<char16_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<char16_t,::Array<char16_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<char16_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 275 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

constexpr void __set__items(::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>  value) ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>& __get__items() ;

constexpr ::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>  value) ;

static inline ::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* New_ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  item, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle Find(::System::Predicate_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* FindAll(::System::Predicate_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle FindLast(::System::Predicate_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 105 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<bool> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<bool>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<bool,::Array<bool>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) bool  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<bool>"
constexpr operator  ::System::Collections::Generic::IList_1<bool>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<bool>"
constexpr operator  ::System::Collections::Generic::ICollection_1<bool>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<bool>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<bool>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<bool>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<bool>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<bool>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<bool>*() noexcept;

constexpr void __set__items(::ArrayW<bool,::Array<bool>*>  value) ;

constexpr ::ArrayW<bool,::Array<bool>*>& __get__items() ;

constexpr ::ArrayW<bool,::Array<bool>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<bool,::Array<bool>*>  value) ;

static inline ::ArrayW<bool,::Array<bool>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<bool>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<bool>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<bool>* New_ctor(::System::Collections::Generic::IEnumerable_1<bool>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<bool>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, bool  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(bool  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(bool  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<bool>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<bool>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, bool  item, ::System::Collections::Generic::IComparer_1<bool>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(bool  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(bool  item, ::System::Collections::Generic::IComparer_1<bool>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(bool  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<bool,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<bool,::Array<bool>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<bool,::Array<bool>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<bool>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Find(::System::Predicate_1<bool>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<bool>* FindAll(::System::Predicate_1<bool>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<bool>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<bool>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool FindLast(::System::Predicate_1<bool>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<bool>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<bool> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<bool>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<bool>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(bool  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, bool  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<bool>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(bool  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<bool>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<bool>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<bool>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<bool>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<bool,::Array<bool>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<bool>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3843))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 98 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<int32_t> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<int32_t>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<int32_t,::Array<int32_t>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) int32_t  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<int32_t>"
constexpr operator  ::System::Collections::Generic::IList_1<int32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<int32_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<int32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<int32_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<int32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<int32_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<int32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<int32_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<int32_t>*() noexcept;

constexpr void __set__items(::ArrayW<int32_t,::Array<int32_t>*>  value) ;

constexpr ::ArrayW<int32_t,::Array<int32_t>*>& __get__items() ;

constexpr ::ArrayW<int32_t,::Array<int32_t>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<int32_t,::Array<int32_t>*>  value) ;

static inline ::ArrayW<int32_t,::Array<int32_t>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<int32_t>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<int32_t>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<int32_t>* New_ctor(::System::Collections::Generic::IEnumerable_1<int32_t>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<int32_t>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, int32_t  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(int32_t  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(int32_t  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<int32_t>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<int32_t>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, int32_t  item, ::System::Collections::Generic::IComparer_1<int32_t>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  item, ::System::Collections::Generic::IComparer_1<int32_t>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(int32_t  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<int32_t,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<int32_t,::Array<int32_t>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<int32_t,::Array<int32_t>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<int32_t>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t Find(::System::Predicate_1<int32_t>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<int32_t>* FindAll(::System::Predicate_1<int32_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<int32_t>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<int32_t>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindLast(::System::Predicate_1<int32_t>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<int32_t>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<int32_t> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<int32_t>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<int32_t>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(int32_t  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, int32_t  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<int32_t>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(int32_t  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<int32_t>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<int32_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<int32_t>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<int32_t>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<int32_t,::Array<int32_t>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<int32_t>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
// Type: System.Collections.Generic::List`1
namespace System::Collections::Generic {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3843)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3843), inst: 2 })
// CS Name: ::System.Collections.Generic::List`1<T>*
class CORDL_TYPE List_1<T> : public ::System::Object {
public:
// Declarations
using Enumerator = ::System::Collections::Generic::__List_1__Enumerator<T>;

/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x28};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x28 - sizeof(::System::Object)]{};

/// @brief Field DefaultCapacity offset 0x0
static constexpr int32_t  DefaultCapacity{static_cast<int32_t>(0x4)};

/// @brief Field _items offset 0x10
 __declspec(property(get=__get__items, put=__set__items)) ::ArrayW<T,::Array<T>*>  _items;

/// @brief Field _size offset 0x18
 __declspec(property(get=__get__size, put=__set__size)) int32_t  _size;

/// @brief Field _version offset 0x1c
 __declspec(property(get=__get__version, put=__set__version)) int32_t  _version;

/// @brief Field _syncRoot offset 0x20
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Capacity, put=set_Capacity)) int32_t  Capacity;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=get_Item, put=set_Item)) T  Item[];

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<T>"
constexpr operator  ::System::Collections::Generic::IList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<T>"
constexpr operator  ::System::Collections::Generic::ICollection_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<T>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<T>*() noexcept;

constexpr void __set__items(::ArrayW<T,::Array<T>*>  value) ;

constexpr ::ArrayW<T,::Array<T>*>& __get__items() ;

constexpr ::ArrayW<T,::Array<T>*> const& __get__items() const;

constexpr void __set__size(int32_t  value) ;

constexpr int32_t& __get__size() ;

constexpr int32_t const& __get__size() const;

constexpr void __set__version(int32_t  value) ;

constexpr int32_t& __get__version() ;

constexpr int32_t const& __get__version() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline void setStaticF_s_emptyArray(::ArrayW<T,::Array<T>*>  value) ;

static inline ::ArrayW<T,::Array<T>*> getStaticF_s_emptyArray() ;

static inline ::System::Collections::Generic::List_1<T>* New_ctor() ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor() ;

static inline ::System::Collections::Generic::List_1<T>* New_ctor(int32_t  capacity) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(int32_t  capacity) ;

static inline ::System::Collections::Generic::List_1<T>* New_ctor(::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method get_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t get_Capacity() ;

/// @brief Method set_Capacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void set_Capacity(int32_t  value) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline T get_Item(int32_t  index) ;

/// @brief Method set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void set_Item(int32_t  index, T  value) ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Add(T  item) ;

/// @brief Method AddWithResize addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddWithResize(T  item) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  item) ;

/// @brief Method AddRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddRange(::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method AsReadOnly addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<T>* AsReadOnly() ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(int32_t  index, int32_t  count, T  item, ::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(T  item) ;

/// @brief Method BinarySearch addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t BinarySearch(T  item, ::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Clear() ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(T  item) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  item) ;

/// @brief Method ConvertAll addr 0x0 size 0xffffffffffffffff virtual false final false
template<typename TOutput>
inline ::System::Collections::Generic::List_1<TOutput>* ConvertAll(::System::Converter_2<T,TOutput>*  converter) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual false final false
inline void CopyTo(::ArrayW<T,::Array<T>*>  array) ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  arrayIndex) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<T,::Array<T>*>  array, int32_t  arrayIndex) ;

/// @brief Method EnsureCapacity addr 0x0 size 0xffffffffffffffff virtual false final false
inline void EnsureCapacity(int32_t  min) ;

/// @brief Method Exists addr 0x0 size 0xffffffffffffffff virtual false final false
inline bool Exists(::System::Predicate_1<T>*  match) ;

/// @brief Method Find addr 0x0 size 0xffffffffffffffff virtual false final false
inline T Find(::System::Predicate_1<T>*  match) ;

/// @brief Method FindAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<T>* FindAll(::System::Predicate_1<T>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(::System::Predicate_1<T>*  match) ;

/// @brief Method FindIndex addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t FindIndex(int32_t  startIndex, int32_t  count, ::System::Predicate_1<T>*  match) ;

/// @brief Method FindLast addr 0x0 size 0xffffffffffffffff virtual false final false
inline T FindLast(::System::Predicate_1<T>*  match) ;

/// @brief Method ForEach addr 0x0 size 0xffffffffffffffff virtual false final false
inline void ForEach(::System::Action_1<T>*  action) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::__List_1__Enumerator<T> GetEnumerator() ;

/// @brief Method System.Collections.Generic.IEnumerable<T>.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<T>* System_Collections_Generic_IEnumerable_T__GetEnumerator() ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method GetRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::System::Collections::Generic::List_1<T>* GetRange(int32_t  index, int32_t  count) ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(T  item) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  item) ;

/// @brief Method Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void Insert(int32_t  index, T  item) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  item) ;

/// @brief Method InsertRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void InsertRange(int32_t  index, ::System::Collections::Generic::IEnumerable_1<T>*  collection) ;

/// @brief Method Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Remove(T  item) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  item) ;

/// @brief Method RemoveAll addr 0x0 size 0xffffffffffffffff virtual false final false
inline int32_t RemoveAll(::System::Predicate_1<T>*  match) ;

/// @brief Method RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void RemoveAt(int32_t  index) ;

/// @brief Method RemoveRange addr 0x0 size 0xffffffffffffffff virtual false final false
inline void RemoveRange(int32_t  index, int32_t  count) ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse() ;

/// @brief Method Reverse addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Reverse(int32_t  index, int32_t  count) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort() ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(int32_t  index, int32_t  count, ::System::Collections::Generic::IComparer_1<T>*  comparer) ;

/// @brief Method Sort addr 0x0 size 0xffffffffffffffff virtual false final false
inline void Sort(::System::Comparison_1<T>*  comparison) ;

/// @brief Method ToArray addr 0x0 size 0xffffffffffffffff virtual false final false
inline ::ArrayW<T,::Array<T>*> ToArray() ;

/// @brief Method TrimExcess addr 0x0 size 0xffffffffffffffff virtual false final false
inline void TrimExcess() ;

/// @brief Method AddEnumerable addr 0x0 size 0xffffffffffffffff virtual false final false
inline void AddEnumerable(::System::Collections::Generic::IEnumerable_1<T>*  enumerable) ;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
List_1(List_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "List_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
List_1(List_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 List_1()  = default;
public:


// Fields

// Static field s_emptyArray


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::Generic
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::System::Collections::Generic::List_1, "System.Collections.Generic", "List`1");
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(::System::Collections::Generic::__List_1__Enumerator, "System.Collections.Generic", "List`1/Enumerator");
