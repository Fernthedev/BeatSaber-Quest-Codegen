#pragma once
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "../../../cordl_internals/cordl_internals.hpp"
CORDL_MODULE_INIT
#include "System/zzzz__Object_def.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include <cmath>
#include <cstdint>
CORDL_MODULE_EXPORT(ReadOnlyCollection_1)
namespace System::Collections::Generic {
template<typename T>
class ICollection_1;
}
namespace System::Collections::Generic {
template<typename T>
class IReadOnlyCollection_1;
}
namespace System {
class Object;
}
namespace System::Collections {
class IEnumerator;
}
namespace BeatSaber::BeatAvatarAdapter::AvatarEditor {
struct EditAvatarHistorySnapshot;
}
namespace System::Collections {
class IEnumerable;
}
namespace System {
class Array;
}
namespace System::Collections::Generic {
template<typename T>
class IEnumerator_1;
}
namespace System::Collections {
class ICollection;
}
namespace System::Collections::Generic {
template<typename T>
class IList_1;
}
namespace System::Collections::Generic {
template<typename T>
class IEnumerable_1;
}
namespace System::Collections::Generic {
template<typename T>
class IReadOnlyList_1;
}
namespace System::Collections {
class IList;
}
namespace GlobalNamespace {
struct BezierCurve;
}
namespace GlobalNamespace {
struct MultiplayerAvatarData;
}
namespace GlobalNamespace {
struct OVRAnchor;
}
namespace GlobalNamespace {
struct OVRSpaceUser;
}
namespace GlobalNamespace {
template<typename TKey,typename TValue>
struct __AsyncCachedLoader_2__ScheduledTask;
}
namespace GlobalNamespace {
struct __BeatLine__HighlightData;
}
namespace GlobalNamespace {
struct __BeatmapDataLoader__BpmTimeProcessor__BpmChangeData;
}
namespace GlobalNamespace {
struct __DebugConsoleController__ConsoleMessage;
}
namespace GlobalNamespace {
struct __InputControlLayout__Collection__LayoutMatcher;
}
namespace GlobalNamespace {
struct __MultiplierValuesRecorder__MultiplierValue;
}
namespace GlobalNamespace {
struct __OVRPassthroughLayer__DeferredPassthroughMeshAddition;
}
namespace GlobalNamespace {
struct __OVRPassthroughLayer__SerializedSurfaceGeometry;
}
namespace GlobalNamespace {
struct __OVRRaycaster__RaycastHit;
}
namespace GlobalNamespace {
struct __OVRSpatialAnchor__UnboundAnchor;
}
namespace GlobalNamespace {
struct __PSVR2Helper__HeadsetHapticFrequencyLimit;
}
namespace GlobalNamespace {
struct __PackedPlayModeBuildLogs__RuntimeBuildLog;
}
namespace GlobalNamespace {
struct __PlayerStatisticsViewController__StatsScopeData;
}
namespace GlobalNamespace {
struct __SelectRegionViewController__RegionToLocalizationKeyPair;
}
namespace GlobalNamespace {
struct __SynchronizedActionQueue__SynchronizedAction;
}
namespace HoudiniEngineUnity {
struct HAPI_GeoInfo;
}
namespace HoudiniEngineUnity {
struct HAPI_PartInfo;
}
namespace HoudiniEngineUnity {
struct TransformData;
}
namespace IntervalTree {
template<typename TKey,typename TValue>
struct RangeValuePair_2;
}
namespace MidiParser {
struct MidiEvent;
}
namespace Newtonsoft::Json {
struct JsonPosition;
}
namespace System {
template<typename T>
struct ArraySegment_1;
}
namespace System::Collections {
struct DictionaryEntry;
}
namespace UnityEngine::ProBuilder {
struct Edge;
}
namespace System::Collections::Generic {
template<typename TKey,typename TValue>
struct KeyValuePair_2;
}
namespace UnityEngine {
struct PropertyName;
}
namespace UnityEngine::InputSystem::Utilities {
struct __JsonParser__JsonValue;
}
namespace System {
struct DateTime;
}
namespace System {
struct DateTimeOffset;
}
namespace System {
struct Decimal;
}
namespace System {
struct Guid;
}
namespace System::Reflection {
struct CustomAttributeNamedArgument;
}
namespace System::Reflection {
struct CustomAttributeTypedArgument;
}
namespace System::Security::Cryptography::X509Certificates {
struct X509ChainStatus;
}
namespace System::Text::RegularExpressions {
struct __RegexCharClass__SingleRange;
}
namespace System {
struct TimeSpan;
}
namespace System {
template<typename T1,typename T2>
struct ValueTuple_2;
}
namespace UnityEngine {
struct Vector3;
}
namespace System {
template<typename T1,typename T2,typename T3>
struct ValueTuple_3;
}
namespace System {
struct Int32Enum;
}
namespace TMPro::SpriteAssetUtilities {
struct __TexturePacker_JsonArray__Frame;
}
namespace Tayx::Graphy {
struct __GraphyDebugger__DebugCondition;
}
namespace UnityEngine::UIElements {
struct Vertex;
}
namespace Unity::Collections {
template<typename T>
struct NativeArray_1;
}
namespace UnityEngine {
struct AnimatorClipInfo;
}
namespace UnityEngine {
struct BoneWeight;
}
namespace UnityEngine {
struct Color;
}
namespace UnityEngine {
struct Color32;
}
namespace UnityEngine::EventSystems {
struct RaycastResult;
}
namespace UnityEngine::InputSystem::HID {
struct __HIDParser__HIDReportData;
}
namespace UnityEngine::InputSystem::HID {
struct __HID__HIDCollectionDescriptor;
}
namespace UnityEngine::InputSystem::HID {
struct __HID__HIDElementDescriptor;
}
namespace UnityEngine::InputSystem {
struct InputBinding;
}
namespace UnityEngine::InputSystem::Layouts {
struct InputDeviceDescription;
}
namespace UnityEngine::InputSystem::Layouts {
struct __InputControlLayout__ControlItem;
}
namespace UnityEngine::InputSystem::LowLevel {
struct InputEventPtr;
}
namespace UnityEngine::InputSystem::UI {
struct __TrackedDeviceRaycaster__RaycastHitData;
}
namespace UnityEngine::InputSystem::Utilities {
struct InternedString;
}
namespace UnityEngine::InputSystem::Utilities {
struct NameAndParameters;
}
namespace UnityEngine::InputSystem::Utilities {
struct NamedValue;
}
namespace UnityEngine::InputSystem::Utilities {
struct Substring;
}
namespace UnityEngine::InputSystem::XR {
struct UsageHint;
}
namespace UnityEngine::InputSystem::XR {
struct XRFeatureDescriptor;
}
namespace UnityEngine::InputSystem {
struct __InputActionMap__BindingOverrideJson;
}
namespace UnityEngine {
struct Matrix4x4;
}
namespace UnityEngine::Playables {
struct Playable;
}
namespace UnityEngine::Playables {
struct PlayableBinding;
}
namespace UnityEngine::ProBuilder {
struct BezierPoint;
}
namespace UnityEngine::ProBuilder {
struct EdgeLookup;
}
namespace UnityEngine::ProBuilder {
template<typename T1,typename T2>
struct SimpleTuple_2;
}
namespace UnityEngine {
struct Vector2;
}
namespace UnityEngine::ProBuilder {
struct Triangle;
}
namespace UnityEngine {
struct Quaternion;
}
namespace UnityEngine {
struct RaycastHit2D;
}
namespace UnityEngine {
struct Rect;
}
namespace UnityEngine::Rendering {
struct SubMeshDescriptor;
}
namespace UnityEngine::Rendering {
struct VertexAttributeDescriptor;
}
namespace UnityEngine::ResourceManagement::AsyncOperations {
struct AsyncOperationHandle;
}
namespace UnityEngine::ResourceManagement::Diagnostics {
struct DiagnosticEvent;
}
namespace UnityEngine::ResourceManagement::Util {
struct ObjectInitializationData;
}
namespace UnityEngine::ResourceManagement::Util {
struct __DelayedActionManager__DelegateInfo;
}
namespace UnityEngine::ResourceManagement {
struct __ResourceManager__DeferredCallbackRegisterRequest;
}
namespace UnityEngine::SceneManagement {
struct Scene;
}
namespace UnityEngine::SpatialTracking {
struct __TrackedPoseDriverDataDescription__PoseData;
}
namespace UnityEngine::TextCore {
struct GlyphRect;
}
namespace UnityEngine::TextCore::LowLevel {
struct GlyphPairAdjustmentRecord;
}
namespace UnityEngine::TextCore::Text {
struct __TextSettings__FontReferenceMap;
}
namespace UnityEngine::Timeline {
struct IntervalTreeNode;
}
namespace UnityEngine::Timeline {
struct __AnimationOutputWeightProcessor__WeightInfo;
}
namespace UnityEngine::Timeline {
template<typename T>
struct __IntervalTree_1__Entry;
}
namespace UnityEngine::Timeline {
struct __TimeNotificationBehaviour__NotificationEntry;
}
namespace UnityEngine {
struct TreeInstance;
}
namespace UnityEngine {
struct UICharInfo;
}
namespace UnityEngine::UIElements {
struct ComputedTransitionProperty;
}
namespace UnityEngine::UIElements {
struct EasingFunction;
}
namespace UnityEngine::UIElements {
struct ManipulatorActivationFilter;
}
namespace UnityEngine::UIElements {
struct RuleMatcher;
}
namespace UnityEngine::UIElements {
struct StylePropertyName;
}
namespace UnityEngine::UIElements {
struct StyleSelectorPart;
}
namespace UnityEngine::UIElements::StyleSheets {
struct SelectorMatchRecord;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StylePropertyValue;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StyleValue;
}
namespace UnityEngine::UIElements::StyleSheets {
struct StyleValueManaged;
}
namespace UnityEngine::UIElements::StyleSheets::Syntax {
struct StyleSyntaxToken;
}
namespace UnityEngine::UIElements {
struct StyleVariable;
}
namespace UnityEngine::UIElements {
struct TimeValue;
}
namespace UnityEngine::UIElements::UIR::Implementation {
struct __UIRStylePainter__Entry;
}
namespace UnityEngine::UIElements::UIR {
struct RenderChainTextEntry;
}
namespace UnityEngine::UIElements::UIR {
struct __BitmapAllocator32__Page;
}
namespace UnityEngine::UIElements::UIR {
struct __RenderChain__RenderNodeData;
}
namespace UnityEngine::UIElements::UIR {
struct __TextureBlitter__BlitInfo;
}
namespace UnityEngine::UIElements::UIR {
struct __UIRenderDevice__AllocToFree;
}
namespace UnityEngine::UIElements::UIR {
struct __UIRenderDevice__AllocToUpdate;
}
namespace UnityEngine::UIElements {
struct __FocusController__FocusedElement;
}
namespace UnityEngine::UIElements {
struct __InternalTreeView__TreeViewItemWrapper;
}
namespace UnityEngine::UIElements {
struct __TemplateAsset__AttributeOverride;
}
namespace UnityEngine::UIElements {
struct __TextureRegistry__TextureInfo;
}
namespace UnityEngine::UIElements {
struct __TreeView__TreeViewItemWrapper;
}
namespace UnityEngine::UIElements {
struct __VisualTreeAsset__SlotDefinition;
}
namespace UnityEngine::UIElements {
struct __VisualTreeAsset__SlotUsageEntry;
}
namespace UnityEngine::UIElements {
struct __VisualTreeAsset__UsingEntry;
}
namespace UnityEngine {
struct UILineInfo;
}
namespace UnityEngine {
struct UIVertex;
}
namespace UnityEngine {
struct Vector3Int;
}
namespace UnityEngine {
struct Vector4;
}
namespace UnityEngine::XR {
struct XRNodeState;
}
namespace UnityEngine {
struct __BeforeRenderHelper__OrderBlock;
}
namespace UnityEngine {
struct __Camera__RenderRequest;
}
namespace UnityEngine {
struct __UnitySynchronizationContext__WorkRequest;
}
namespace VRUIControls {
struct __PhysicsRaycasterWithCache__CachedRaycast;
}
namespace VRUIControls {
struct __VRGraphicRaycaster__VRGraphicRaycastResult;
}
namespace Zenject {
struct BindingId;
}
namespace Zenject {
struct TypeValuePair;
}
namespace Zenject {
struct __DisposableManager__DisposableInfo;
}
namespace Zenject {
struct __DisposeBlock__SpawnedObjectPoolPair;
}
namespace Zenject {
struct __PoolableManager__PoolableInfo;
}
// Forward declare root types
namespace System::Collections::ObjectModel {
template<typename T>
class ReadOnlyCollection_1;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::BezierCurve>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::MultiplayerAvatarData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::OVRAnchor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::OVRSpaceUser>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
class ReadOnlyCollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__BeatLine__HighlightData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_PartInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::HoudiniEngineUnity::TransformData>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
class ReadOnlyCollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::MidiParser::MidiEvent>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::Newtonsoft::Json::JsonPosition>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::ArraySegment_1<uint8_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::Collections::DictionaryEntry>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
class ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
class ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0>
class ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
class ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
class ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::DateTime>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::DateTimeOffset>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::Decimal>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::Guid>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::Reflection::CustomAttributeNamedArgument>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::Reflection::CustomAttributeTypedArgument>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::System::TimeSpan>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
class ReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
class ReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type T2_cordlgen_0>
class ReadOnlyCollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>;
}
namespace System::Collections::ObjectModel {
template<::cordl_internals::is_or_is_backed_by<int32_t> T1_cordlgen_0,::cordl_internals::is_or_is_backed_by<int32_t> T2_cordlgen_1,::il2cpp_utils::il2cpp_reference_type T3_cordlgen_2>
class ReadOnlyCollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::Unity::Collections::NativeArray_1<uint16_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::AnimatorClipInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::BoneWeight>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Color>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Color32>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::EventSystems::RaycastResult>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::InputBinding>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::InternedString>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::Substring>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::XR::UsageHint>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Matrix4x4>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Playables::Playable>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Playables::PlayableBinding>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ProBuilder::BezierPoint>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ProBuilder::EdgeLookup>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
class ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
class ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
class ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ProBuilder::Triangle>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Quaternion>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::RaycastHit2D>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Rect>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Rendering::SubMeshDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::SceneManagement::Scene>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::TextCore::GlyphRect>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Timeline::IntervalTreeNode>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type T_cordlgen_0>
class ReadOnlyCollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::TreeInstance>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UICharInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::EasingFunction>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::RuleMatcher>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::StylePropertyName>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSelectorPart>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::StyleVariable>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::TimeValue>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UILineInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::UIVertex>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Vector2>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Vector3>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Vector3Int>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::Vector4>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::XR::XRNodeState>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::__Camera__RenderRequest>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::Zenject::BindingId>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::Zenject::TypeValuePair>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::Zenject::__DisposableManager__DisposableInfo>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<::Zenject::__PoolableManager__PoolableInfo>;
}
namespace System::Collections::ObjectModel {
template<::cordl_internals::is_or_is_backed_by<int32_t> T>
class ReadOnlyCollection_1<T>;
}
namespace System::Collections::ObjectModel {
template<::cordl_internals::is_or_is_backed_by<uint16_t> T>
class ReadOnlyCollection_1<T>;
}
namespace System::Collections::ObjectModel {
template<::il2cpp_utils::il2cpp_reference_type T>
class ReadOnlyCollection_1<T>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<bool>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<char16_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<double_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<float_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<int16_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<int32_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<int64_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<int8_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<uint16_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<uint32_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<uint64_t>;
}
namespace System::Collections::ObjectModel {
template<>
class ReadOnlyCollection_1<uint8_t>;
}
// Write type traits
MARK_GEN_REF_PTR_T(::System::Collections::ObjectModel::ReadOnlyCollection_1);
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6442 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair,::Array<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__SelectRegionViewController__RegionToLocalizationKeyPair  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::cordl_internals::is_or_is_backed_by<uint16_t> T>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6441 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<T> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<T>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) T  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) T  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<T>"
constexpr operator  ::System::Collections::Generic::IList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<T>"
constexpr operator  ::System::Collections::Generic::ICollection_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<T>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<T>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<T>*  value) ;

constexpr ::System::Collections::Generic::IList_1<T>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<T>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<T>* New_ctor(::System::Collections::Generic::IList_1<T>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<T>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline T get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(T  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<T,::Array<T>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<T>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline T System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(T  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::cordl_internals::is_or_is_backed_by<int32_t> T1_cordlgen_0,::cordl_internals::is_or_is_backed_by<int32_t> T2_cordlgen_1,::il2cpp_utils::il2cpp_reference_type T3_cordlgen_2>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6440 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* New_ctor(::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>,::Array<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::ValueTuple_3<T1_cordlgen_0,T2_cordlgen_1,T3_cordlgen_2>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6439 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* New_ctor(::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>,::Array<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::ValueTuple_2<T1_cordlgen_0,::UnityEngine::Vector3>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T2_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6438 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* New_ctor(::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<int32_t,T2_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ValueTuple_2<int32_t,T2_cordlgen_0>,::Array<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<int32_t,T2_cordlgen_0>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<int32_t,T2_cordlgen_0> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::ValueTuple_2<int32_t,T2_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::ValueTuple_2<int32_t,T2_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6437 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6436 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,int32_t>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6435 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ProBuilder::SimpleTuple_2<T1_cordlgen_0,::UnityEngine::ProBuilder::Edge>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6434 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__AsyncCachedLoader_2__ScheduledTask<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6433 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* New_ctor(::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>,::Array<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::Unity::Collections::NativeArray_1<::UnityEngine::UIElements::Vertex>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6432 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::Unity::Collections::NativeArray_1<uint16_t>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::Unity::Collections::NativeArray_1<uint16_t>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::Unity::Collections::NativeArray_1<uint16_t>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Unity::Collections::NativeArray_1<uint16_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Unity::Collections::NativeArray_1<uint16_t>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Unity::Collections::NativeArray_1<uint16_t>>* New_ctor(::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::Unity::Collections::NativeArray_1<uint16_t>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Unity::Collections::NativeArray_1<uint16_t> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Unity::Collections::NativeArray_1<uint16_t>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Unity::Collections::NativeArray_1<uint16_t>,::Array<::Unity::Collections::NativeArray_1<uint16_t>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Unity::Collections::NativeArray_1<uint16_t>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Unity::Collections::NativeArray_1<uint16_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Unity::Collections::NativeArray_1<uint16_t> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::Unity::Collections::NativeArray_1<uint16_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::Unity::Collections::NativeArray_1<uint16_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::Unity::Collections::NativeArray_1<uint16_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::Unity::Collections::NativeArray_1<uint16_t>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6431 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* New_ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6430 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>,::Array<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Timeline::__IntervalTree_1__Entry<T_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6424 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* New_ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Collections::Generic::KeyValuePair_2<int32_t,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6423 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Collections::DictionaryEntry> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Collections::DictionaryEntry  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Collections::DictionaryEntry  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::DictionaryEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::DictionaryEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::DictionaryEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::DictionaryEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::DictionaryEntry>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::DictionaryEntry>* New_ctor(::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Collections::DictionaryEntry>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::DictionaryEntry get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::DictionaryEntry  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::DictionaryEntry,::Array<::System::Collections::DictionaryEntry>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::DictionaryEntry>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::DictionaryEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::DictionaryEntry System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Collections::DictionaryEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Collections::DictionaryEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Collections::DictionaryEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Collections::DictionaryEntry  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6152 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::Zenject::__PoolableManager__PoolableInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::Zenject::__PoolableManager__PoolableInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::Zenject::__PoolableManager__PoolableInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__PoolableManager__PoolableInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__PoolableManager__PoolableInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::__PoolableManager__PoolableInfo>* New_ctor(::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::Zenject::__PoolableManager__PoolableInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__PoolableManager__PoolableInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::__PoolableManager__PoolableInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::__PoolableManager__PoolableInfo,::Array<::Zenject::__PoolableManager__PoolableInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::__PoolableManager__PoolableInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::__PoolableManager__PoolableInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__PoolableManager__PoolableInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::Zenject::__PoolableManager__PoolableInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::Zenject::__PoolableManager__PoolableInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::Zenject::__PoolableManager__PoolableInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::Zenject::__PoolableManager__PoolableInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6151 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor(::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::IntervalTree::RangeValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6150 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* New_ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::ProBuilder::Edge,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 6003 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData,::Array<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__PlayerStatisticsViewController__StatsScopeData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 5983 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_GeoInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::HoudiniEngineUnity::HAPI_GeoInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::HoudiniEngineUnity::HAPI_GeoInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_GeoInfo>* New_ctor(::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_GeoInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::HAPI_GeoInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::HoudiniEngineUnity::HAPI_GeoInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::HoudiniEngineUnity::HAPI_GeoInfo,::Array<::HoudiniEngineUnity::HAPI_GeoInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::HAPI_GeoInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::HoudiniEngineUnity::HAPI_GeoInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::HAPI_GeoInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::HoudiniEngineUnity::HAPI_GeoInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::HoudiniEngineUnity::HAPI_GeoInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::HoudiniEngineUnity::HAPI_GeoInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::HoudiniEngineUnity::HAPI_GeoInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T1_cordlgen_0,::il2cpp_utils::il2cpp_reference_type T2_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 5059 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* New_ctor(::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>,::Array<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::ValueTuple_2<T1_cordlgen_0,T2_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4457 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher,::Array<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__InputControlLayout__Collection__LayoutMatcher  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4455 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData,::Array<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__BeatmapDataLoader__BpmTimeProcessor__BpmChangeData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4454 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::__VisualTreeAsset__SlotUsageEntry  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4453 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition,::Array<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::__VisualTreeAsset__SlotDefinition  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4451 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::__UnitySynchronizationContext__WorkRequest  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::__UnitySynchronizationContext__WorkRequest  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__UnitySynchronizationContext__WorkRequest get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::__UnitySynchronizationContext__WorkRequest  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::__UnitySynchronizationContext__WorkRequest,::Array<::UnityEngine::__UnitySynchronizationContext__WorkRequest>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::__UnitySynchronizationContext__WorkRequest>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::__UnitySynchronizationContext__WorkRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__UnitySynchronizationContext__WorkRequest System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::__UnitySynchronizationContext__WorkRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::__UnitySynchronizationContext__WorkRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::__UnitySynchronizationContext__WorkRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::__UnitySynchronizationContext__WorkRequest  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4450 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToUpdate  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4449 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree,::Array<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::UIR::__UIRenderDevice__AllocToFree  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4448 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry,::Array<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::UIR::Implementation::__UIRStylePainter__Entry  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4447 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::__TreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4446 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData,::Array<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::SpatialTracking::__TrackedPoseDriverDataDescription__PoseData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4443 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TextureRegistry__TextureInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__TextureRegistry__TextureInfo,::Array<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TextureRegistry__TextureInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TextureRegistry__TextureInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::__TextureRegistry__TextureInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::__TextureRegistry__TextureInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4442 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* New_ctor(::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame,::Array<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::TMPro::SpriteAssetUtilities::__TexturePacker_JsonArray__Frame  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4441 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap,::Array<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::TextCore::Text::__TextSettings__FontReferenceMap  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4440 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride,::Array<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__TemplateAsset__AttributeOverride>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::__TemplateAsset__AttributeOverride  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4435 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction,::Array<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__SynchronizedActionQueue__SynchronizedAction  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4430 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest,::Array<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ResourceManagement::__ResourceManager__DeferredCallbackRegisterRequest  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4429 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData,::Array<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::UIR::__RenderChain__RenderNodeData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4411 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* New_ctor(::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast,::Array<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::VRUIControls::__PhysicsRaycasterWithCache__CachedRaycast  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4410 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog,::Array<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__PackedPlayModeBuildLogs__RuntimeBuildLog  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4409 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit,::Array<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__PSVR2Helper__HeadsetHapticFrequencyLimit  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4407 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor,::Array<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__OVRSpatialAnchor__UnboundAnchor  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4404 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry,::Array<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__OVRPassthroughLayer__SerializedSurfaceGeometry  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4403 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition,::Array<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__OVRPassthroughLayer__DeferredPassthroughMeshAddition  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4398 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue,::Array<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__MultiplierValuesRecorder__MultiplierValue  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4388 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper,::Array<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::__InternalTreeView__TreeViewItemWrapper  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4387 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem,::Array<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::Layouts::__InputControlLayout__ControlItem  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4386 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson,::Array<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::__InputActionMap__BindingOverrideJson  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4383 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData,::Array<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::HID::__HIDParser__HIDReportData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4382 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::HID::__HID__HIDElementDescriptor  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4381 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor,::Array<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::HID::__HID__HIDCollectionDescriptor  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4373 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::Tayx::Graphy::__GraphyDebugger__DebugCondition  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::Tayx::Graphy::__GraphyDebugger__DebugCondition  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* New_ctor(::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Tayx::Graphy::__GraphyDebugger__DebugCondition get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Tayx::Graphy::__GraphyDebugger__DebugCondition  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Tayx::Graphy::__GraphyDebugger__DebugCondition,::Array<::Tayx::Graphy::__GraphyDebugger__DebugCondition>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Tayx::Graphy::__GraphyDebugger__DebugCondition>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Tayx::Graphy::__GraphyDebugger__DebugCondition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Tayx::Graphy::__GraphyDebugger__DebugCondition System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::Tayx::Graphy::__GraphyDebugger__DebugCondition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::Tayx::Graphy::__GraphyDebugger__DebugCondition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::Tayx::Graphy::__GraphyDebugger__DebugCondition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::Tayx::Graphy::__GraphyDebugger__DebugCondition  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4369 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::__FocusController__FocusedElement  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::__FocusController__FocusedElement  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__FocusController__FocusedElement>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__FocusController__FocusedElement get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__FocusController__FocusedElement  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__FocusController__FocusedElement,::Array<::UnityEngine::UIElements::__FocusController__FocusedElement>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__FocusController__FocusedElement>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__FocusController__FocusedElement  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__FocusController__FocusedElement System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::__FocusController__FocusedElement  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::__FocusController__FocusedElement  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::__FocusController__FocusedElement  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::__FocusController__FocusedElement  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4358 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* New_ctor(::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__DisposeBlock__SpawnedObjectPoolPair get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::__DisposeBlock__SpawnedObjectPoolPair,::Array<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::__DisposeBlock__SpawnedObjectPoolPair>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__DisposeBlock__SpawnedObjectPoolPair System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::Zenject::__DisposeBlock__SpawnedObjectPoolPair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::Zenject::__DisposeBlock__SpawnedObjectPoolPair  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4356 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::Zenject::__DisposableManager__DisposableInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::Zenject::__DisposableManager__DisposableInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::Zenject::__DisposableManager__DisposableInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__DisposableManager__DisposableInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::__DisposableManager__DisposableInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::__DisposableManager__DisposableInfo>* New_ctor(::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::Zenject::__DisposableManager__DisposableInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__DisposableManager__DisposableInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::__DisposableManager__DisposableInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::__DisposableManager__DisposableInfo,::Array<::Zenject::__DisposableManager__DisposableInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::__DisposableManager__DisposableInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::__DisposableManager__DisposableInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::__DisposableManager__DisposableInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::Zenject::__DisposableManager__DisposableInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::Zenject::__DisposableManager__DisposableInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::Zenject::__DisposableManager__DisposableInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::Zenject::__DisposableManager__DisposableInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4353 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__DebugConsoleController__ConsoleMessage get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__DebugConsoleController__ConsoleMessage,::Array<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__DebugConsoleController__ConsoleMessage>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__DebugConsoleController__ConsoleMessage System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__DebugConsoleController__ConsoleMessage  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__DebugConsoleController__ConsoleMessage  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4349 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::__Camera__RenderRequest> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::__Camera__RenderRequest  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::__Camera__RenderRequest  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__Camera__RenderRequest>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__Camera__RenderRequest>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::__Camera__RenderRequest>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::__Camera__RenderRequest>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__Camera__RenderRequest get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::__Camera__RenderRequest  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::__Camera__RenderRequest,::Array<::UnityEngine::__Camera__RenderRequest>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::__Camera__RenderRequest>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::__Camera__RenderRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__Camera__RenderRequest System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::__Camera__RenderRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::__Camera__RenderRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::__Camera__RenderRequest  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::__Camera__RenderRequest  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4345 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page,::Array<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::UIR::__BitmapAllocator32__Page  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4344 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::__BeforeRenderHelper__OrderBlock  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::__BeforeRenderHelper__OrderBlock  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__BeforeRenderHelper__OrderBlock get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::__BeforeRenderHelper__OrderBlock  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::__BeforeRenderHelper__OrderBlock,::Array<::UnityEngine::__BeforeRenderHelper__OrderBlock>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::__BeforeRenderHelper__OrderBlock>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::__BeforeRenderHelper__OrderBlock  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::__BeforeRenderHelper__OrderBlock System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::__BeforeRenderHelper__OrderBlock  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::__BeforeRenderHelper__OrderBlock  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::__BeforeRenderHelper__OrderBlock  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::__BeforeRenderHelper__OrderBlock  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4322 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__BeatLine__HighlightData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__BeatLine__HighlightData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__BeatLine__HighlightData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__BeatLine__HighlightData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__BeatLine__HighlightData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__BeatLine__HighlightData>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__BeatLine__HighlightData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__BeatLine__HighlightData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__BeatLine__HighlightData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__BeatLine__HighlightData,::Array<::GlobalNamespace::__BeatLine__HighlightData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__BeatLine__HighlightData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__BeatLine__HighlightData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__BeatLine__HighlightData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__BeatLine__HighlightData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__BeatLine__HighlightData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__BeatLine__HighlightData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__BeatLine__HighlightData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4320 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo,::Array<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Timeline::__AnimationOutputWeightProcessor__WeightInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4316 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::XR::XRFeatureDescriptor get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::XR::XRFeatureDescriptor,::Array<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::XR::XRFeatureDescriptor>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::XR::XRFeatureDescriptor System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::XR::XRFeatureDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::XR::XRFeatureDescriptor  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4315 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Security::Cryptography::X509Certificates::X509ChainStatus  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Security::Cryptography::X509Certificates::X509ChainStatus  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* New_ctor(::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Security::Cryptography::X509Certificates::X509ChainStatus get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Security::Cryptography::X509Certificates::X509ChainStatus  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus,::Array<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Security::Cryptography::X509Certificates::X509ChainStatus  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Security::Cryptography::X509Certificates::X509ChainStatus System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Security::Cryptography::X509Certificates::X509ChainStatus  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Security::Cryptography::X509Certificates::X509ChainStatus  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Security::Cryptography::X509Certificates::X509ChainStatus  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Security::Cryptography::X509Certificates::X509ChainStatus  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4309 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::XR::UsageHint> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::XR::UsageHint  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::XR::UsageHint  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::XR::UsageHint>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::XR::UsageHint>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::XR::UsageHint>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::XR::UsageHint>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::XR::UsageHint get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::XR::UsageHint  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::XR::UsageHint,::Array<::UnityEngine::InputSystem::XR::UsageHint>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::XR::UsageHint>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::XR::UsageHint  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::XR::UsageHint System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::XR::UsageHint  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::XR::UsageHint  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::XR::UsageHint  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::XR::UsageHint  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4303 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::TreeInstance> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::TreeInstance  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::TreeInstance  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::TreeInstance>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TreeInstance>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TreeInstance>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TreeInstance>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TreeInstance>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::TreeInstance>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::TreeInstance>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TreeInstance get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::TreeInstance  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::TreeInstance,::Array<::UnityEngine::TreeInstance>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TreeInstance>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::TreeInstance  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TreeInstance System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::TreeInstance  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::TreeInstance  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::TreeInstance  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::TreeInstance  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4302 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::HoudiniEngineUnity::TransformData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::HoudiniEngineUnity::TransformData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::HoudiniEngineUnity::TransformData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::TransformData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::TransformData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::TransformData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::TransformData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::TransformData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::HoudiniEngineUnity::TransformData>* New_ctor(::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::HoudiniEngineUnity::TransformData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::TransformData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::HoudiniEngineUnity::TransformData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::HoudiniEngineUnity::TransformData,::Array<::HoudiniEngineUnity::TransformData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::TransformData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::HoudiniEngineUnity::TransformData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::TransformData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::HoudiniEngineUnity::TransformData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::HoudiniEngineUnity::TransformData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::HoudiniEngineUnity::TransformData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::HoudiniEngineUnity::TransformData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4278 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Rendering::SubMeshDescriptor> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Rendering::SubMeshDescriptor  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Rendering::SubMeshDescriptor  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rendering::SubMeshDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rendering::SubMeshDescriptor>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Rendering::SubMeshDescriptor>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Rendering::SubMeshDescriptor>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rendering::SubMeshDescriptor get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Rendering::SubMeshDescriptor  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Rendering::SubMeshDescriptor,::Array<::UnityEngine::Rendering::SubMeshDescriptor>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rendering::SubMeshDescriptor>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Rendering::SubMeshDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rendering::SubMeshDescriptor System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Rendering::SubMeshDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Rendering::SubMeshDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Rendering::SubMeshDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Rendering::SubMeshDescriptor  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4277 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::StyleVariable> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::StyleVariable  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::StyleVariable  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleVariable>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleVariable>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleVariable>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleVariable>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleVariable get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleVariable  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleVariable,::Array<::UnityEngine::UIElements::StyleVariable>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleVariable>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleVariable  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleVariable System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::StyleVariable  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::StyleVariable  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::StyleVariable  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::StyleVariable  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4276 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StyleValueManaged get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValueManaged,::Array<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StyleValueManaged>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StyleValueManaged System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StyleValueManaged  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::StyleSheets::StyleValueManaged  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4275 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::StyleSheets::StyleValue  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::StyleSheets::StyleValue  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StyleValue>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StyleValue get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::StyleValue  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::StyleValue,::Array<::UnityEngine::UIElements::StyleSheets::StyleValue>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StyleValue>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::StyleValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StyleValue System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StyleValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::StyleSheets::StyleValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StyleValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::StyleSheets::StyleValue  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4274 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken,::Array<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::StyleSheets::Syntax::StyleSyntaxToken  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4273 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSelectorPart> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::StyleSelectorPart  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::StyleSelectorPart  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSelectorPart>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSelectorPart>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSelectorPart>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSelectorPart>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSelectorPart get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSelectorPart  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSelectorPart,::Array<::UnityEngine::UIElements::StyleSelectorPart>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSelectorPart>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSelectorPart  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSelectorPart System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSelectorPart  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::StyleSelectorPart  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::StyleSelectorPart  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::StyleSelectorPart  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4271 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StylePropertyValue get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::StylePropertyValue,::Array<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::StylePropertyValue>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::StylePropertyValue System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::StylePropertyValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::StyleSheets::StylePropertyValue  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4263 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::RuleMatcher> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::RuleMatcher  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::RuleMatcher  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::RuleMatcher>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::RuleMatcher>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::RuleMatcher>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::RuleMatcher>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::RuleMatcher get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::RuleMatcher  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::RuleMatcher,::Array<::UnityEngine::UIElements::RuleMatcher>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::RuleMatcher>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::RuleMatcher  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::RuleMatcher System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::RuleMatcher  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::RuleMatcher  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::RuleMatcher  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::RuleMatcher  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4261 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::UIR::RenderChainTextEntry  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::UIR::RenderChainTextEntry  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::RenderChainTextEntry get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::RenderChainTextEntry  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::RenderChainTextEntry,::Array<::UnityEngine::UIElements::UIR::RenderChainTextEntry>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::RenderChainTextEntry>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::RenderChainTextEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::RenderChainTextEntry System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::RenderChainTextEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::UIR::RenderChainTextEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::UIR::RenderChainTextEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::UIR::RenderChainTextEntry  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4255 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::RaycastHit2D> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::RaycastHit2D  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::RaycastHit2D  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::RaycastHit2D>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::RaycastHit2D>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::RaycastHit2D>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::RaycastHit2D>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::RaycastHit2D>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::RaycastHit2D>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::RaycastHit2D>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::RaycastHit2D get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::RaycastHit2D  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::RaycastHit2D,::Array<::UnityEngine::RaycastHit2D>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::RaycastHit2D>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::RaycastHit2D  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::RaycastHit2D System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::RaycastHit2D  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::RaycastHit2D  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::RaycastHit2D  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::RaycastHit2D  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4238 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Util::ObjectInitializationData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::Util::ObjectInitializationData,::Array<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Util::ObjectInitializationData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Util::ObjectInitializationData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ResourceManagement::Util::ObjectInitializationData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ResourceManagement::Util::ObjectInitializationData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4231 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::MultiplayerAvatarData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::MultiplayerAvatarData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::MultiplayerAvatarData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::MultiplayerAvatarData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::MultiplayerAvatarData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::MultiplayerAvatarData>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::MultiplayerAvatarData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::MultiplayerAvatarData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::MultiplayerAvatarData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::MultiplayerAvatarData,::Array<::GlobalNamespace::MultiplayerAvatarData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::MultiplayerAvatarData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::MultiplayerAvatarData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::MultiplayerAvatarData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::MultiplayerAvatarData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::MultiplayerAvatarData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::MultiplayerAvatarData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::MultiplayerAvatarData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4227 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::MidiParser::MidiEvent> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::MidiParser::MidiEvent  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::MidiParser::MidiEvent  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::MidiParser::MidiEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::MidiParser::MidiEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::MidiParser::MidiEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::MidiParser::MidiEvent>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::MidiParser::MidiEvent>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::MidiParser::MidiEvent>* New_ctor(::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::MidiParser::MidiEvent>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::MidiParser::MidiEvent get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::MidiParser::MidiEvent  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::MidiParser::MidiEvent,::Array<::MidiParser::MidiEvent>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::MidiParser::MidiEvent>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::MidiParser::MidiEvent  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::MidiParser::MidiEvent System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::MidiParser::MidiEvent  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::MidiParser::MidiEvent  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::MidiParser::MidiEvent  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::MidiParser::MidiEvent  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4213 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::Newtonsoft::Json::JsonPosition> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::Newtonsoft::Json::JsonPosition  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::Newtonsoft::Json::JsonPosition  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Newtonsoft::Json::JsonPosition>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Newtonsoft::Json::JsonPosition>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Newtonsoft::Json::JsonPosition>* New_ctor(::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::Newtonsoft::Json::JsonPosition>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Newtonsoft::Json::JsonPosition get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Newtonsoft::Json::JsonPosition  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Newtonsoft::Json::JsonPosition,::Array<::Newtonsoft::Json::JsonPosition>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::JsonPosition>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Newtonsoft::Json::JsonPosition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Newtonsoft::Json::JsonPosition System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::Newtonsoft::Json::JsonPosition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::Newtonsoft::Json::JsonPosition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::Newtonsoft::Json::JsonPosition  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::Newtonsoft::Json::JsonPosition  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4212 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Timeline::IntervalTreeNode> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Timeline::IntervalTreeNode  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Timeline::IntervalTreeNode  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::IntervalTreeNode>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::IntervalTreeNode>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Timeline::IntervalTreeNode>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::IntervalTreeNode>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::IntervalTreeNode get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Timeline::IntervalTreeNode  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::IntervalTreeNode,::Array<::UnityEngine::Timeline::IntervalTreeNode>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::IntervalTreeNode>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Timeline::IntervalTreeNode  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::IntervalTreeNode System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Timeline::IntervalTreeNode  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Timeline::IntervalTreeNode  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Timeline::IntervalTreeNode  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Timeline::IntervalTreeNode  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4164 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_PartInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::HoudiniEngineUnity::HAPI_PartInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::HoudiniEngineUnity::HAPI_PartInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_PartInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_PartInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::HoudiniEngineUnity::HAPI_PartInfo>* New_ctor(::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::HoudiniEngineUnity::HAPI_PartInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::HAPI_PartInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::HoudiniEngineUnity::HAPI_PartInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::HoudiniEngineUnity::HAPI_PartInfo,::Array<::HoudiniEngineUnity::HAPI_PartInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::HoudiniEngineUnity::HAPI_PartInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::HoudiniEngineUnity::HAPI_PartInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::HoudiniEngineUnity::HAPI_PartInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::HoudiniEngineUnity::HAPI_PartInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::HoudiniEngineUnity::HAPI_PartInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::HoudiniEngineUnity::HAPI_PartInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::HoudiniEngineUnity::HAPI_PartInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4151 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* New_ctor(::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot,::Array<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::BeatSaber::BeatAvatarAdapter::AvatarEditor::EditAvatarHistorySnapshot  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4145 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::ComputedTransitionProperty> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::ComputedTransitionProperty  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::ComputedTransitionProperty  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::ComputedTransitionProperty>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ComputedTransitionProperty>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::ComputedTransitionProperty get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::ComputedTransitionProperty  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::ComputedTransitionProperty,::Array<::UnityEngine::UIElements::ComputedTransitionProperty>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::ComputedTransitionProperty>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::ComputedTransitionProperty  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::ComputedTransitionProperty System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::ComputedTransitionProperty  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::ComputedTransitionProperty  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::ComputedTransitionProperty  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::ComputedTransitionProperty  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4136 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::BezierCurve> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::BezierCurve  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::BezierCurve  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::BezierCurve>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::BezierCurve>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BezierCurve>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::BezierCurve>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::BezierCurve>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::BezierCurve>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::BezierCurve>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::BezierCurve get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::BezierCurve  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::BezierCurve,::Array<::GlobalNamespace::BezierCurve>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::BezierCurve>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::BezierCurve  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::BezierCurve System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::BezierCurve  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::BezierCurve  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::BezierCurve  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::BezierCurve  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4125 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::AnimatorClipInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::AnimatorClipInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::AnimatorClipInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::AnimatorClipInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::AnimatorClipInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::AnimatorClipInfo>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::AnimatorClipInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::AnimatorClipInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::AnimatorClipInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::AnimatorClipInfo,::Array<::UnityEngine::AnimatorClipInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::AnimatorClipInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::AnimatorClipInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::AnimatorClipInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::AnimatorClipInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::AnimatorClipInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::AnimatorClipInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::AnimatorClipInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_0>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 4082 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* New_ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>,::Array<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Collections::Generic::KeyValuePair_2<::UnityEngine::PropertyName,TValue_cordlgen_0>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3970 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo,::Array<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ResourceManagement::Util::__DelayedActionManager__DelegateInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3621 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo,::Array<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::UIR::__TextureBlitter__BlitInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3620 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIVertex> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIVertex  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIVertex  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIVertex>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIVertex>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIVertex>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIVertex>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIVertex>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIVertex>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIVertex get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIVertex  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIVertex,::Array<::UnityEngine::UIVertex>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIVertex>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIVertex  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIVertex System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIVertex  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIVertex  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIVertex  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIVertex  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3619 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UILineInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UILineInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UILineInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UILineInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UILineInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UILineInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UILineInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UILineInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UILineInfo>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UILineInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UILineInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UILineInfo,::Array<::UnityEngine::UILineInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UILineInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UILineInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UILineInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UILineInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UILineInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UILineInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UILineInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3618 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UICharInfo> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UICharInfo  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UICharInfo  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UICharInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UICharInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UICharInfo>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UICharInfo>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UICharInfo>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UICharInfo>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UICharInfo get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UICharInfo  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UICharInfo,::Array<::UnityEngine::UICharInfo>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UICharInfo>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UICharInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UICharInfo System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UICharInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UICharInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UICharInfo  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UICharInfo  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3607 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Reflection::CustomAttributeTypedArgument> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeTypedArgument>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Reflection::CustomAttributeTypedArgument  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Reflection::CustomAttributeTypedArgument  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeTypedArgument>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeTypedArgument>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Reflection::CustomAttributeTypedArgument>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Reflection::CustomAttributeTypedArgument>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Reflection::CustomAttributeTypedArgument>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Reflection::CustomAttributeTypedArgument>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Reflection::CustomAttributeTypedArgument>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Reflection::CustomAttributeTypedArgument>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Reflection::CustomAttributeTypedArgument>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Reflection::CustomAttributeTypedArgument>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeTypedArgument>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeTypedArgument>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeTypedArgument>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Reflection::CustomAttributeTypedArgument>* New_ctor(::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeTypedArgument>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeTypedArgument>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Reflection::CustomAttributeTypedArgument get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Reflection::CustomAttributeTypedArgument  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Reflection::CustomAttributeTypedArgument,::Array<::System::Reflection::CustomAttributeTypedArgument>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Reflection::CustomAttributeTypedArgument>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Reflection::CustomAttributeTypedArgument  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Reflection::CustomAttributeTypedArgument System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Reflection::CustomAttributeTypedArgument  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Reflection::CustomAttributeTypedArgument  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Reflection::CustomAttributeTypedArgument  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Reflection::CustomAttributeTypedArgument  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3606 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Reflection::CustomAttributeNamedArgument> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeNamedArgument>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Reflection::CustomAttributeNamedArgument  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Reflection::CustomAttributeNamedArgument  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeNamedArgument>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeNamedArgument>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Reflection::CustomAttributeNamedArgument>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Reflection::CustomAttributeNamedArgument>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Reflection::CustomAttributeNamedArgument>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Reflection::CustomAttributeNamedArgument>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Reflection::CustomAttributeNamedArgument>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Reflection::CustomAttributeNamedArgument>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Reflection::CustomAttributeNamedArgument>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Reflection::CustomAttributeNamedArgument>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeNamedArgument>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeNamedArgument>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeNamedArgument>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Reflection::CustomAttributeNamedArgument>* New_ctor(::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeNamedArgument>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeNamedArgument>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Reflection::CustomAttributeNamedArgument get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Reflection::CustomAttributeNamedArgument  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Reflection::CustomAttributeNamedArgument,::Array<::System::Reflection::CustomAttributeNamedArgument>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Reflection::CustomAttributeNamedArgument>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Reflection::CustomAttributeNamedArgument  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Reflection::CustomAttributeNamedArgument System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Reflection::CustomAttributeNamedArgument  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Reflection::CustomAttributeNamedArgument  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Reflection::CustomAttributeNamedArgument  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Reflection::CustomAttributeNamedArgument  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3604 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ProBuilder::BezierPoint> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ProBuilder::BezierPoint  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ProBuilder::BezierPoint  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::BezierPoint>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::BezierPoint>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::BezierPoint>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::BezierPoint>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::BezierPoint get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::BezierPoint  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::BezierPoint,::Array<::UnityEngine::ProBuilder::BezierPoint>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::BezierPoint>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::BezierPoint  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::BezierPoint System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ProBuilder::BezierPoint  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ProBuilder::BezierPoint  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ProBuilder::BezierPoint  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ProBuilder::BezierPoint  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3591 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::ArraySegment_1<uint8_t>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::ArraySegment_1<uint8_t>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::ArraySegment_1<uint8_t>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::ArraySegment_1<uint8_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::ArraySegment_1<uint8_t>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::ArraySegment_1<uint8_t>>* New_ctor(::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ArraySegment_1<uint8_t> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::ArraySegment_1<uint8_t>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::ArraySegment_1<uint8_t>,::Array<::System::ArraySegment_1<uint8_t>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::ArraySegment_1<uint8_t>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::ArraySegment_1<uint8_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::ArraySegment_1<uint8_t> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::ArraySegment_1<uint8_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::ArraySegment_1<uint8_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::ArraySegment_1<uint8_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::ArraySegment_1<uint8_t>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3386 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue,::Array<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::Utilities::__JsonParser__JsonValue  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3372 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ProBuilder::Triangle> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ProBuilder::Triangle  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ProBuilder::Triangle  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::Triangle>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::Triangle>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::Triangle>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Triangle>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::Triangle get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::Triangle  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::Triangle,::Array<::UnityEngine::ProBuilder::Triangle>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::Triangle>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::Triangle  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::Triangle System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ProBuilder::Triangle  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ProBuilder::Triangle  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ProBuilder::Triangle  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ProBuilder::Triangle  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3368 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::TimeValue> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::TimeValue  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::TimeValue  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::TimeValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::TimeValue>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::TimeValue>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::TimeValue>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::TimeValue get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::TimeValue  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::TimeValue,::Array<::UnityEngine::UIElements::TimeValue>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::TimeValue>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::TimeValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::TimeValue System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::TimeValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::TimeValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::TimeValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::TimeValue  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3345 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Rect> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Rect>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Rect  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Rect  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Rect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Rect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rect>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rect>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rect>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Rect>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Rect>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Rect>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Rect>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Rect>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Rect>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rect get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Rect  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Rect,::Array<::UnityEngine::Rect>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rect>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Rect  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rect System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Rect  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Rect  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Rect  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Rect  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3342 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Quaternion> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Quaternion  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Quaternion  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Quaternion>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Quaternion>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Quaternion>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Quaternion>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Quaternion>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Quaternion>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Quaternion>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Quaternion get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Quaternion  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Quaternion,::Array<::UnityEngine::Quaternion>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Quaternion>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Quaternion  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Quaternion System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Quaternion  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Quaternion  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Quaternion  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Quaternion  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3333 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Playables::Playable> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Playables::Playable  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Playables::Playable  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Playables::Playable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::Playable>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Playables::Playable>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Playables::Playable>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Playables::Playable>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Playables::Playable>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Playables::Playable>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Playables::Playable get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Playables::Playable  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Playables::Playable,::Array<::UnityEngine::Playables::Playable>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::Playable>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Playables::Playable  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Playables::Playable System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Playables::Playable  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Playables::Playable  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Playables::Playable  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Playables::Playable  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3316 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Matrix4x4> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Matrix4x4  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Matrix4x4  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Matrix4x4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Matrix4x4>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Matrix4x4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Matrix4x4>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Matrix4x4>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Matrix4x4>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Matrix4x4>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Matrix4x4 get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Matrix4x4  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Matrix4x4,::Array<::UnityEngine::Matrix4x4>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Matrix4x4>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Matrix4x4  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Matrix4x4 System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Matrix4x4  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Matrix4x4  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Matrix4x4  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Matrix4x4  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3314 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::ManipulatorActivationFilter  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::ManipulatorActivationFilter  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::ManipulatorActivationFilter>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::ManipulatorActivationFilter get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::ManipulatorActivationFilter  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::ManipulatorActivationFilter,::Array<::UnityEngine::UIElements::ManipulatorActivationFilter>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::ManipulatorActivationFilter>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::ManipulatorActivationFilter  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::ManipulatorActivationFilter System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::ManipulatorActivationFilter  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::ManipulatorActivationFilter  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::ManipulatorActivationFilter  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::ManipulatorActivationFilter  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3301 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Layouts::InputDeviceDescription get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Layouts::InputDeviceDescription,::Array<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Layouts::InputDeviceDescription System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::Layouts::InputDeviceDescription  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::Layouts::InputDeviceDescription  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3291 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::TextCore::GlyphRect> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::TextCore::GlyphRect  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::TextCore::GlyphRect  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::GlyphRect>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::GlyphRect>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::TextCore::GlyphRect>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::TextCore::GlyphRect>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::GlyphRect get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::TextCore::GlyphRect  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::TextCore::GlyphRect,::Array<::UnityEngine::TextCore::GlyphRect>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::GlyphRect>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::TextCore::GlyphRect  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::GlyphRect System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::TextCore::GlyphRect  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::TextCore::GlyphRect  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::TextCore::GlyphRect  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::TextCore::GlyphRect  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3290 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord,::Array<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3282 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::EasingFunction> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::EasingFunction  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::EasingFunction  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::EasingFunction>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::EasingFunction>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::EasingFunction>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::EasingFunction>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::EasingFunction get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::EasingFunction  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::EasingFunction,::Array<::UnityEngine::UIElements::EasingFunction>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::EasingFunction>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::EasingFunction  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::EasingFunction System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::EasingFunction  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::EasingFunction  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::EasingFunction  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::EasingFunction  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3131 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::Zenject::TypeValuePair> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::Zenject::TypeValuePair  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::Zenject::TypeValuePair  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::TypeValuePair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::TypeValuePair>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::TypeValuePair>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::TypeValuePair>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::TypeValuePair>* New_ctor(::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::Zenject::TypeValuePair>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::TypeValuePair get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::TypeValuePair  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::TypeValuePair,::Array<::Zenject::TypeValuePair>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::TypeValuePair>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::TypeValuePair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::TypeValuePair System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::Zenject::TypeValuePair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::Zenject::TypeValuePair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::Zenject::TypeValuePair  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::Zenject::TypeValuePair  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3121 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::SceneManagement::Scene> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::SceneManagement::Scene  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::SceneManagement::Scene  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::SceneManagement::Scene>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::SceneManagement::Scene>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::SceneManagement::Scene>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::SceneManagement::Scene>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::SceneManagement::Scene get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::SceneManagement::Scene  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::SceneManagement::Scene,::Array<::UnityEngine::SceneManagement::Scene>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::SceneManagement::Scene>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::SceneManagement::Scene  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::SceneManagement::Scene System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::SceneManagement::Scene  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::SceneManagement::Scene  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::SceneManagement::Scene  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::SceneManagement::Scene  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3116 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Playables::PlayableBinding> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Playables::PlayableBinding  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Playables::PlayableBinding  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Playables::PlayableBinding>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Playables::PlayableBinding>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Playables::PlayableBinding>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableBinding>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Playables::PlayableBinding get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Playables::PlayableBinding  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Playables::PlayableBinding,::Array<::UnityEngine::Playables::PlayableBinding>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Playables::PlayableBinding  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Playables::PlayableBinding System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Playables::PlayableBinding  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Playables::PlayableBinding  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Playables::PlayableBinding  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Playables::PlayableBinding  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3114 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NamedValue> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::Utilities::NamedValue  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::Utilities::NamedValue  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NamedValue>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NamedValue>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::NamedValue get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::NamedValue  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::NamedValue,::Array<::UnityEngine::InputSystem::Utilities::NamedValue>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::NamedValue>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::NamedValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::NamedValue System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::NamedValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::Utilities::NamedValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::NamedValue  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::Utilities::NamedValue  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3113 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::Utilities::NameAndParameters  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::Utilities::NameAndParameters  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::NameAndParameters get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::NameAndParameters  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::NameAndParameters,::Array<::UnityEngine::InputSystem::Utilities::NameAndParameters>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::NameAndParameters>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::NameAndParameters  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::NameAndParameters System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::NameAndParameters  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::Utilities::NameAndParameters  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::NameAndParameters  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::Utilities::NameAndParameters  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3105 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::InputBinding> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::InputBinding  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::InputBinding  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::InputBinding>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::InputBinding>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::InputBinding>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::InputBinding>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::InputBinding get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::InputBinding  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::InputBinding,::Array<::UnityEngine::InputSystem::InputBinding>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputBinding>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::InputBinding  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::InputBinding System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::InputBinding  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::InputBinding  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::InputBinding  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::InputBinding  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3081 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::Zenject::BindingId> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::Zenject::BindingId>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::Zenject::BindingId  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::Zenject::BindingId  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::IList_1<::Zenject::BindingId>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::Zenject::BindingId>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::Zenject::BindingId>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::Zenject::BindingId>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::BindingId>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::Zenject::BindingId>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::Zenject::BindingId>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::Zenject::BindingId>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::Zenject::BindingId>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::Zenject::BindingId>* New_ctor(::System::Collections::Generic::IList_1<::Zenject::BindingId>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::Zenject::BindingId>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::BindingId get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::Zenject::BindingId  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::Zenject::BindingId,::Array<::Zenject::BindingId>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::Zenject::BindingId>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::Zenject::BindingId  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::Zenject::BindingId System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::Zenject::BindingId  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::Zenject::BindingId  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::Zenject::BindingId  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::Zenject::BindingId  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type TKey_cordlgen_0,::il2cpp_utils::il2cpp_reference_type TValue_cordlgen_1>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3058 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* New_ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>,::Array<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Collections::Generic::KeyValuePair_2<TKey_cordlgen_0,TValue_cordlgen_1>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 3057 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* New_ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>,::Array<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Collections::Generic::KeyValuePair_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2738 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* New_ctor(::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Text::RegularExpressions::__RegexCharClass__SingleRange get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Text::RegularExpressions::__RegexCharClass__SingleRange,::Array<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Text::RegularExpressions::__RegexCharClass__SingleRange>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Text::RegularExpressions::__RegexCharClass__SingleRange System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Text::RegularExpressions::__RegexCharClass__SingleRange  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Text::RegularExpressions::__RegexCharClass__SingleRange  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2711 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::TimeSpan> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::TimeSpan>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::TimeSpan  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::TimeSpan  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::TimeSpan>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::TimeSpan>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::TimeSpan>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::TimeSpan>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::TimeSpan>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::TimeSpan>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::TimeSpan>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::TimeSpan>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::TimeSpan>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::TimeSpan>* New_ctor(::System::Collections::Generic::IList_1<::System::TimeSpan>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::TimeSpan>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::TimeSpan get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::TimeSpan  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::TimeSpan,::Array<::System::TimeSpan>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::TimeSpan>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::TimeSpan  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::TimeSpan System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::TimeSpan  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::TimeSpan  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::TimeSpan  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::TimeSpan  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2710 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::Substring> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::Utilities::Substring  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::Utilities::Substring  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::Substring>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::Substring>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::Substring>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::Substring>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::Substring get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::Substring  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::Substring,::Array<::UnityEngine::InputSystem::Utilities::Substring>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::Substring>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::Substring  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::Substring System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::Substring  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::Utilities::Substring  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::Substring  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::Utilities::Substring  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2707 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<int8_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<int8_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) int8_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) int8_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<int8_t>"
constexpr operator  ::System::Collections::Generic::IList_1<int8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<int8_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<int8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<int8_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<int8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<int8_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<int8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<int8_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<int8_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<int8_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<int8_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<int8_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<int8_t>* New_ctor(::System::Collections::Generic::IList_1<int8_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<int8_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int8_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(int8_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<int8_t,::Array<int8_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<int8_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(int8_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int8_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, int8_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(int8_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, int8_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(int8_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2704 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<double_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<double_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) double_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) double_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<double_t>"
constexpr operator  ::System::Collections::Generic::IList_1<double_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<double_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<double_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<double_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<double_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<double_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<double_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<double_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<double_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<double_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<double_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<double_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<double_t>* New_ctor(::System::Collections::Generic::IList_1<double_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<double_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline double_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(double_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<double_t,::Array<double_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<double_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(double_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline double_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, double_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(double_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, double_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(double_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2703 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Decimal> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Decimal>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Decimal  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Decimal  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Decimal>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Decimal>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Decimal>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Decimal>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Decimal>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Decimal>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Decimal>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Decimal>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Decimal>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Decimal>* New_ctor(::System::Collections::Generic::IList_1<::System::Decimal>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Decimal>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Decimal get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Decimal  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Decimal,::Array<::System::Decimal>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Decimal>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Decimal  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Decimal System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Decimal  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Decimal  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Decimal  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Decimal  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2702 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::DateTimeOffset> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::DateTimeOffset>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::DateTimeOffset  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::DateTimeOffset  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::DateTimeOffset>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::DateTimeOffset>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::DateTimeOffset>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::DateTimeOffset>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::DateTimeOffset>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::DateTimeOffset>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::DateTimeOffset>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::DateTimeOffset>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::DateTimeOffset>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::DateTimeOffset>* New_ctor(::System::Collections::Generic::IList_1<::System::DateTimeOffset>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::DateTimeOffset>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::DateTimeOffset get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::DateTimeOffset  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::DateTimeOffset,::Array<::System::DateTimeOffset>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::DateTimeOffset>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::DateTimeOffset  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::DateTimeOffset System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::DateTimeOffset  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::DateTimeOffset  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::DateTimeOffset  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::DateTimeOffset  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2701 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::DateTime> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::DateTime>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::DateTime  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::DateTime  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::DateTime>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::DateTime>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::DateTime>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::DateTime>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::DateTime>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::DateTime>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::DateTime>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::DateTime>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::DateTime>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::DateTime>* New_ctor(::System::Collections::Generic::IList_1<::System::DateTime>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::DateTime>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::DateTime get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::DateTime  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::DateTime,::Array<::System::DateTime>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::DateTime>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::DateTime  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::DateTime System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::DateTime  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::DateTime  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::DateTime  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::DateTime  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2598 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::InternedString> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::Utilities::InternedString  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::Utilities::InternedString  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::InternedString>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::InternedString>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::Utilities::InternedString>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::Utilities::InternedString>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::InternedString get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::Utilities::InternedString  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::Utilities::InternedString,::Array<::UnityEngine::InputSystem::Utilities::InternedString>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::Utilities::InternedString>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::Utilities::InternedString  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::Utilities::InternedString System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::Utilities::InternedString  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::Utilities::InternedString  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::Utilities::InternedString  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::Utilities::InternedString  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2593 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ProBuilder::EdgeLookup> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ProBuilder::EdgeLookup  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ProBuilder::EdgeLookup  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::EdgeLookup>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::EdgeLookup>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::EdgeLookup>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::EdgeLookup>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::EdgeLookup get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::EdgeLookup  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::EdgeLookup,::Array<::UnityEngine::ProBuilder::EdgeLookup>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::EdgeLookup>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::EdgeLookup  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::EdgeLookup System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ProBuilder::EdgeLookup  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ProBuilder::EdgeLookup  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ProBuilder::EdgeLookup  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ProBuilder::EdgeLookup  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2592 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ProBuilder::Edge  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ProBuilder::Edge  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Edge>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::Edge get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::Edge  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::Edge,::Array<::UnityEngine::ProBuilder::Edge>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::Edge>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::Edge  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::Edge System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ProBuilder::Edge  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ProBuilder::Edge  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ProBuilder::Edge  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ProBuilder::Edge  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1698 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry,::Array<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::__VisualTreeAsset__UsingEntry  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1693 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::StylePropertyName> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::StylePropertyName  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::StylePropertyName  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StylePropertyName>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StylePropertyName>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StylePropertyName>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StylePropertyName>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StylePropertyName get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StylePropertyName  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StylePropertyName,::Array<::UnityEngine::UIElements::StylePropertyName>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StylePropertyName>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StylePropertyName  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StylePropertyName System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::StylePropertyName  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::StylePropertyName  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::StylePropertyName  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::StylePropertyName  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1058 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* New_ctor(::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult,::Array<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::VRUIControls::__VRGraphicRaycaster__VRGraphicRaycastResult  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1057 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData,::Array<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::UI::__TrackedDeviceRaycaster__RaycastHitData  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1055 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry,::Array<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Timeline::__TimeNotificationBehaviour__NotificationEntry  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1054 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::__OVRRaycaster__RaycastHit  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::__OVRRaycaster__RaycastHit  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRRaycaster__RaycastHit get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::__OVRRaycaster__RaycastHit  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::__OVRRaycaster__RaycastHit,::Array<::GlobalNamespace::__OVRRaycaster__RaycastHit>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::__OVRRaycaster__RaycastHit>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::__OVRRaycaster__RaycastHit  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::__OVRRaycaster__RaycastHit System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::__OVRRaycaster__RaycastHit  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::__OVRRaycaster__RaycastHit  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::__OVRRaycaster__RaycastHit  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::__OVRRaycaster__RaycastHit  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1051 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord,::Array<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::UIElements::StyleSheets::SelectorMatchRecord  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1050 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::EventSystems::RaycastResult> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::EventSystems::RaycastResult  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::EventSystems::RaycastResult  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::EventSystems::RaycastResult>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::EventSystems::RaycastResult>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::EventSystems::RaycastResult>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::EventSystems::RaycastResult>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::EventSystems::RaycastResult get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::EventSystems::RaycastResult  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::EventSystems::RaycastResult,::Array<::UnityEngine::EventSystems::RaycastResult>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::EventSystems::RaycastResult>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::EventSystems::RaycastResult  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::EventSystems::RaycastResult System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::EventSystems::RaycastResult  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::EventSystems::RaycastResult  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::EventSystems::RaycastResult  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::EventSystems::RaycastResult  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1048 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::OVRSpaceUser> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::OVRSpaceUser  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::OVRSpaceUser  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::OVRSpaceUser>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::OVRSpaceUser>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::OVRSpaceUser>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRSpaceUser>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::OVRSpaceUser get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::OVRSpaceUser  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::OVRSpaceUser,::Array<::GlobalNamespace::OVRSpaceUser>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::OVRSpaceUser>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::OVRSpaceUser  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::OVRSpaceUser System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::OVRSpaceUser  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::OVRSpaceUser  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::OVRSpaceUser  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::OVRSpaceUser  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1041 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ProBuilder::SimpleTuple_2<float_t,::UnityEngine::Vector2>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 1040 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>,::Array<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t> System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ProBuilder::SimpleTuple_2<int32_t,int32_t>  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 980 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::GlobalNamespace::OVRAnchor> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::GlobalNamespace::OVRAnchor  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::GlobalNamespace::OVRAnchor  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::GlobalNamespace::OVRAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::OVRAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::OVRAnchor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::OVRAnchor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::OVRAnchor>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::GlobalNamespace::OVRAnchor>* New_ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::GlobalNamespace::OVRAnchor>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::OVRAnchor get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::GlobalNamespace::OVRAnchor  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::GlobalNamespace::OVRAnchor,::Array<::GlobalNamespace::OVRAnchor>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::OVRAnchor>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::GlobalNamespace::OVRAnchor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::GlobalNamespace::OVRAnchor System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::GlobalNamespace::OVRAnchor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::GlobalNamespace::OVRAnchor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::GlobalNamespace::OVRAnchor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::GlobalNamespace::OVRAnchor  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::cordl_internals::is_or_is_backed_by<int32_t> T>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 974 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<T> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<T>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) T  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) T  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<T>"
constexpr operator  ::System::Collections::Generic::IList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<T>"
constexpr operator  ::System::Collections::Generic::ICollection_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<T>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<T>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<T>*  value) ;

constexpr ::System::Collections::Generic::IList_1<T>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<T>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<T>* New_ctor(::System::Collections::Generic::IList_1<T>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<T>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline T get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(T  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<T,::Array<T>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<T>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline T System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(T  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 757 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Rendering::VertexAttributeDescriptor  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Rendering::VertexAttributeDescriptor  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Rendering::VertexAttributeDescriptor>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rendering::VertexAttributeDescriptor get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Rendering::VertexAttributeDescriptor  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Rendering::VertexAttributeDescriptor,::Array<::UnityEngine::Rendering::VertexAttributeDescriptor>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Rendering::VertexAttributeDescriptor>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Rendering::VertexAttributeDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Rendering::VertexAttributeDescriptor System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Rendering::VertexAttributeDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Rendering::VertexAttributeDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Rendering::VertexAttributeDescriptor  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Rendering::VertexAttributeDescriptor  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 755 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Vector4> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Vector4>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Vector4  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Vector4  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Vector4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Vector4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector4>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector4>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector4>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector4>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Vector4>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Vector4>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Vector4>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector4>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Vector4>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Vector4>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector4 get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Vector4  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Vector4,::Array<::UnityEngine::Vector4>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector4>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Vector4  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector4 System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Vector4  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Vector4  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Vector4  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Vector4  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 754 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Vector3Int> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Vector3Int  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Vector3Int  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Vector3Int>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3Int>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3Int>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector3Int>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector3Int>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector3Int>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Vector3Int>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector3Int get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Vector3Int  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Vector3Int,::Array<::UnityEngine::Vector3Int>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector3Int>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Vector3Int  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector3Int System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Vector3Int  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Vector3Int  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Vector3Int  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Vector3Int  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 753 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<uint32_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<uint32_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) uint32_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) uint32_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::IList_1<uint32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<uint32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<uint32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<uint32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<uint32_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<uint32_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<uint32_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<uint32_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<uint32_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<uint32_t>* New_ctor(::System::Collections::Generic::IList_1<uint32_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<uint32_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint32_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(uint32_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<uint32_t,::Array<uint32_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<uint32_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(uint32_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint32_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, uint32_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(uint32_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, uint32_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(uint32_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 752 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<uint16_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<uint16_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) uint16_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) uint16_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::IList_1<uint16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<uint16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<uint16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<uint16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<uint16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<uint16_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<uint16_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<uint16_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<uint16_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<uint16_t>* New_ctor(::System::Collections::Generic::IList_1<uint16_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<uint16_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint16_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(uint16_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<uint16_t,::Array<uint16_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<uint16_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(uint16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint16_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, uint16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(uint16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, uint16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(uint16_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 745 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<int16_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<int16_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) int16_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) int16_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<int16_t>"
constexpr operator  ::System::Collections::Generic::IList_1<int16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<int16_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<int16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<int16_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<int16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<int16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<int16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<int16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<int16_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<int16_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<int16_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<int16_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<int16_t>* New_ctor(::System::Collections::Generic::IList_1<int16_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<int16_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int16_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(int16_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<int16_t,::Array<int16_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<int16_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(int16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int16_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, int16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(int16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, int16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(int16_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 742 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Color32> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Color32>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Color32  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Color32  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Color32>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Color32>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color32>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Color32>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Color32>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Color32>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Color32>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Color32>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Color32>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Color32>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Color32>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Color32>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Color32 get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Color32  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Color32,::Array<::UnityEngine::Color32>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Color32>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Color32  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Color32 System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Color32  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Color32  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Color32  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Color32  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 741 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<uint8_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<uint8_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) uint8_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) uint8_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::IList_1<uint8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<uint8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<uint8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<uint8_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<uint8_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<uint8_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<uint8_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<uint8_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<uint8_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<uint8_t>* New_ctor(::System::Collections::Generic::IList_1<uint8_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<uint8_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint8_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(uint8_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<uint8_t,::Array<uint8_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<uint8_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(uint8_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint8_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, uint8_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(uint8_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, uint8_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(uint8_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 739 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::BoneWeight> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::BoneWeight  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::BoneWeight  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::BoneWeight>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::BoneWeight>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::BoneWeight>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::BoneWeight>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::BoneWeight>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::BoneWeight>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::BoneWeight>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::BoneWeight get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::BoneWeight  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::BoneWeight,::Array<::UnityEngine::BoneWeight>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::BoneWeight>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::BoneWeight  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::BoneWeight System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::BoneWeight  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::BoneWeight  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::BoneWeight  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::BoneWeight  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 417 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::XR::XRNodeState> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::XR::XRNodeState  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::XR::XRNodeState  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::XR::XRNodeState>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::XR::XRNodeState>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::XR::XRNodeState>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::XR::XRNodeState>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::XR::XRNodeState>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::XR::XRNodeState>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::XR::XRNodeState>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::XR::XRNodeState get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::XR::XRNodeState  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::XR::XRNodeState,::Array<::UnityEngine::XR::XRNodeState>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::XR::XRNodeState>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::XR::XRNodeState  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::XR::XRNodeState System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::XR::XRNodeState  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::XR::XRNodeState  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::XR::XRNodeState  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::XR::XRNodeState  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 412 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Vector3> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Vector3>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Vector3  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Vector3  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Vector3>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Vector3>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector3>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector3>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Vector3>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Vector3>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Vector3>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector3>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Vector3>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Vector3>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector3 get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Vector3  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Vector3,::Array<::UnityEngine::Vector3>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector3>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Vector3  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector3 System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Vector3  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Vector3  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Vector3  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Vector3  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 411 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Vector2> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Vector2>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Vector2  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Vector2  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Vector2>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Vector2>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector2>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector2>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector2>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Vector2>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Vector2>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Vector2>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Vector2>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector2>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Vector2>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Vector2>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector2 get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Vector2  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Vector2,::Array<::UnityEngine::Vector2>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Vector2>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Vector2  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Vector2 System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Vector2  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Vector2  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Vector2  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Vector2  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 407 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<uint64_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<uint64_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) uint64_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) uint64_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::IList_1<uint64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<uint64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<uint64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<uint64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<uint64_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<uint64_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<uint64_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<uint64_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<uint64_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<uint64_t>* New_ctor(::System::Collections::Generic::IList_1<uint64_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<uint64_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint64_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(uint64_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<uint64_t,::Array<uint64_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<uint64_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(uint64_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline uint64_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, uint64_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(uint64_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, uint64_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(uint64_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 391 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<float_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<float_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) float_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) float_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<float_t>"
constexpr operator  ::System::Collections::Generic::IList_1<float_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<float_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<float_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<float_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<float_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<float_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<float_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<float_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<float_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<float_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<float_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<float_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<float_t>* New_ctor(::System::Collections::Generic::IList_1<float_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<float_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline float_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(float_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<float_t,::Array<float_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<float_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(float_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline float_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, float_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(float_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, float_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(float_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 333 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<int64_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<int64_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) int64_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) int64_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<int64_t>"
constexpr operator  ::System::Collections::Generic::IList_1<int64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<int64_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<int64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<int64_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<int64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<int64_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<int64_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<int64_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<int64_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<int64_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<int64_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<int64_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<int64_t>* New_ctor(::System::Collections::Generic::IList_1<int64_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<int64_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int64_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(int64_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<int64_t,::Array<int64_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<int64_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(int64_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int64_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, int64_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(int64_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, int64_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(int64_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 330 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::InputSystem::LowLevel::InputEventPtr  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::InputSystem::LowLevel::InputEventPtr  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::LowLevel::InputEventPtr get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::InputSystem::LowLevel::InputEventPtr  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::InputSystem::LowLevel::InputEventPtr,::Array<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::InputSystem::LowLevel::InputEventPtr  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::InputSystem::LowLevel::InputEventPtr System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::InputSystem::LowLevel::InputEventPtr  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::InputSystem::LowLevel::InputEventPtr  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::InputSystem::LowLevel::InputEventPtr  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::InputSystem::LowLevel::InputEventPtr  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 314 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::System::Guid> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::System::Guid>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::System::Guid  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::System::Guid  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::IList_1<::System::Guid>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::System::Guid>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::System::Guid>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::System::Guid>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::System::Guid>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::System::Guid>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::System::Guid>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::System::Guid>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::System::Guid>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Guid>* New_ctor(::System::Collections::Generic::IList_1<::System::Guid>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::System::Guid>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Guid get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::System::Guid  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::System::Guid,::Array<::System::Guid>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::System::Guid>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::System::Guid  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Guid System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::System::Guid  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::System::Guid  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::System::Guid  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::System::Guid  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 302 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent,::Array<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 293 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::Color> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::Color>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::Color  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::Color  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::Color>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::Color>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Color>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Color>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Color>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::Color>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::Color>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::Color>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::Color>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Color>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::Color>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::Color>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Color get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::Color  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::Color,::Array<::UnityEngine::Color>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Color>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::Color  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::Color System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::Color  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::Color  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::Color  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::Color  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(3815)), TypeDefinitionIndex(TypeDefinitionIndex(2613))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 292 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<char16_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<char16_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) char16_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) char16_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<char16_t>"
constexpr operator  ::System::Collections::Generic::IList_1<char16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<char16_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<char16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<char16_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<char16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<char16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<char16_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<char16_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<char16_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<char16_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<char16_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<char16_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<char16_t>* New_ctor(::System::Collections::Generic::IList_1<char16_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<char16_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline char16_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(char16_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<char16_t,::Array<char16_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<char16_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(char16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline char16_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, char16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(char16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, char16_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(char16_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 275 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::ICollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  value) ;

constexpr ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* New_ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle,::Array<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 105 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<bool> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<bool>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) bool  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) bool  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<bool>"
constexpr operator  ::System::Collections::Generic::IList_1<bool>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<bool>"
constexpr operator  ::System::Collections::Generic::ICollection_1<bool>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<bool>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<bool>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<bool>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<bool>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<bool>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<bool>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<bool>*  value) ;

constexpr ::System::Collections::Generic::IList_1<bool>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<bool>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<bool>* New_ctor(::System::Collections::Generic::IList_1<bool>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<bool>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(bool  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<bool,::Array<bool>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<bool>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(bool  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, bool  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(bool  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, bool  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(bool  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 98 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<int32_t> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<int32_t>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) int32_t  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) int32_t  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<int32_t>"
constexpr operator  ::System::Collections::Generic::IList_1<int32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<int32_t>"
constexpr operator  ::System::Collections::Generic::ICollection_1<int32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<int32_t>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<int32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<int32_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<int32_t>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<int32_t>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<int32_t>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<int32_t>*  value) ;

constexpr ::System::Collections::Generic::IList_1<int32_t>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<int32_t>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<int32_t>* New_ctor(::System::Collections::Generic::IList_1<int32_t>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<int32_t>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(int32_t  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<int32_t,::Array<int32_t>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<int32_t>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(int32_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, int32_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(int32_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, int32_t  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(int32_t  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
// Type: System.Collections.ObjectModel::ReadOnlyCollection`1
namespace System::Collections::ObjectModel {
// cpp template
template<::il2cpp_utils::il2cpp_reference_type T>
// Is value type: false
// Dependencies: {TypeDefinitionIndex(TypeDefinitionIndex(2613)), TypeDefinitionIndex(TypeDefinitionIndex(3815))}
// Self: GenericInstantiation(GenericInstantiation { tdi: TypeDefinitionIndex(3815), inst: 2 })
// CS Name: ::System.Collections.ObjectModel::ReadOnlyCollection`1<T>*
class CORDL_TYPE ReadOnlyCollection_1<T> : public ::System::Object {
public:
// Declarations
/// @brief The size of the true reference type
static constexpr auto  __IL2CPP_REFERENCE_TYPE_SIZE{0x20};

/// @brief The size this ref type adds onto its base type, may evaluate to 0
 uint8_t  __fields[0x20 - sizeof(::System::Object)]{};

/// @brief Field list offset 0x10
 __declspec(property(get=__get_list, put=__set_list)) ::System::Collections::Generic::IList_1<T>*  list;

/// @brief Field _syncRoot offset 0x18
 __declspec(property(get=__get__syncRoot, put=__set__syncRoot)) ::System::Object*  _syncRoot;

 __declspec(property(get=get_Count)) int32_t  Count;

 __declspec(property(get=get_Item)) T  Item[];

 __declspec(property(get=System_Collections_Generic_ICollection_T__get_IsReadOnly)) bool  System_Collections_Generic_ICollection_T__IsReadOnly;

 __declspec(property(get=System_Collections_Generic_IList_T__get_Item, put=System_Collections_Generic_IList_T__set_Item)) T  System_Collections_Generic_IList_T__Item[];

 __declspec(property(get=System_Collections_ICollection_get_IsSynchronized)) bool  System_Collections_ICollection_IsSynchronized;

 __declspec(property(get=System_Collections_ICollection_get_SyncRoot)) ::System::Object*  System_Collections_ICollection_SyncRoot;

 __declspec(property(get=System_Collections_IList_get_IsFixedSize)) bool  System_Collections_IList_IsFixedSize;

 __declspec(property(get=System_Collections_IList_get_IsReadOnly)) bool  System_Collections_IList_IsReadOnly;

 __declspec(property(get=System_Collections_IList_get_Item, put=System_Collections_IList_set_Item)) ::System::Object*  System_Collections_IList_Item[];

/// @brief Convert operator to "::System::Collections::Generic::IList_1<T>"
constexpr operator  ::System::Collections::Generic::IList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::ICollection_1<T>"
constexpr operator  ::System::Collections::Generic::ICollection_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IEnumerable_1<T>"
constexpr operator  ::System::Collections::Generic::IEnumerable_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::IEnumerable"
constexpr operator  ::System::Collections::IEnumerable*() noexcept;

/// @brief Convert operator to "::System::Collections::IList"
constexpr operator  ::System::Collections::IList*() noexcept;

/// @brief Convert operator to "::System::Collections::ICollection"
constexpr operator  ::System::Collections::ICollection*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyList_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyList_1<T>*() noexcept;

/// @brief Convert operator to "::System::Collections::Generic::IReadOnlyCollection_1<T>"
constexpr operator  ::System::Collections::Generic::IReadOnlyCollection_1<T>*() noexcept;

constexpr void __set_list(::System::Collections::Generic::IList_1<T>*  value) ;

constexpr ::System::Collections::Generic::IList_1<T>* __get_list() ;

constexpr ::cordl_internals::to_const_pointer<::System::Collections::Generic::IList_1<T>*> __get_list() const;

constexpr void __set__syncRoot(::System::Object*  value) ;

constexpr ::System::Object* __get__syncRoot() ;

constexpr ::cordl_internals::to_const_pointer<::System::Object*> __get__syncRoot() const;

static inline ::System::Collections::ObjectModel::ReadOnlyCollection_1<T>* New_ctor(::System::Collections::Generic::IList_1<T>*  list) ;

/// @brief Method .ctor addr 0x0 size 0xffffffffffffffff virtual false final false
inline void _ctor(::System::Collections::Generic::IList_1<T>*  list) ;

/// @brief Method get_Count addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t get_Count() ;

/// @brief Method get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline T get_Item(int32_t  index) ;

/// @brief Method Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool Contains(T  value) ;

/// @brief Method CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void CopyTo(::ArrayW<T,::Array<T>*>  array, int32_t  index) ;

/// @brief Method GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::Generic::IEnumerator_1<T>* GetEnumerator() ;

/// @brief Method IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t IndexOf(T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__get_IsReadOnly() ;

/// @brief Method System.Collections.Generic.IList<T>.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline T System_Collections_Generic_IList_T__get_Item(int32_t  index) ;

/// @brief Method System.Collections.Generic.IList<T>.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__set_Item(int32_t  index, T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Add(T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_ICollection_T__Clear() ;

/// @brief Method System.Collections.Generic.IList<T>.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__Insert(int32_t  index, T  value) ;

/// @brief Method System.Collections.Generic.ICollection<T>.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_Generic_ICollection_T__Remove(T  value) ;

/// @brief Method System.Collections.Generic.IList<T>.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_Generic_IList_T__RemoveAt(int32_t  index) ;

/// @brief Method System.Collections.IEnumerable.GetEnumerator addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() ;

/// @brief Method System.Collections.ICollection.get_IsSynchronized addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_ICollection_get_IsSynchronized() ;

/// @brief Method System.Collections.ICollection.get_SyncRoot addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_ICollection_get_SyncRoot() ;

/// @brief Method System.Collections.ICollection.CopyTo addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_ICollection_CopyTo(::System::Array*  array, int32_t  index) ;

/// @brief Method System.Collections.IList.get_IsFixedSize addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsFixedSize() ;

/// @brief Method System.Collections.IList.get_IsReadOnly addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_get_IsReadOnly() ;

/// @brief Method System.Collections.IList.get_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline ::System::Object* System_Collections_IList_get_Item(int32_t  index) ;

/// @brief Method System.Collections.IList.set_Item addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_set_Item(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Add addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_Add(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Clear addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Clear() ;

/// @brief Method IsCompatibleObject addr 0x0 size 0xffffffffffffffff virtual false final false
static inline bool IsCompatibleObject(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Contains addr 0x0 size 0xffffffffffffffff virtual true final true
inline bool System_Collections_IList_Contains(::System::Object*  value) ;

/// @brief Method System.Collections.IList.IndexOf addr 0x0 size 0xffffffffffffffff virtual true final true
inline int32_t System_Collections_IList_IndexOf(::System::Object*  value) ;

/// @brief Method System.Collections.IList.Insert addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Insert(int32_t  index, ::System::Object*  value) ;

/// @brief Method System.Collections.IList.Remove addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_Remove(::System::Object*  value) ;

/// @brief Method System.Collections.IList.RemoveAt addr 0x0 size 0xffffffffffffffff virtual true final true
inline void System_Collections_IList_RemoveAt(int32_t  index) ;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "&&", def_value: None }]
// @brief delete move ctor to prevent accidental deref moves
ReadOnlyCollection_1(ReadOnlyCollection_1 && ) = delete;

// Ctor Parameters [CppParam { name: "", ty: "ReadOnlyCollection_1", modifiers: "const&", def_value: None }]
// @brief delete copy ctor to prevent accidental deref copies
ReadOnlyCollection_1(ReadOnlyCollection_1 const& ) = delete;

protected:
// Ctor Parameters []
// @brief default ctor
 ReadOnlyCollection_1()  = default;
public:


// Fields


// Properties


// Methods

static constexpr bool __IL2CPP_IS_VALUE_TYPE = false;
};
// Non member Declarations
} // namespace end def System::Collections::ObjectModel
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::System::Collections::ObjectModel::ReadOnlyCollection_1, "System.Collections.ObjectModel", "ReadOnlyCollection`1");
